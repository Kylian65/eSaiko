Oui, je peux lire ce fichier ! Il s'agit d'un document technique tr√®s d√©taill√© pour le module ESaiko destin√© √† Dolibarr v21.

R√©sum√© du contenu
Ce document pr√©sente les sp√©cifications techniques compl√®tes d'un module de gestion des services d'accompagnement administratif. Voici les points cl√©s :

üéØ Objectif principal
Le module ESaiko est con√ßu pour g√©rer les services d'accompagnement administratif pour trois types de clients :

Particuliers
Associations
Entreprises
üèóÔ∏è Architecture modulaire
Le module se compose de 5 sous-modules interconnect√©s :

Module Client 360¬∞ - Vue consolid√©e avec timeline des interactions
Module Gestion des Services/Prestations - Suivi des prestations et facturation
Module Dossiers Particuliers - Workflows sp√©cialis√©s (Banque de France, CAF, etc.)
Module T√¢ches et Suivi Op√©rationnel - D√©coupage en t√¢ches avec checklists dynamiques
Module Abonnements - Gestion des abonnements clients avec analyse budg√©taire
üìÅ Structure technique tr√®s compl√®te
Le document d√©taille :

Structure des r√©pertoires avec plus de 100 fichiers PHP, JS, CSS
API REST compl√®te avec endpoints sp√©cialis√©s
Classes m√©tier organis√©es par domaine fonctionnel
S√©curit√© renforc√©e (chiffrement AES-256, 2FA, permissions granulaires)
Design responsive avec approche "Mobile First"
üîß Fonctionnalit√©s avanc√©es
Champs dynamiques configurables
Workflows adaptatifs par type de proc√©dure
Gestion des intervenants externes/partenaires
Timeline unifi√©e des communications
Syst√®me de tags personnalisables
Tableaux de bord configurables
Le document fait plus de 1000 lignes et contient des sp√©cifications tr√®s d√©taill√©es pour chaque interface et fonctionnalit√©. Souhaitez-vous que je vous explique une section particuli√®re en d√©tail ?

You said: Tr√®s bien, lis ce document et je
Tr√®s bien, lis ce document et je t'envoie un autre cahier des charges. Fusionne et d√©veloppe les deux ensemble
Copilot said: Parfait ! J'ai bien lu et analys√©
Parfait ! J'ai bien lu et analys√© le document technique d√©taill√© du module ESaiko pour Dolibarr v21.

üìã Ce que j'ai retenu du document actuel :

Module complet de gestion d'accompagnement administratif
5 sous-modules interconnect√©s (Client 360¬∞, Prestations, Dossiers Particuliers, T√¢ches, Abonnements)
Architecture technique tr√®s d√©taill√©e avec plus de 100 fichiers
Fonctionnalit√©s avanc√©es (champs dynamiques, workflows, s√©curit√© renforc√©e)
Interface responsive avec tableaux de bord configurables
Je suis pr√™t √† recevoir votre nouveau cahier des charges pour fusionner et d√©velopper les deux documents ensemble.

üîÑ Je vais pouvoir :

Identifier les compl√©mentarit√©s et synergies
Harmoniser les sp√©cifications techniques
Enrichir les fonctionnalit√©s existantes
R√©soudre les √©ventuels conflits ou redondances
Produire une sp√©cification unifi√©e et coh√©rente
Envoyez-moi le second document quand vous √™tes pr√™t !

You said: Parfait. Je comprends que vous souhaitez que
Parfait. Je comprends que vous souhaitez que j'int√®gre l'ensemble de mes propositions de modifications, d'am√©liorations et de nouvelles fonctionnalit√©s, ainsi que la roadmap d√©taill√©e, directement dans le "Cahier des Charges Technique et Fonctionnel ‚Äì Module eLaska pour Dolibarr (Version Finale consolid√©e V4.0)" que vous m'avez fourni.

Ci-dessous, vous trouverez cette version mise √† jour et enrichie. J'ai veill√© √† ins√©rer les ajouts de mani√®re coh√©rente au sein de votre structure existante, en d√©veloppant les sections concern√©es ou en en cr√©ant de nouvelles si n√©cessaire, notamment pour la roadmap.

**Cahier des Charges Technique et Fonctionnel ‚Äì Module eLaska pour Dolibarr (Version 5.0 ‚Äì Mise √† jour par IA avec fonctionnalit√©s √©tendues et roadmap)**

**Date de r√©daction :** 2025-05-27
**Derni√®re mise √† jour :** 2025-05-27 (Version 5.0 ‚Äì Int√©grant les suggestions IA et une roadmap d√©taill√©e)
**Auteur original du mod√®le de base ("Technique.txt") :** GitHub Copilot
**Client :** eLaska (Kylian65)
**Version du document de base :** 1.3
**Version de cette synth√®se :** 5.0 (Finale consolid√©e et augment√©e)

**Note :** Ce document est une version enrichie du Cahier des Charges V4.0, int√©grant des propositions d'am√©lioration, de nouvelles fonctionnalit√©s et une roadmap d√©taill√©e, issues d'une analyse approfondie des missions du cabinet eLaska.

**Table des Mati√®res**

1.  Vue d'ensemble du module
    1.1. Objectif du module
    1.2. Modules principaux (√âtendus et Pr√©cis√©s)
    1.3. Int√©gration avec les modules natifs Dolibarr
    1.4. Public Cible (Utilisateurs) (Pr√©cis√©)
    1.5. P√©rim√®tre du Module
2.  Architecture technique
    2.1. Structure des r√©pertoires et fichiers (avec ajouts)
    2.2. Principes d'Architecture G√©n√©rale
    2.3. Approche UI/UX : Portail Client en SPA et Backoffice Am√©lior√©
    2.4. S√©curit√© (avec pr√©cisions sur le chiffrement)
    2.5. Responsive design et Ic√¥nes
3.  Structure d√©taill√©e des interfaces
    3.1. Menu principal eLaska (Backoffice) (Pr√©cis√© et enrichi)
    3.2. Tableaux de bord eLaska (Backoffice - Vues Gestionnaire et R√¥les) (Enrichi)
    3.3. Module C≈ìur : Gestion des Tiers (Backoffice) (Enrichi : Cr√©ateurs, Intervenants Externes, Organismes Locaux)
    3.4. Module Gestion Centralis√©e des Dossiers G√©n√©raux (Backoffice) (Pr√©cis√© : timelines, suivi temps/co√ªts)
    3.5. Module Portail Web Client & Communication (SPA React) (Fortement enrichi : sections sp√©cifiques, fonctionnalit√©s interactives)
    3.6. Module Accompagnement Sp√©cifique des Particuliers (Backoffice) (Pr√©cis√© : Objectifs de Vie, D√©marches Complexes)
    3.7. Module Accompagnement Sp√©cifique des Associations (Backoffice) (Enrichi : Suivi Financements, Instances)
    3.8. Module Conseil & Gestion Externalis√©e TPE/PME (Backoffice)
    3.9. Module Conseil en Gestion de Patrimoine, Assurances, Cr√©dits & Sinistres (Backoffice)
    3.10. Module Gestion des Services/Prestations (Backoffice)
    3.11. Module T√¢ches et Suivi Op√©rationnel (Backoffice) (Pr√©cis√© : granularit√© temps/co√ªts)
    3.12. Module Abonnements Clients (Backoffice)
    3.13. Module Recouvrements (Backoffice)
    3.14. Module de Pilotage Interne Avanc√© (Backoffice - Vue Gestionnaire) (Enrichi : performance services)
    3.15. Module Base de Connaissances Interne & Veille R√©glementaire (Backoffice) (Enrichi : liaisons, extraits, veille locale)
    3.16. Module Gestion des Partenariats & Apporteurs d'Affaires (Backoffice) (Enrichi : CRM interne)
    3.17. Module Enqu√™tes de Satisfaction Client (Backoffice & Portail)
    3.18. [NOUVEAU] Module Prospection & Gestion des Opportunit√©s (CRM Interne eLaska)
4.  Syst√®mes transversaux
    4.1. Param√®tres √âtendus et Personnalisation Totale (Enrichi : num√©rotation, menus/TB par r√¥le)
    4.2. Syst√®me de champs dynamiques et conditionnels (Attributs Suppl√©mentaires)
    4.3. Syst√®me de Tags/√âtiquettes personnalisables
    4.4. Historique et Suivi D√©taill√© des Communications et Envois (Pr√©cis√© : intervenants externes)
    4.5. Syst√®me de Notifications & Alertes Intelligentes
    4.6. Suivi des Consommations et Frais Engag√©s (Pr√©cis√© : granularit√©)
    4.7. [NOUVEAU] Workflows d'Automatisation √âvolu√©s Bas√©s sur D√©clencheurs
    4.8. [NOUVEAU] Gestion Affin√©e des Consentements RGPD
5.  Structure des donn√©es
    5.1. Tables principales (avec ajouts pour nouvelles fonctionnalit√©s)
    5.2. Tables secondaires
    5.3. Tables pour la Personnalisation et les Param√®tres √âtendus
6.  Int√©grations
    6.1. Int√©gration Google Drive (Optionnelle)
    6.2. Int√©gration Email IMAP
    6.3. Notifications Push
    6.4. Int√©gration Google Agenda (pour Prise de RDV en Ligne) (Pr√©cis√© : ID externe)
    6.5. Int√©gration Signature √âlectronique (Optionnelle)
    6.6. Int√©gration avec autres syst√®mes (API Publique)
7.  Roadmap de d√©veloppement (D√©taill√©e et Phas√©e)
8.  Sp√©cifications techniques
    8.1. Exigences syst√®me et D√©pendances
    8.2. Performance
    8.3. S√©curit√© (Approfondi, avec point sur chiffrement et cl√©s)
    8.4. Compatibilit√© mobile et Responsive Design
    8.5. Maintenance et mises √† jour
    8.6. Backup et r√©cup√©ration
    8.7. Monitoring et journalisation

---

**1. Vue d'ensemble du module**

**1.1 Objectif du module**
Le module eLaska est con√ßu pour g√©rer de mani√®re compl√®te les services d'accompagnement administratif, financier, de gestion et de conseil pour particuliers, associations, cr√©ateurs d'entreprises et entreprises (TPE/PME). Il permet le suivi des dossiers via des timelines hautement personnalisables avec √©tapes progressives (modifiables par instance) et badges modernes (indiquant clairement leur statut, ex: gris√©es si non actives/termin√©es), la gestion des t√¢ches, le stockage documentaire (avec option Google Drive et Coffre-Fort Num√©rique Avanc√© pour particuliers), la gestion des communications (avec templates emails HTML personnalisables et sujets dynamiques, et suivi des √©changes avec intervenants externes) et offre une vision client √† 360¬∞ via un portail web client SPA. Le module vise l'optimisation du temps de traitement, l'am√©lioration de la qualit√© du suivi, la tra√ßabilit√© des √©changes, et int√®gre des fonctionnalit√©s avanc√©es de recouvrement, de num√©rotation personnalisable des objets m√©tier (incluant des variables dynamiques), de personnalisation totale (ic√¥nes Font Awesome, champs, vues, menus/tableaux de bord par r√¥le) et de pilotage interne. Il inclut des outils sp√©cialis√©s pour le conseil en gestion de patrimoine, la gestion des contrats d'assurances, le montage et le suivi de dossiers de cr√©dit, ainsi que la gestion des sinistres. La prise de rendez-vous en ligne (avec synchronisation Google Agenda et r√©f√©rence ID √©v√©nement), un accompagnement bas√© sur les objectifs de vie des clients particuliers, et une gestion fine des consentements RGPD sont √©galement pr√©vus. Le suivi d√©taill√© des consommations (frais, fournitures) et des heures de travail (avec granularit√© fine) par dossier, prestation, t√¢che et √©tape est aussi int√©gr√©, avec des outils de veille sur les dispositifs locaux/r√©gionaux (Occitanie/Tarbes) et un annuaire de partenaires.

**1.2 Modules principaux (√âtendus et Pr√©cis√©s)**
* C≈ìur : Gestion des Tiers (incluant typologies Cr√©ateurs, Intervenants Externes, Organismes, Partenaires)
* Gestion Centralis√©e des Dossiers G√©n√©raux (avec r√©f√©rences eLaska personnalisables et mod√®les de timelines par type de dossier, y compris Cr√©ation d'Entreprise)
* Portail Web Client & Communication (SPA React, avec sections et fonctionnalit√©s enrichies)
* Accompagnement Sp√©cifique des Particuliers (incluant Coffre-Fort Num√©rique Avanc√©, Module "Mes Objectifs de Vie & Projets", et suivi "D√©marches Complexes en Cours")
* Accompagnement Sp√©cifique des Associations (incluant Instances Statutaires, Obligations R√©glementaires, et module "Demandes de Financement/Subvention")
* Accompagnement Sp√©cifique des Cr√©ateurs d'Entreprises (Suivi parcours cr√©ation, aides) ‚Äì *Gestion via type de Tiers et mod√®les de dossiers/timelines d√©di√©s*
* Conseil & Gestion Externalis√©e TPE/PME (incluant Gestion D√©l√©gu√©e Contrats Fournisseurs)
* Module Conseil en Gestion de Patrimoine, Assurances, Cr√©dits & Sinistres
    * Sous-module : Bilan & Strat√©gie Patrimoniale
    * Sous-module : Contrats d'Assurance
    * Sous-module : Dossiers de Cr√©dit
    * Sous-module : Gestion des Sinistres
* Gestion des Services/Prestations (transversal)
* T√¢ches et Suivi Op√©rationnel (transversal, incluant suivi d√©taill√© heures/consommations par √©tape et granularit√© fine)
* Abonnements Clients (hors contrats d'assurance/cr√©dit g√©r√©s sp√©cifiquement)
* Recouvrements (transversal)
* [NOUVEAU] Prospection & Gestion des Opportunit√©s (CRM Interne eLaska)
* Pilotage Interne & Rapports Avanc√©s (incluant performance des services)
* Base de Connaissances Interne & Veille R√©glementaire (enrichie : liaisons intelligentes, extraits clients, veille dispositifs locaux Occitanie/Tarbes)
* Gestion des Partenariats & Apporteurs d'Affaires (avec Annuaire Dynamique des Partenaires Locaux/R√©gionaux)
* Enqu√™tes de Satisfaction Client
* Param√®tres et Personnalisation Approfondie du module eLaska (incluant workflows automatis√©s et gestion des consentements RGPD)

**1.3 Int√©gration avec les modules natifs Dolibarr**
L'objectif est une fusion totale avec les donn√©es de Dolibarr. Le module eLaska s'int√©grera de mani√®re transparente et compl√®te avec les modules natifs suivants:
* **Tiers (Clients, Prospects, Partenaires, Fournisseurs) :** Utilisation du module "Tiers" de Dolibarr comme base. Synchronisation et enrichissement des fiches tiers (avec typologies eLaska : Particulier, Association, Entreprise, Cr√©ateur, Intervenant Externe, Organisme, etc.). Gestion des mandats.
* **Facturation :** G√©n√©ration de propositions, commandes, factures depuis les prestations eLaska, incluant les temps pass√©s facturables et les consommations/frais refacturables (avec granularit√© fine). Lien temps pass√©/facturation. Suivi des statuts. Utilisation du module "Factures" pour la gestion des paiements.
* **Projets et T√¢ches / Feuilles de temps :** Cr√©ation de projets/t√¢ches Dolibarr pour dossiers/t√¢ches eLaska. Assignation, suivi de statut, checklists, lien avec "Feuilles de temps" de Dolibarr pour le suivi des heures, avec liens vers les objets eLaska (dossiers, prestations, √©tapes de timeline).
* **Gestion Documentaire (GED) :** Utilisation du module GED de Dolibarr pour stockage, classement, pr√©visualisation, versioning. Distinction et s√©curisation pour le Coffre-Fort Num√©rique Avanc√©.
* **Messagerie et Communication (Notes/Tickets/Email) :** Utilisation de "Notes" ou "Tickets" comme base pour le fil de discussion par dossier (y compris avec intervenants externes), notifications. Int√©gration IMAP pour emails.
* **Agenda et √âch√©ances :** Ajout des √©ch√©ances eLaska dans l'"Agenda" Dolibarr. Rappels et alertes. La planification de RDV par les clients via le portail se synchronisera avec les Google Agendas des conseillers (avec ID √©v√©nement Google Calendar stock√©) et pourra √™tre refl√©t√©e dans l'agenda Dolibarr interne.
* **Produits/Services :** Pour le catalogue des prestations eLaska.
* **Contrats :** Pour formaliser les accords de services et abonnements eLaska.
* **Banque :** Pour le suivi des r√®glements.
* **Notes de frais :** Si applicable aux prestations ou consommations eLaska.

**1.4 Public Cible (Utilisateurs) (Pr√©cis√©)**
* **Gestionnaires / Conseillers du Cabinet eLaska (Utilisateurs Internes) :** Utilisent le back-office Dolibarr enrichi par eLaska. B√©n√©ficient d'un design am√©lior√©, de composants interactifs, et de tableaux de bord/menus personnalis√©s selon leur r√¥le.
* **Clients du Cabinet (Utilisateurs Externes via Portail Web SPA) :**
    * Particuliers
    * Cr√©ateurs d'Entreprises (en phase de pr√©-cr√©ation/lancement)
    * Repr√©sentants d'Associations
    * Repr√©sentants d'Entreprises (TPE/PME, Artisans, Professions Lib√©rales)
    Ils acc√®dent √† un portail web SPA s√©curis√©, offrant une exp√©rience utilisateur fluide et moderne, pour consulter leurs informations, dossiers (avec timelines et commentaires conseiller), documents (y compris Coffre-Fort), √©changer avec le cabinet, suivre l'avancement, prendre des rendez-vous, g√©rer leurs consentements, et interagir avec des fonctionnalit√©s sp√©cifiques √† leur profil (ex: Objectifs de Vie, Parcours Cr√©ation).
* **[Optionnel] Apporteurs d'Affaires (Utilisateurs Externes via Portail Limit√©) :** Pour suivi de leurs leads et commissions, si cette fonctionnalit√© est d√©velopp√©e.

**1.5 P√©rim√®tre du Module**
Le module couvrira de mani√®re exhaustive la gestion des tiers (tous types), le suivi d√©taill√© des dossiers multi-domaines (administratif, social, fiscal, RH, financier, conseil en patrimoine, assurances, cr√©dits, sinistres, cr√©ation d'entreprise), la gestion documentaire avanc√©e (avec option Google Drive et Coffre-Fort Num√©rique), la communication multicanale int√©gr√©e (avec templates emails HTML personnalisables, suivi des √©changes avec clients et intervenants externes, et options de "lu/pris en compte"), le suivi des t√¢ches (avec granularit√© fine) et des √©ch√©ances (avec lien vers temps et consommations), la gestion des prestations et abonnements, les processus de facturation et de recouvrement, la num√©rotation automatique et personnalisable des objets m√©tier (avec variables dynamiques). Il comprendra un portail client SPA riche en fonctionnalit√©s (incluant prise de RDV, suivi d'objectifs de vie, parcours cr√©ation, simulateurs simples, gestion des consentements), des outils de pilotage interne performants (incluant des composants interactifs et rapports sur la performance des services), une base de connaissances enrichie (avec veille locale Occitanie/Tarbes et annuaire de partenaires), des outils de veille, des workflows automatis√©s, et des options de personnalisation √©tendues pour le module et ses interfaces (y compris les ic√¥nes de menu et les vues par r√¥le).

**2. Architecture technique**

**2.1 Structure des r√©pertoires et fichiers (avec ajouts)**
La structure sera bas√©e sur celle d√©taill√©e dans le document "Technique.txt", avec les adaptations de nommage pour "elaska" :
* `htdocs/custom/elaska/` : R√©pertoire principal du module.
    * `admin/` : Configuration g√©n√©rale (`elaska_setup.php`), workflows (`workflows.php`, `workflow_triggers.php`), permissions (`permissions.php`), champs dynamiques (`dynamicfields.php`), mod√®les de documents et d'emails HTML (`templates.php`), gestion des ic√¥nes de menu, mod√®les de num√©rotation (`numbering_models.php`), configuration des types de consommations, configuration des r√¥les et vues de tableau de bord/menu, configuration des consentements RGPD, etc.
    * `api/` : Endpoints REST pour les fonctionnalit√©s du module (clients, dossiers, t√¢ches, portail, RDV, objectifs de vie, etc.), essentiels pour la communication avec le portail client SPA et les composants React internes.
    * `class/` : Classes m√©tier PHP (ex: `elaskaclient.class.php`, `elaskadossier.class.php`, `elaskacreateur.class.php`, `elaskaintervenantexterne.class.php`, `elaskapatrimoine.class.php`, `elaskaassurance.class.php`, `elaskacredit.class.php`, `elaskasinistre.class.php`, `elaskafinancementasso.class.php`, `elaskaopportunite.class.php`) et classes utilitaires (ex: `elaskahelper.class.php`, `elaskamail.class.php`, `elaskanumero.class.php`, `elaskagooglecalendar.class.php`, `elaskaworkflow.class.php`, `elaskaconsent.class.php`).
    * `core/` : Descripteurs de module (`modelaska.php`), sous-modules (ex: `modElaskaClient.php`), triggers (ex: pour workflows), bo√Ætes de tableau de bord (ex: `elaska_dashboard_box.php`).
    * `css/` : Feuilles de style pour le module (`elaska.css`), responsive (`elaska-responsive.css`), th√®mes (`elaska-colors.css`), `elaska-icons.css` (pour Font Awesome et ic√¥nes personnalis√©es), Kanban, timeline, etc.
    * `img/` : Ic√¥nes et images sp√©cifiques au module.
    * `js/` : Scripts JavaScript traditionnels et bundles pour composants React (Kanban, timeline, dashboards dynamiques, gestion des objectifs de vie portail, interface prise de RDV portail, simulateurs simples portail).
    * `langs/` : Fichiers de traduction (ex: `fr_FR/elaska.lang`).
    * `lib/` : Biblioth√®ques tierces (ex: Font Awesome si embarqu√©e, SDK Google API Client pour PHP).
    * `sql/` : Scripts d'installation et de mise √† jour de la base de donn√©es (`llx_elaska_*.sql`), donn√©es initiales (types de dossiers, t√¢ches, types d'objectifs de vie, types d'intervenants, etc.).
    * `tpl/` : Templates HTML (Smarty/Twig) pour les vues backoffice.
    * `portail/` : Contient le build de l'application React pour le portail client.
* Fichiers PHP principaux pour chaque page/vue du module backoffice.
* `changelog.md`, `README.md`, `COPYING`.

**2.2 Principes d'Architecture G√©n√©rale**
* D√©veloppement en tant qu'extension (module externe) de Dolibarr.
* Langage PHP, respectant les standards de Dolibarr pour le backoffice.
* Utilisation des objets, classes, hooks et API natifs de Dolibarr autant que possible.

**2.3 Approche UI/UX : Portail Client en SPA et Backoffice Am√©lior√©**
* **Portail Client Web :**
    * D√©velopp√© en tant que Single Page Application (SPA). Technologie privil√©gi√©e : ReactJS avec biblioth√®ques UI modernes, react-router-dom, React Query/SWR, axios.
    * H√©berg√© sur le m√™me serveur web que Dolibarr, communiquant via API REST eLaska.
    * Utilisation d'ic√¥nes (ex: Font Awesome) pour une interface claire et esth√©tique.
* **Backoffice Dolibarr (Interfaces du Module eLaska) :**
    * **Am√©lioration du Design :** Design soign√© et modernis√© gr√¢ce √† CSS personnalis√© et templates bien structur√©s.
    * **Utilisation d'Ic√¥nes :** Int√©gration de Font Awesome pour enrichir visuellement les menus, boutons, et autres √©l√©ments d'interface du module eLaska.
    * **"√élots d'Interactivit√©" React :** Pour fonctionnalit√©s sp√©cifiques (Kanban, timelines, dashboards avanc√©s), des composants React pourront √™tre int√©gr√©s. Les timelines de suivi de dossier (ou prestation/formulaire), hautement configurables et modifiables par instance, seront des candidats de choix pour cette approche.
    * **Tableaux de Bord et Menus Adaptatifs :** Configuration possible de l'affichage en fonction du r√¥le de l'utilisateur interne eLaska.

**2.4 S√©curit√© (avec pr√©cisions sur le chiffrement)**
* Authentification √† double facteur pour les gestionnaires.
* Authentification robuste pour le portail client SPA (tokens JWT ou sessions Dolibarr s√©curis√©es via API).
* **Chiffrement AES-256 des donn√©es sensibles identifi√©es :** NIR, identifiants CAF/P√¥le Emploi, num√©ro fiscal, d√©tails bancaires avanc√©s (RIB si stock√© en dehors du module Banque natif), mots de passe d'espaces clients tiers si stock√©s, informations m√©dicales sensibles (ex: pour dossiers MDPH), contenu du Coffre-Fort Num√©rique Avanc√©.
    * **Strat√©gie de Chiffrement (Point d'attention B.8) :** Discussion approfondie avec le d√©veloppeur pour d√©finir la strat√©gie optimale (chiffrement au niveau champ pour certains √©l√©ments, chiffrement de tables d√©di√©es pour d'autres). √âtude de l'utilisation des capacit√©s de chiffrement de Dolibarr ou du SGBD. Gestion s√©curis√©e et robuste des cl√©s de chiffrement/d√©chiffrement, en consid√©rant les impacts sur la performance et la recherche.
* Syst√®me de permissions granulaires, configurable par l'administrateur du module, bas√© sur les r√¥les Dolibarr et extensible pour les sp√©cificit√©s eLaska.
* Journal d'audit complet pour la tra√ßabilit√© des acc√®s et modifications de donn√©es sensibles, y compris la gestion des consentements.
* Protection contre les failles web courantes (CSRF sur tous les formulaires Dolibarr, XSS, Injections SQL) en suivant les bonnes pratiques de Dolibarr et pour les API.
* Validation et nettoyage syst√©matique des entr√©es utilisateur.
* Niveaux de confidentialit√© pour documents et notes.
* Gestion s√©curis√©e des tokens OAuth2 pour int√©grations Google Drive et Google Agenda.

**2.5 Responsive design et Ic√¥nes**
* Portail Client SPA : "Mobile First", adaptation √† toutes tailles d'√©cran.
* Backoffice Module eLaska : Pages eLaska responsives via CSS d√©di√© (`elaska-responsive.css`). Composants React int√©gr√©s √©galement responsives.
* Ic√¥nes : Biblioth√®que Font Awesome int√©gr√©e (`elaska-icons.css`) pour une richesse et coh√©rence visuelle.

**3. Structure d√©taill√©e des interfaces**

**3.1 Menu principal eLaska (Backoffice) (Pr√©cis√© et enrichi)**
Accessible depuis le menu Dolibarr, structur√© et personnalisable (avec possibilit√© de variations par r√¥le utilisateur interne) :
* Tableau de bord eLaska
* [NOUVEAU] Prospection & Opportunit√©s
* Tiers (Clients, Cr√©ateurs, Partenaires, Organismes, Intervenants Externes, Apporteurs d'Affaires)
* Prestations/Services eLaska
* Dossiers (avec sous-menus par type : Particulier, Association, Cr√©ation d'Entreprise, TPE/PME, Recouvrement, etc.)
* Gestion de Patrimoine & Financier
    * Bilans Patrimoniaux
    * Contrats d'Assurance
    * Dossiers de Cr√©dit
    * Gestion des Sinistres
    * Suivi des Investissements
* Accompagnement Sp√©cifique (raccourcis ou sections d√©di√©es)
    * Associations (Financements, Instances)
* T√¢ches & Suivi Op√©rationnel
* Abonnements Clients eLaska
* Communications (avec suivi des √©changes avec intervenants externes)
* Base de Connaissances & Veille R√©glementaire (incluant veille locale et dispositifs Occitanie/Tarbes)
* Partenariats & Apporteurs d'Affaires (avec Annuaire Partenaires Locaux)
* Enqu√™tes de Satisfaction
* Configuration eLaska (incluant personnalisation des menus/tableaux de bord par r√¥le)
* Ic√¥nes personnalisables pour chaque entr√©e (Font Awesome via config eLaska).

**3.2 Tableaux de bord eLaska (Backoffice - Vues Gestionnaire et R√¥les) (Enrichi)**
* **Widgets standards et configurables par r√¥le (A.1) :** T√¢ches (mes t√¢ches, t√¢ches en retard), Dossiers actifs/r√©cents, √âch√©ances critiques, Alertes/notifications, Communications r√©centes, Dossiers bloqu√©s, Activit√© r√©cente du portail client, Indicateurs de performance cl√©s (KPIs) adapt√©s au r√¥le, Nuage de Tags pertinents, Derni√®res fiches de Veille R√©glementaire/Locale, Activit√© des Apporteurs d'Affaires, Synth√®se Satisfaction Client, RDV √† venir (synchronis√©s Google Agenda).
* **Vue Gestionnaire :** Acc√®s √† des widgets de pilotage global du cabinet (charge de travail par conseiller, performance des services, etc.).

**3.3 Module C≈ìur : Gestion des Tiers (Backoffice) (Enrichi : Cr√©ateurs, Intervenants Externes, Organismes Locaux)**
* **3.3.1 Liste des Tiers :** Filtres avanc√©s par type de Tiers eLaska (Particulier, Association, Entreprise, Cr√©ateur, Intervenant Externe, Organisme Local/R√©gional, Partenaire, Apporteur d'Affaires).
* **3.3.2 Fiche Tiers eLaska :**
    * Onglets et champs sp√©cifiques en fonction du type de Tiers.
    * **Pour "Cr√©ateur d'Entreprise" (A.2) :** Section d√©di√©e au suivi du parcours de cr√©ation, aides vis√©es/obtenues (avant formalisation en dossier).
    * **Pour "Intervenant Externe" (B.1) :** Champs pour sp√©cialit√©, coordonn√©es directes, notes sur la collaboration.
    * **Pour "Organisme Local/R√©gional" (B.9) :** Champs pour services offerts, contacts cl√©s, proc√©dures sp√©cifiques (lien vers Base de Connaissances).
    * Onglet "eLaska - Informations D√©taill√©es" (pour Particuliers) :
        * Section "Patrimoine & Objectifs" : Profil investisseur, Objectifs patrimoniaux (texte/s√©lection), Horizon, Connaissance produits, Situation nette estim√©e. Lien vers le module "Mes Objectifs de Vie & Projets" du client.
    * Onglet "Param√®tres de Rendez-vous en Ligne" (pour Conseillers) : Lien Google Agenda, types RDV proposables, plages dispo, temps tampon.
    * Onglet "Consentements RGPD" : Historique et statut des consentements obtenus.
    * Onglet "Dossiers Associ√©s" : Liste de tous les dossiers eLaska li√©s √† ce tiers.
    * Onglet "Intervenants Externes Associ√©s" (B.1) : Sur la fiche client, liste des intervenants externes impliqu√©s dans ses dossiers, avec leur r√¥le.
* **3.3.3 Gestion des Partenariats et Apporteurs d'Affaires** (Voir aussi module 3.18 Prospection)

**3.4 Module Gestion Centralis√©e des Dossiers G√©n√©raux (Backoffice) (Pr√©cis√© : timelines, suivi temps/co√ªts)**
* **3.4.1 Liste des Dossiers :** Filtres par type (Particulier, Association, Cr√©ation d'Entreprise, TPE/PME, etc.), statut, conseiller. R√©f√©rence eLaska (avec num√©rotation personnalisable B.6).
* **3.4.2 Fiche Dossier Compl√®te (Vue 360¬∞ Interne) :**
    * En-t√™te : R√©f√©rence eLaska, Tiers principal, Conseiller r√©f√©rent, Statut global.
    * **Onglet Principal "Suivi / Timeline" :** Timeline verticale dynamique, personnalisable (mod√®les par type de dossier, modifiable par instance), progressive, √©tapes avec badges/statuts visuels (ex: gris√©es si non actives/termin√©es, couleurs selon criticit√©/retard), commentaires conseiller (avec option de visibilit√© client).
    * Onglet "T√¢ches Associ√©es" : Liste des t√¢ches eLaska li√©es au dossier.
    * Onglet "Documents (GED)" : Acc√®s aux documents du dossier.
    * Onglet "Communications" : Historique des √©changes (emails, notes d'appels, courriers, messages portail) avec le client ET les intervenants externes li√©s au dossier (B.1).
    * **Onglet "Temps Pass√© & Consommations" (B.4) :** Tableau r√©capitulatif des heures saisies et des consommations (frais, fournitures) sp√©cifiquement pour ce dossier, avec possibilit√© de lier chaque entr√©e √† une t√¢che ou une √©tape de la timeline. Granularit√© fine du suivi.
    * Onglet "Intervenants Externes" (B.1) : Gestion des liaisons avec les intervenants externes pour ce dossier sp√©cifique (r√¥le, contact).
    * Onglets sp√©cifiques selon le type de dossier (ex: onglet "Financements" pour un dossier Association).
* **3.4.3 Gestion D√©l√©gu√©e des Contrats Fournisseurs du Client** (Pour TPE/PME, int√©gr√© dans leurs dossiers sp√©cifiques)

**3.5 Module Portail Web Client & Communication (SPA React) (Fortement enrichi : sections sp√©cifiques, fonctionnalit√©s interactives)**
* **3.5.1 Gestion des Comptes Utilisateurs du Portail (Backoffice) :** Cr√©ation, activation, gestion des droits d'acc√®s aux sections sp√©cifiques.
* **3.5.2 Page d'Accueil / Tableau de Bord Principal Personnalis√© (Portail Client SPA) :**
    * Acc√®s Rapides : Bouton "Prendre Rendez-vous", "Mes Messages Non Lus", "Prochaine √âch√©ance".
    * Widgets personnalisables : Synth√®se des dossiers en cours, derni√®res communications, documents r√©cents √† valider/consulter.
    * Section "Ma Situation en un Clin d'≈íil" (Phase avanc√©e) ‚Äì voir I.5.
* **3.5.3 Section "Mes Dossiers" / "Mes Missions" (Portail Client SPA) :**
    * Liste des dossiers actifs et archiv√©s.
    * Vue D√©taill√©e : Timeline interactive avec affichage des √©tapes, de leur statut, et des commentaires du conseiller (si partag√©s).
* **3.5.4 Section "Mes Documents" (GED Int√©gr√©e - Portail Client SPA) :**
    * Acc√®s s√©curis√© aux documents partag√©s par le cabinet.
    * Espace "Coffre-Fort Num√©rique Avanc√©" (pour Particuliers) avec s√©curit√© renforc√©e (B.2, I.7).
    * Option d'int√©gration Google Drive si activ√©e.
    * Possibilit√© pour le client d'uploader des documents (avec notification au conseiller).
* **3.5.5 Section "Ma Messagerie" (Portail Client SPA) :**
    * Interface pour envoyer/recevoir des messages s√©curis√©s avec le cabinet, li√©s √† des dossiers sp√©cifiques.
    * Notification de "Lu / Pris en Compte" par le conseiller (et vice-versa pour le client - B.2).
* **3.5.6 Section "Mes √âch√©ances & Rendez-vous" (Portail Client SPA) :**
    * Visualisation des √©ch√©ances importantes (li√©es aux dossiers, t√¢ches client) et des rendez-vous planifi√©s.
* **3.5.7 Section "Mon Profil" / "Mes Param√®tres" (Portail Client SPA) :**
    * Modification des informations personnelles de base.
    * Gestion des pr√©f√©rences de notification.
    * Section "Mes Consentements RGPD" (I.4).
* **3.5.8 Sections Sp√©cifiques Modulables (Portail Client SPA) (I.1) :**
    * **A. Pour Particuliers :**
        * "Mon Patrimoine", "Mes Assurances", "Mes Cr√©dits", "Mes Sinistres" (consultation des informations g√©r√©es par eLaska).
        * "Mon Budget & Mes Abonnements" (visualisation, outils de suivi simples).
        * "Mes Objectifs de Vie & Projets" (cr√©ation, suivi, √©changes avec le conseiller ‚Äì tel que CdC).
        * "Mes D√©marches Complexes en Cours" (Retraite, MDPH, Surendettement, etc.) ‚Äì aper√ßu simplifi√© du statut.
    * **B. Pour Associations :**
        * "Suivi des Subventions & Financements" (dossiers d√©pos√©s, statuts, √©ch√©ances ‚Äì B.2).
        * "Mes Instances Statutaires" (calendrier AG/CA, acc√®s aux documents partag√©s ‚Äì B.2).
    * **C. Pour Entreprises (TPE/PME) :**
        * "Suivi des Obligations R√©glementaires Cl√©s".
        * "Mes Contrats Fournisseurs D√©l√©gu√©s".
    * **D. Pour Cr√©ateurs d'Entreprises (A.2) :**
        * "Mon Parcours Cr√©ation" (timeline interactive).
        * "Mes Aides √† la Cr√©ation" (suivi des dispositifs).
    * **E. Section Commune :** "Mes Paiements et Recouvrements."
    * **F. [Optionnel] Simulateurs Simplifi√©s** (I.3).
* **3.5.9 Fonctionnalit√©s Transversales du Portail (SPA React) :** (Notifications push, recherche, etc.)
* **3.5.10 Section "Prendre Rendez-vous" (Portail Client SPA) (Tel que CdC + B.7) :**
    * Choix Conseiller/Service, Type de RDV (avec dur√©e).
    * Affichage Disponibilit√©s (lues depuis Google Agenda conseiller via API s√©curis√©e).
    * R√©servation Cr√©neau (note optionnelle pour le client).
    * Confirmation (email client avec .ics), RDV cr√©√© dans Google Agenda conseiller et synchronis√© avec l'agenda Dolibarr/eLaska (avec r√©f√©rence ID externe Google Calendar).
    * Annulation/Reprogrammation par le client (selon r√®gles configurables par eLaska).

**3.6 Module Accompagnement Sp√©cifique des Particuliers (Backoffice) (Pr√©cis√© : Objectifs de Vie, D√©marches Complexes)**
* Int√©gration et gestion approfondie du module "Objectifs de Vie & Projets Client" (tel que CdC).
* Mod√®les de dossiers et timelines pour les "D√©marches Administratives Sp√©cifiques et Complexes" (surendettement, retraite, MDPH, etc.), avec checklists et liaisons vers la base de connaissances.

**3.7 Module Accompagnement Sp√©cifique des Associations (Backoffice) (Enrichi : Suivi Financements, Instances)**
* **3.7.1 Gestion des Instances Statutaires (AG, CA, Bureau) :** (Tel que CdC).
* **3.7.2 Suivi des Obligations R√©glementaires Sp√©cifiques aux Associations :** (Tel que CdC).
* **3.7.3 [NOUVEAU - B.3] Suivi des Demandes de Financement/Subvention :**
    * Entit√© d√©di√©e avec champs : Financeur (lien Tiers), Type d'aide, Montant, Statut (en cours, accept√©, refus√©, vers√©), Dates cl√©s, Documents associ√©s, Rapports √† fournir.
    * Tableaux de bord de suivi des financements.

**3.8 Module Conseil & Gestion Externalis√©e TPE/PME (Backoffice)**
* (Regroupe les fonctionnalit√©s pour entreprises, tel que CdC)

**3.9 Module Conseil en Gestion de Patrimoine, Assurances, Cr√©dits & Sinistres (Backoffice)**
* (Contenu des sous-modules identique √† CdC V4.0 : Bilan & Strat√©gie Patrimoniale, Contrats d'Assurance, Dossiers de Cr√©dit, Gestion des Sinistres. Chaque objet principal avec R√©f√©rence eLaska personnalisable).

**3.10 Module Gestion des Services/Prestations (Backoffice)**
* (Fiche Prestation eLaska avec R√©f√©rence eLaska, onglet "Temps Pass√© & Consommations")

**3.11 Module T√¢ches et Suivi Op√©rationnel (Backoffice) (Pr√©cis√© : granularit√© temps/co√ªts)**
* **3.11.1 Gestion des T√¢ches eLaska :** (Tel que CdC).
* **3.11.2 Suivi du Temps et Checklists :**
    * Saisie de Temps : Liaison √† Dossier, Prestation, T√¢che, et **√âtape de Timeline sp√©cifique (B.4)**.
* **3.11.3 Vues des T√¢ches (Liste, Kanban React, Calendrier) :** (Tel que CdC).

**3.12 Module Abonnements Clients (Backoffice)**
* (Fiche Abonnement avec R√©f√©rence eLaska, pour abonnements non financiers)

**3.13 Module Recouvrements (Backoffice)**
* (Dossier Recouvrement Client et Dossier Dette Organisme avec R√©f√©rence eLaska)

**3.14 Module de Pilotage Interne Avanc√© (Backoffice - Vue Gestionnaire) (Enrichi : performance services)**
* Rapports incluant temps pass√© par √©tape, consommations par dossier/type.
* [NOUVEAU] Analyse de la performance des services : temps moyen r√©el vs. estim√© par type de prestation/dossier, identification des goulets d'√©tranglement.

**3.15 Module Base de Connaissances Interne & Veille R√©glementaire (Backoffice) (Enrichi : liaisons, extraits, veille locale)**
* Articles et Fiches de veille avec R√©f√©rence eLaska.
* [NOUVEAU] Fonctionnalit√©s enrichies :
    * Liaison intelligente des articles KB √† des types de dossiers/prestations.
    * Cr√©ation d'"extraits client" (versions simplifi√©es) pour partage facile.
    * Veille active avec possibilit√© de ciblage client pour communications.
    * **Int√©gration facilit√©e des informations sur les organismes et dispositifs locaux/r√©gionaux (Tarbes, Occitanie) (B.9).**

**3.16 Module Gestion des Partenariats & Apporteurs d'Affaires (Backoffice) (Enrichi : CRM interne)**
* Suivi des partenaires, apporteurs d'affaires.
* [NOUVEAU] Annuaire dynamique et structur√© des partenaires locaux/r√©gionaux avec services, contacts.
* Suivi des leads apport√©s (lien vers Module 3.18 Prospection).

**3.17 Module Enqu√™tes de Satisfaction Client (Backoffice & Portail)**
* (Instance d'enqu√™te avec R√©f√©rence eLaska)

**3.18 [NOUVEAU] Module Prospection & Gestion des Opportunit√©s (CRM Interne eLaska)**
* **Description :** Suivi des leads (contacts non encore clients), sources (formulaires web, t√©l√©phone, apporteur d'affaires), √©tapes du cycle de vente/prospection eLaska (premier contact, RDV d√©couverte, proposition envoy√©e, en n√©gociation, gagn√©e, perdue), valeur estim√©e de l'opportunit√©, probabilit√© de conclusion.
* **Int√©gration :** Conversion d'une opportunit√© "gagn√©e" en Tiers client et cr√©ation automatique d'un premier dossier/prestation. Lien avec le module "Gestion des Partenariats & Apporteurs d'Affaires".
* **Reporting :** Tableau de bord des opportunit√©s, taux de conversion, performance par source.

**4. Syst√®mes transversaux**

**4.1 Param√®tres √âtendus et Personnalisation Totale (Enrichi : num√©rotation, menus/TB par r√¥le)**
* Interface d'Administration eLaska (`admin/`) :
    * Configurations (tel que CdC V4.0).
    * **Configuration des mod√®les de num√©rotation avec variables dynamiques (B.6).**
    * **Configuration des vues de tableaux de bord et des menus par r√¥le utilisateur interne (A.1).**
    * Configuration Prise RDV en Ligne (tel que CdC V4.0).
    * Configuration Module "Objectifs de Vie" (tel que CdC V4.0).
    * [NOUVEAU] Configuration des Workflows d'Automatisation (voir 4.7).
    * [NOUVEAU] Configuration des Consentements RGPD (voir 4.8).
    * [NOUVEAU] Configuration des Simulateurs Simples du portail.

**4.2 Syst√®me de champs dynamiques et conditionnels (Attributs Suppl√©mentaires)**
* (Identique √† CdC V4.0)

**4.3 Syst√®me de Tags/√âtiquettes personnalisables**
* (Identique √† CdC V4.0)

**4.4 Historique et Suivi D√©taill√© des Communications et Envois (Pr√©cis√© : intervenants externes)**
* Suivi de tous les √©changes (emails, courriers, appels, messages portail) li√©s √† un client ou un dossier, **y compris les communications avec les intervenants externes (B.1)** pertinents pour ce dossier.

**4.5 Syst√®me de Notifications & Alertes Intelligentes**
* (Identique √† CdC V4.0)

**4.6 Suivi des Consommations et Frais Engag√©s (Pr√©cis√© : granularit√©)**
* Saisie, liaison aux dossiers/prestations/t√¢ches/**√©tapes de timeline sp√©cifiques (B.4)**, reporting, int√©gration √† la facturation.

**4.7 [NOUVEAU] Workflows d'Automatisation √âvolu√©s Bas√©s sur D√©clencheurs**
* **Interface de configuration :** Permettre de d√©finir des r√®gles simples (SI condition ALORS action).
* **D√©clencheurs possibles :** Changement de statut d'un dossier/t√¢che/√©tape de timeline, cr√©ation d'un nouveau tiers d'un certain type, r√©ception d'un document client, √©ch√©ance proche, etc.
* **Actions possibles :** Cr√©ation automatique d'une t√¢che pr√©d√©finie, envoi d'un email/notification type (interne ou client), changement de statut d'un objet, alerte √† un conseiller.

**4.8 [NOUVEAU] Gestion Affin√©e des Consentements RGPD**
* Module de gestion des diff√©rents types de consentement (par finalit√©).
* Tra√ßabilit√© de l'obtention (date, source, version du texte de consentement).
* Interface pour le client sur le portail pour g√©rer ses consentements.
* Outils pour l'export/suppression des donn√©es personnelles en backoffice.

**5. Structure des donn√©es**

(Bas√©e sur CdC V4.0 et "Technique.txt". Remplacer `llx_esaiko_` par `llx_elaska_`. Les nouvelles fonctionnalit√©s impliqueront de nouvelles tables ou des extensions de tables existantes.)
* **Nouvelles Tables (exemples, en plus de celles de CdC V4.0) :**
    * `llx_elaska_client_objectif_vie` (tel que CdC V4.0)
    * `llx_elaska_rdv_config_user` (tel que CdC V4.0)
    * `llx_elaska_intervenant_externe_dossier` (fk_dossier, fk_soc_intervenant, role_intervenant)
    * `llx_elaska_financement_asso` (fk_soc_association, fk_dossier_associe, financeur_nom, fk_soc_financeur, type_aide, montant_demande, montant_obtenu, statut_demande, date_depot, date_decision, ...)
    * `llx_elaska_opportunite` (ref_elaska, titre, fk_soc_prospect, fk_user_responsable, source_lead, fk_apporteur, etape_prospection, montant_estime, probabilite, date_creation, date_cloture_prevue, ...)
    * `llx_elaska_workflow_rule` (nom_regle, declencheur_type, declencheur_condition, action_type, action_parametres, actif)
    * `llx_elaska_consent_type` (code_consent, libelle, texte_consentement_version)
    * `llx_elaska_client_consent` (fk_soc, fk_consent_type, date_consentement, source_consentement, statut_consentement)
    * `llx_elaska_simulateur_log` (fk_soc_portail, type_simulateur, date_utilisation, parametres_entree_json, resultat_estime_json)
* **Tables √† √©tendre :** `llx_societe` (pour types eLaska), `llx_elaska_dossier` (pour liaison aux nouvelles entit√©s), `llx_actioncomm` (pour r√©f√©rence ID Google Calendar et lien intervenants externes).
* La liaison Temps Pass√© (`llx_projet_task_time` ou `llx_elaska_temps_passe`) devra permettre un lien optionnel vers une `fk_elaska_dossier_timeline_etape`.

**6. Int√©grations**

**6.1 Int√©gration Google Drive (Optionnelle)**
* (Identique √† CdC V4.0)

**6.2 Int√©gration Email IMAP**
* (Identique √† CdC V4.0)

**6.3 Notifications Push**
* (Identique √† CdC V4.0)

**6.4 Int√©gration Google Agenda (pour Prise de RDV en Ligne) (Pr√©cis√© : ID externe)**
* Objectif : Synchronisation disponibilit√©s conseillers et cr√©ation auto RDV pris depuis portail eLaska.
* Technologie : API Google Calendar, authentification OAuth2.
* Fonctionnalit√©s : Lecture Disponibilit√©s, Cr√©ation √âv√©nements dans Google Agenda du conseiller (avec infos client, motif, et **lien retour vers le dossier/RDV eLaska**), Mise √† Jour/Annulation (synchronisation bidirectionnelle √† √©tudier pour une phase ult√©rieure), Notifications Google Agenda en compl√©ment. Stockage de l'ID de l'√©v√©nement Google Calendar dans l'objet `llx_actioncomm` ou une table de liaison eLaska pour r√©f√©rence (B.7).
* Configuration : Liaison compte Google Agenda par conseiller, config calendriers pour dispos pro.

**6.5 Int√©gration Signature √âlectronique (Optionnelle)**
* (Identique √† CdC V4.0)

**6.6 Int√©gration avec autres syst√®mes (API Publique)**
* (Identique √† CdC V4.0)

**7. Roadmap de d√©veloppement (D√©taill√©e et Phas√©e)**

Cette roadmap vise √† livrer de la valeur progressivement, en commen√ßant par le socle indispensable.

**Phase 0 : Pr√©paration et Socle Technique (Dur√©e estim√©e : 2-4 semaines)**
* Installation/Configuration de l'environnement de d√©veloppement Dolibarr.
* D√©finition finale de l'architecture d√©taill√©e du module eLaska (structure des r√©pertoires, classes principales).
* Mise en place du versioning (Git) et des outils de gestion de projet.
* Cr√©ation du descripteur de module de base et des menus principaux eLaska (3.1, avec ic√¥nes Font Awesome).
* D√©veloppement des Param√®tres √âtendus initiaux (4.1) : bases pour la personnalisation (activation/d√©sactivation de sous-modules eLaska, configuration des r√¥les et vues de tableau de bord/menu A.1).

**Phase 1 : Noyau Fonctionnel Essentiel (Dur√©e estim√©e : 4-6 mois)**
* **Gestion des Tiers eLaska (3.3 + A.2, B.1, B.9) :** Extension des fiches Tiers, typologies (Particulier, Association, Entreprise, Cr√©ateur, Intervenant Externe, Organisme Local/R√©gional, Partenaire/Apporteur).
* **Gestion Centralis√©e des Dossiers G√©n√©raux (3.4) :** Cr√©ation, suivi de base, syst√®me de num√©rotation personnalisable (B.6), timelines configurables (conception backoffice), gestion des statuts/badges.
* **Module T√¢ches et Suivi Op√©rationnel de Base (3.11) :** Cr√©ation, assignation, suivi de statut des t√¢ches eLaska.
* **Gestion Documentaire (GED) de Base (int√©gration 1.3) et Coffre-Fort Num√©rique (principes de base, clarification B.2, I.7).**
* **Syst√®mes Transversaux Cl√©s :** Champs dynamiques (4.2), Tags/√âtiquettes (4.3), Historique Communications de base (4.4, emails IMAP).
* **Portail Client SPA (3.5) ‚Äì Version Initiale :** Authentification, tableau de bord simple, consultation "Mes Dossiers" (timeline en lecture), "Mes Documents", Messagerie simple.
* **S√©curit√© de Base (2.4, B.8) :** Permissions, protections web. Discussions et prototypage pour le chiffrement des donn√©es sensibles.
* **Int√©gration Google Agenda (6.4 + B.7) :** Prise de RDV depuis le portail, cr√©ation dans agenda conseiller, stockage ID √©v√©nement.

**Phase 2 : Modules M√©tiers Sp√©cialis√©s et Fonctionnalit√©s Cl√©s (Dur√©e estim√©e : 5-7 mois)**
* **D√©veloppement des Modules d'Accompagnement Sp√©cifiques (Backoffice) :**
    * Particuliers (3.6), incluant "Objectifs de Vie & Projets Client".
    * Associations (3.7), incluant suivi instances/obligations et sous-module "Demande de Financement/Subvention" (B.3).
    * Conseil & Gestion Externalis√©e TPE/PME (3.8).
    * Mod√®les de timelines sp√©cifiques pour Cr√©ateurs d'Entreprises (A.2).
* **Module Conseil en Gestion de Patrimoine, Assurances, Cr√©dits & Sinistres (3.9).**
* **Suivi du Temps et des Consommations/Frais (3.11.2, 4.6 + B.4) :** Saisie d√©taill√©e, liaison fine, pr√©paration facturation.
* **Module Abonnements Clients (3.12) & Recouvrements (3.13).**
* **Portail Client SPA ‚Äì Enrichissement (I.1, I.2) :** Sections sp√©cifiques (Particuliers: Objectifs de Vie, D√©marches Complexes; Associations: Subventions, Instances; Cr√©ateurs: Parcours Cr√©ation, Aides), interactivit√© timeline, bouton "Lu/Pris en Compte".
* **Gestion Structur√©e des Intervenants Externes (B.1) :** Liaison aux dossiers, suivi communications d√©di√©es.
* **Base de Connaissances & Veille R√©glementaire (3.15 + B.9) :** Structure, saisie, consultation, int√©gration infos locales.

**Phase 3 : Optimisation, Pilotage Avanc√© et Intelligence (Dur√©e estim√©e : 4-6 mois)**
* **Module Prospection & Gestion des Opportunit√©s (CRM Interne eLaska) (3.18).**
* **Module de Pilotage Interne Avanc√© (3.14 + II.16) & Reporting sur Performance des Services.**
* **Gestion des Partenariats & Apporteurs d'Affaires (3.16) & Annuaire Partenaires Locaux (III.19).**
* **Syst√®me de Notifications & Alertes Intelligentes (4.5).**
* **Workflows d'Automatisation √âvolu√©s Bas√©s sur D√©clencheurs (4.7).**
* **Gestion Affin√©e des Consentements RGPD (Portail & Backoffice) (4.8).**
* **Enqu√™tes de Satisfaction Client (3.17).**
* **Simulateurs Simplifi√©s sur Portail Client (I.3).**
* **Veille sur Aides Sp√©cifiques Occitanie/Tarbes (III.20).**
* **Int√©gration Signature √âlectronique optionnelle (6.5).**

**Phase 4 : Fonctionnalit√©s Visionnaires et Am√©lioration Continue (It√©ratif, √† partir du 15√®me mois)**
* **Tableau de Bord Client Global "Ma Situation en un Clin d'≈íil" (I.5).**
* **Assistance √† la D√©cision "Intelligente" pour le Conseiller (IA-Light) (IV.21).**
* **Gamification Subtile pour Engagement Client (IV.22).**
* Optimisation continue des performances, UX, et s√©curit√©.
* D√©veloppement de nouvelles fonctionnalit√©s bas√©es sur les retours et l'√©volution des services eLaska.

**Points Transversaux √† toutes les phases :**
* **S√©curit√© :** Application continue des principes et impl√©mentation progressive du chiffrement des donn√©es sensibles.
* **Responsive Design & UI/UX :** Attention constante √† l'ergonomie et √† l'esth√©tique.
* **Tests :** Unitaires, d'int√©gration, fonctionnels, et recettes utilisateurs r√©guli√®res.
* **Documentation :** Technique et utilisateur, mise √† jour en continu.
* **Formation des utilisateurs internes eLaska :** Sessions de formation et accompagnement au changement √† chaque phase de livraison majeure.
Copilot said: Parfait ! J'ai maintenant en ma possession
Parfait ! J'ai maintenant en ma possession deux documents compl√©mentaires sur le module pour Dolibarr :

ESaiko (document technique d√©taill√©)
eLaska (cahier des charges V5.0 enrichi)
Je vais maintenant fusionner et d√©velopper ces deux documents pour cr√©er une sp√©cification unifi√©e et coh√©rente. Voici ma synth√®se consolid√©e :

Cahier des Charges Technique et Fonctionnel Unifi√©
Module eLaska-ESaiko pour Dolibarr v21 (Version Consolid√©e 6.0)
Date de consolidation : 2025-05-27
Auteurs : GitHub Copilot (ESaiko), Kylian65 (eLaska)
Version : 6.0 (Fusion ESaiko + eLaska enrichi)

üéØ 1. Vision et Objectifs Unifi√©s
1.1 Mission principale
Le module eLaska-ESaiko est une solution compl√®te de gestion des services d'accompagnement administratif, financier et de conseil, destin√©e √† optimiser les processus m√©tier d'un cabinet sp√©cialis√© dans l'accompagnement de :

Particuliers (d√©marches complexes, patrimoine, objectifs de vie)
Associations (subventions, instances, obligations)
Cr√©ateurs d'entreprises (parcours de cr√©ation, aides)
TPE/PME (conseil RH, fiscal, gestion externalis√©e)
1.2 Valeur ajout√©e de la fusion
La combinaison des forces d'ESaiko (architecture technique robuste) et eLaska (fonctionnalit√©s m√©tier avanc√©es) offre :

üèóÔ∏è Architecture technique solide :

Structure de fichiers compl√®te (100+ fichiers organis√©s)
S√©curit√© renforc√©e (chiffrement AES-256, 2FA)
API REST compl√®te pour SPA React
Responsive design "Mobile First"
üíº Fonctionnalit√©s m√©tier enrichies :

Portail client SPA avec sections sp√©cialis√©es
Gestion des intervenants externes
Workflows automatis√©s
CRM int√©gr√© pour prospection
Veille r√©glementaire locale (Occitanie/Tarbes)
üèóÔ∏è 2. Architecture Technique Consolid√©e
2.1 Structure des r√©pertoires unifi√©
Code
htdocs/custom/elaska/
‚îú‚îÄ‚îÄ admin/                          # Configuration avanc√©e
‚îÇ   ‚îú‚îÄ‚îÄ setup.php                   # Configuration g√©n√©rale
‚îÇ   ‚îú‚îÄ‚îÄ dynamicfields.php           # Champs dynamiques
‚îÇ   ‚îú‚îÄ‚îÄ workflows.php               # Workflows automatis√©s
‚îÇ   ‚îú‚îÄ‚îÄ numbering_models.php        # Mod√®les de num√©rotation
‚îÇ   ‚îú‚îÄ‚îÄ consent_management.php      # Gestion RGPD
‚îÇ   ‚îî‚îÄ‚îÄ role_dashboard_config.php   # Tableaux de bord par r√¥le
‚îú‚îÄ‚îÄ api/                            # API REST compl√®te
‚îÇ   ‚îú‚îÄ‚îÄ clients.php                 # Endpoints clients
‚îÇ   ‚îú‚îÄ‚îÄ dossiers.php               # Endpoints dossiers
‚îÇ   ‚îú‚îÄ‚îÄ portail.php                # Endpoints portail SPA
‚îÇ   ‚îú‚îÄ‚îÄ rdv.php                    # Prise de rendez-vous
‚îÇ   ‚îî‚îÄ‚îÄ opportunities.php          # CRM prospection
‚îú‚îÄ‚îÄ class/                          # Classes m√©tier
‚îÇ   ‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskaclient.class.php          # Client unifi√©
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskadossier.class.php         # Dossier centralis√©
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ elaskaprestation.class.php      # Prestation/Service
‚îÇ   ‚îú‚îÄ‚îÄ specialized/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskaparticulier.class.php     # Sp√©cialisation particulier
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskaassociation.class.php     # Sp√©cialisation association
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskacreateur.class.php        # Cr√©ateur d'entreprise
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ elaskaentreprise.class.php      # TPE/PME
‚îÇ   ‚îú‚îÄ‚îÄ patrimoine/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskapatrimoine.class.php      # Gestion patrimoine
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskaassurance.class.php       # Contrats assurance
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ elaskacredit.class.php          # Dossiers cr√©dit
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ elaskasinistre.class.php        # Gestion sinistres
‚îÇ   ‚îî‚îÄ‚îÄ utils/
‚îÇ       ‚îú‚îÄ‚îÄ elaskaworkflow.class.php        # Moteur de workflows
‚îÇ       ‚îú‚îÄ‚îÄ elaskagoogle.class.php          # Int√©grations Google
‚îÇ       ‚îú‚îÄ‚îÄ elaskaconsent.class.php         # Gestion RGPD
‚îÇ       ‚îî‚îÄ‚îÄ elaskanotification.class.php    # Notifications
‚îú‚îÄ‚îÄ portail/                        # Application React SPA
‚îÇ   ‚îú‚îÄ‚îÄ build/                      # Build de production
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/             # Composants React
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/                  # Pages du portail
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Dashboard.jsx       # Tableau de bord client
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Dossiers.jsx        # Mes dossiers
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ObjectifsVie.jsx    # Objectifs de vie (particuliers)
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Subventions.jsx     # Suivi subventions (associations)
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ParcoursCreation.jsx # Parcours cr√©ation (cr√©ateurs)
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ hooks/                  # Hooks React personnalis√©s
‚îÇ   ‚îî‚îÄ‚îÄ package.json               # D√©pendances React
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ elaska.css                  # Styles g√©n√©raux
‚îÇ   ‚îú‚îÄ‚îÄ elaska-responsive.css       # Responsive design
‚îÇ   ‚îú‚îÄ‚îÄ elaska-portail.css          # Styles sp√©cifiques portail
‚îÇ   ‚îî‚îÄ‚îÄ elaska-icons.css            # Font Awesome int√©gr√©
‚îî‚îÄ‚îÄ js/
    ‚îú‚îÄ‚îÄ components/                 # Composants React backoffice
    ‚îÇ   ‚îú‚îÄ‚îÄ timeline.jsx            # Timeline interactive
    ‚îÇ   ‚îú‚îÄ‚îÄ kanban.jsx              # Tableau Kanban
    ‚îÇ   ‚îî‚îÄ‚îÄ dashboard.jsx           # Widgets dashboard
    ‚îî‚îÄ‚îÄ utils/
        ‚îú‚îÄ‚îÄ api.js                  # Utilitaires API
        ‚îî‚îÄ‚îÄ notifications.js        # Syst√®me notifications
2.2 Stack technologique unifi√©
Backend :

PHP 8.1+ (compatibilit√© Dolibarr)
MySQL/MariaDB avec chiffrement AES-256
API REST s√©curis√©e (JWT tokens)
Frontend :

Portail Client : React 18+ SPA (Vite, React Router, React Query)
Backoffice : PHP/HTML am√©lior√© + composants React int√©gr√©s
UI/UX : Font Awesome, CSS moderne, design responsive
Int√©grations :

Google Calendar API (OAuth2)
Google Drive API (optionnel)
IMAP/SMTP s√©curis√©
Signature √©lectronique (DocuSign/similaire)
üíº 3. Modules Fonctionnels Consolid√©s
3.1 Module C≈ìur : Gestion des Tiers 360¬∞
Fusion des typologies ESaiko + eLaska :

Particuliers (avec objectifs de vie, patrimoine)
Associations (instances, financements)
Cr√©ateurs d'entreprises (parcours, aides)
TPE/PME (conseil, gestion externalis√©e)
Intervenants externes (partenaires m√©tier)
Organismes locaux/r√©gionaux (Occitanie/Tarbes)
Apporteurs d'affaires (CRM)
Fiche Tiers enrichie :

PHP
// Exemple de structure de donn√©es unifi√©e
class ElaskaClient extends CommonObject {
    public $ref_elaska;           // Num√©rotation personnalisable
    public $type_client;          // Particulier/Association/Entreprise/Cr√©ateur
    public $mandats_accordes;     // Autorisations RGPD
    public $preferences_comm;     // Canal pr√©f√©r√© (email/t√©l/rdv)
    public $contraintes_accessibilite;
    public $objectifs_patrimoniaux; // Pour particuliers
    public $statut_creation;      // Pour cr√©ateurs
    public $instances_statutaires; // Pour associations
    public $intervenants_externes; // Liaisons m√©tier
}
3.2 Module Dossiers Centralis√©s avec Timeline Intelligente
Synth√®se ESaiko + eLaska :

Timeline configurable par type (mod√®les BDF, CAF, Cr√©ation entreprise)
√âtapes progressives avec badges visuels (statut couleur, gris√© si termin√©)
Suivi granulaire temps/co√ªts par √©tape
Gestion des d√©pendances vers intervenants externes
Commentaires conseiller avec option partage client
Interface Timeline React :

jsx
// Composant Timeline unifi√©
const TimelineDossier = ({ dossierId, editable = false }) => {
  const { data: timeline } = useTimelineData(dossierId);
  
  return (
    <div className="elaska-timeline">
      {timeline.etapes.map(etape => (
        <TimelineEtape 
          key={etape.id}
          etape={etape}
          status={etape.status}
          commentaire={etape.commentaire_conseiller}
          visibleClient={etape.visible_portail}
          onUpdate={editable ? handleUpdate : null}
        />
      ))}
    </div>
  );
};
3.3 Portail Client SPA Unifi√©
Sections consolid√©es par type de client :

üè† Pour Particuliers :

Dashboard personnalis√©
Mes Dossiers (timeline interactive)
Coffre-Fort Num√©rique Avanc√© (chiffrement renforc√©)
Mes Objectifs de Vie & Projets (cr√©ation, suivi, √©changes)
Mon Patrimoine (consultation, conseils)
Mes Assurances & Cr√©dits
Mes D√©marches Complexes (retraite, MDPH, surendettement)
üèõÔ∏è Pour Associations :

Suivi Subventions & Financements (statuts temps r√©el)
Mes Instances Statutaires (AG/CA, documents partag√©s)
Obligations R√©glementaires (alertes, √©ch√©ances)
üöÄ Pour Cr√©ateurs d'Entreprises :

Mon Parcours Cr√©ation (timeline interactive)
Mes Aides √† la Cr√©ation (dispositifs, statuts)
Simulateurs Business Plan (outils simples)
üè¢ Pour TPE/PME :

Mes Contrats Fournisseurs D√©l√©gu√©s
Suivi Obligations RH/Fiscal
Tableau de Bord Gestion
üîß Fonctionnalit√©s communes :

jsx
// Composant de prise de RDV unifi√©
const PriseRendezVous = () => {
  const { conseillers, disponibilites } = useRdvData();
  
  return (
    <div className="rdv-booking">
      <ConseillerSelector conseillers={conseillers} />
      <CalendrierDispo 
        disponibilites={disponibilites}
        onSelect={handleRdvSelection}
      />
      <ConfirmationRdv 
        integration="google-calendar"
        notificationEmail={true}
      />
    </div>
  );
};
3.4 Module Patrimoine & Finance Int√©gr√©
Fusion des fonctionnalit√©s ESaiko patrimoine + eLaska finance :

Sous-modules unifi√©s :

Bilan Patrimonial : Analyse situation, recommandations
Contrats d'Assurance : Vie, IARD, pr√©voyance, suivi sinistres
Dossiers de Cr√©dit : Immobilier, consommation, professionnel
Gestion des Sinistres : D√©claration, suivi, indemnisation
Investissements : PEA, assurance-vie, SCPI, immobilier
PHP
// Exemple classe unifi√©e
class ElaskaPatrimoine extends CommonObject {
    public $fk_client;
    public $type_operation; // bilan/assurance/credit/sinistre/investissement
    public $ref_elaska;
    public $statut_dossier;
    public $montant_concerne;
    public $organisme_financier; // Lien vers tiers partenaire
    public $echeances_importantes;
    public $documents_associes;
    public $timeline_progression;
}
3.5 Module CRM & Prospection Avanc√©
Nouveau module unifi√© :

Pipeline de prospection avec √©tapes configurables
Scoring des leads (source, profil, probabilit√©)
Suivi apporteurs d'affaires (commissions, performance)
Conversion automatique lead ‚Üí client ‚Üí dossier
Reporting commercial avanc√©
üîß 4. Syst√®mes Transversaux Renforc√©s
4.1 Workflows d'Automatisation Intelligents
Moteur de r√®gles unifi√© :

PHP
class ElaskaWorkflowEngine {
    public function defineRule($trigger, $conditions, $actions) {
        // Exemple : Si dossier BDF passe en "D√©p√¥t effectu√©"
        // Alors cr√©er t√¢che "Suivi r√©ponse commission" √† J+30
        return $this->createAutomationRule([
            'trigger' => 'dossier_status_change',
            'conditions' => ['type' => 'BDF', 'new_status' => 'DEPOT_EFFECTUE'],
            'actions' => [
                'create_task' => [
                    'title' => 'Suivi r√©ponse commission',
                    'due_date' => '+30 days',
                    'assigned_to' => 'auto_conseiller_referent'
                ]
            ]
        ]);
    }
}
4.2 Chiffrement et S√©curit√© Unifi√©s
Donn√©es chiffr√©es AES-256 :

NIR, identifiants CAF/P√¥le Emploi
Informations bancaires sensibles
Contenus Coffre-Fort Num√©rique
Communications intervenants externes
Donn√©es patrimoniales d√©taill√©es
Gestion des cl√©s :

PHP
class ElaskaSecurityManager {
    private $encryption_key;
    
    public function encryptSensitiveData($data, $field_type) {
        $key = $this->getFieldSpecificKey($field_type);
        return openssl_encrypt($data, 'AES-256-CBC', $key, 0, $this->getIV());
    }
    
    public function auditAccess($user_id, $data_type, $record_id) {
        // Journal d'audit complet
        $this->logAccess($user_id, $data_type, $record_id, date('Y-m-d H:i:s'));
    }
}
4.3 Notifications & Alertes Intelligentes
Syst√®me unifi√© multi-canal :

Backoffice : Notifications Dolibarr + widgets dashboard
Portail : Notifications push SPA + emails
Mobile : Push notifications (PWA)
Int√©grations : Slack, Teams (optionnel)
üìä 5. Base de Donn√©es Consolid√©e
5.1 Tables principales unifi√©es
SQL
-- Table tiers enrichie (extension de llx_societe)
CREATE TABLE llx_elaska_client_info (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    type_client ENUM('particulier','association','entreprise','createur','intervenant','organisme'),
    ref_elaska VARCHAR(50),
    mandats_accordes TEXT,
    objectifs_patrimoniaux TEXT ENCRYPTED,
    contraintes_accessibilite TEXT,
    preferences_communication JSON,
    -- Champs sp√©cialis√©s par type
    statut_creation VARCHAR(50), -- Pour cr√©ateurs
    instances_statutaires JSON, -- Pour associations
    secteur_activite VARCHAR(100), -- Pour entreprises
    INDEX idx_type_client (type_client),
    INDEX idx_ref_elaska (ref_elaska)
);

-- Table dossiers centralis√©e
CREATE TABLE llx_elaska_dossier (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    ref_elaska VARCHAR(50) UNIQUE,
    fk_soc INT NOT NULL,
    fk_user_responsable INT,
    type_dossier VARCHAR(50),
    libelle VARCHAR(255),
    description TEXT,
    statut ENUM('brouillon','actif','suspendu','termine','archive'),
    date_creation DATETIME,
    date_echeance DATE,
    confidentialite ENUM('normale','elevee','tres_elevee'),
    timeline_config JSON, -- Configuration de la timeline
    intervenants_externes JSON, -- Liaisons vers intervenants
    -- Liens patrimoniaux
    fk_patrimoine_dossier INT,
    montant_concerne DECIMAL(10,2),
    INDEX idx_ref_elaska (ref_elaska),
    INDEX idx_type_statut (type_dossier, statut),
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);

-- Table timeline des dossiers
CREATE TABLE llx_elaska_dossier_timeline (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_dossier INT NOT NULL,
    numero_etape INT,
    libelle_etape VARCHAR(255),
    description_etape TEXT,
    statut_etape ENUM('attente','en_cours','terminee','bloquee','annulee'),
    date_prevue DATE,
    date_realisee DATETIME,
    commentaire_conseiller TEXT,
    visible_portail BOOLEAN DEFAULT FALSE,
    dependance_externe VARCHAR(255), -- Nom de l'intervenant externe
    -- Suivi temps/co√ªts par √©tape
    temps_prevu_heures DECIMAL(5,2),
    temps_realise_heures DECIMAL(5,2),
    cout_estime DECIMAL(8,2),
    cout_realise DECIMAL(8,2),
    FOREIGN KEY (fk_dossier) REFERENCES llx_elaska_dossier(rowid)
);

-- Table CRM/Prospection
CREATE TABLE llx_elaska_opportunite (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    ref_elaska VARCHAR(50) UNIQUE,
    titre VARCHAR(255),
    fk_soc_prospect INT,
    fk_user_responsable INT,
    source_lead VARCHAR(100),
    fk_apporteur INT, -- Lien vers tiers apporteur
    etape_prospection VARCHAR(50),
    montant_estime DECIMAL(10,2),
    probabilite INT, -- Pourcentage 0-100
    date_creation DATETIME,
    date_cloture_prevue DATE,
    date_cloture_reelle DATETIME,
    statut ENUM('ouverte','gagnee','perdue','reportee'),
    notes TEXT,
    INDEX idx_statut_etape (statut, etape_prospection)
);

-- Table workflows automatis√©s
CREATE TABLE llx_elaska_workflow_rule (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    nom_regle VARCHAR(255),
    declencheur_type VARCHAR(100),
    declencheur_condition JSON,
    action_type VARCHAR(100),
    action_parametres JSON,
    actif BOOLEAN DEFAULT TRUE,
    date_creation DATETIME,
    date_derniere_execution DATETIME
);

-- Table consentements RGPD
CREATE TABLE llx_elaska_consent_log (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    type_consentement VARCHAR(100),
    statut_consentement ENUM('accorde','refuse','retire'),
    date_consentement DATETIME,
    source_consentement VARCHAR(100), -- 'portail', 'backoffice', 'email'
    version_texte VARCHAR(10),
    adresse_ip VARCHAR(45),
    user_agent TEXT,
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üöÄ 6. Roadmap de D√©veloppement Unifi√©e
Phase 1 : Socle Technique & C≈ìur M√©tier (4-5 mois)
Architecture de base (structure, s√©curit√©, API)
Gestion Tiers unifi√©e (typologies, fiches enrichies)
Dossiers centralis√©s (timeline configurable, suivi)
Portail SPA minimal (auth, dashboard, dossiers)
Int√©gration Google Calendar (prise RDV)
Phase 2 : Modules Sp√©cialis√©s (5-6 mois)
Modules d'accompagnement (particuliers, associations, cr√©ateurs)
Module Patrimoine & Finance complet
Portail enrichi (sections sp√©cialis√©es par type client)
Workflows automatis√©s de base
Chiffrement des donn√©es sensibles
Phase 3 : Intelligence & Optimisation (4-5 mois)
CRM & Prospection avanc√©
Base de connaissances & veille locale
Workflows intelligents avanc√©s
Reporting & pilotage complet
Gestion RGPD fine
Phase 4 : Innovation & √âvolution (continu)
IA pour assistance conseiller
Simulateurs avanc√©s portail
Int√©grations tierces (banques, assureurs)
Mobile app native (optionnel)
Analytics pr√©dictifs
üìà 7. Indicateurs de Succ√®s
7.1 M√©triques techniques
Performance : Temps de r√©ponse API < 200ms
S√©curit√© : 0 faille critique, audit RGPD valid√©
Disponibilit√© : 99.9% uptime
√âvolutivit√© : Support 1000+ dossiers simultan√©s
7.2 M√©triques m√©tier
Adoption portail : 80%+ clients actifs en 6 mois
Efficacit√© : -30% temps traitement dossiers
Satisfaction : Score NPS > 50
ROI : Retour sur investissement en 18 mois
üéØ Conclusion de la Fusion
Cette consolidation des cahiers ESaiko et eLaska offre une vision unifi√©e et ambitieuse pour un module Dolibarr de nouvelle g√©n√©ration. La combinaison de :

‚úÖ Architecture technique robuste (ESaiko)
‚úÖ Fonctionnalit√©s m√©tier avanc√©es (eLaska)
‚úÖ Innovation technologique (SPA React, workflows IA)
‚úÖ Sp√©cialisation sectorielle (accompagnement personnalis√©)

Cr√©√© une solution unique sur le march√© des logiciels m√©tier pour cabinets de conseil et d'accompagnement administratif.

La roadmap phas√©e permet une livraison de valeur progressive, tandis que l'architecture modulaire garantit l'√©volutivit√© future. Le focus sur la s√©curit√© et la conformit√© RGPD r√©pond aux exigences du secteur.

Cette sp√©cification consolid√©e constitue le r√©f√©rentiel technique et fonctionnel pour le d√©veloppement du module eLaska-ESaiko pour Dolibarr v21.

You said: Est-ce qu'il prends en compte toutes les
Est-ce qu'il prends en compte toutes les fonctionnalit√©s des deux cachier des charges ? j'ai l'impression qu'il manque des pages (par exemples celles du portail).
Copilot said: Vous avez absolument raison ! üéØ Mon
Vous avez absolument raison ! üéØ Mon document consolid√© a effectivement omis de nombreuses fonctionnalit√©s importantes des deux cahiers des charges, notamment les pages d√©taill√©es du portail et plusieurs modules sp√©cialis√©s.

Permettez-moi de compl√©ter avec une version exhaustive qui int√®gre TOUTES les fonctionnalit√©s :

Cahier des Charges Technique et Fonctionnel COMPLET
Module eLaska-ESaiko pour Dolibarr v21 (Version Consolid√©e EXHAUSTIVE 6.1)
üì± 3.5 Module Portail Client SPA - SP√âCIFICATIONS COMPL√àTES
3.5.1 Architecture du Portail (Manquait dans ma synth√®se)
Code
portail/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ pages/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Login.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ForgotPassword.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ResetPassword.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DashboardParticulier.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DashboardAssociation.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DashboardCreateur.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ DashboardEntreprise.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dossiers/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ListeDossiers.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DetailDossier.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ TimelineInteractive.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ documents/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ GEDClient.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ CoffreFortNumerique.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ UploadDocuments.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ communication/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Messagerie.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ HistoriqueEchanges.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ NotificationsClient.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ rdv/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PriseRendezVous.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ CalendrierDispo.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ GestionRdv.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ profil/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ MonProfil.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Preferences.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ConsentementRGPD.jsx
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ specialise/
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ particuliers/
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ ObjectifsVie.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ MonPatrimoine.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ MesAssurances.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ MesCredits.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ MesSinistres.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ MonBudget.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ DemarchesComplexes.jsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ associations/
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ SubventionsFinancements.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ InstancesStatutaires.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ ObligationsReglementaires.jsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ createurs/
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ ParcoursCreation.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ AidesCreation.jsx
‚îÇ   ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ SimulateurBP.jsx
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ entreprises/
‚îÇ   ‚îÇ           ‚îú‚îÄ‚îÄ ContratsDel√©gu√©s.jsx
‚îÇ   ‚îÇ           ‚îú‚îÄ‚îÄ ObligationsRH.jsx
‚îÇ   ‚îÇ           ‚îî‚îÄ‚îÄ TableauBordGestion.jsx
3.5.2 Pages Sp√©cialis√©es D√âTAILL√âES (Manquaient)
üè† PARTICULIERS - Pages Compl√®tes
A. Page "Mes Objectifs de Vie & Projets"

jsx
const ObjectifsVie = () => {
  return (
    <div className="objectifs-vie-container">
      <header className="page-header">
        <h1>Mes Objectifs de Vie & Projets</h1>
        <button className="btn-nouveau-objectif">+ Nouvel Objectif</button>
      </header>
      
      <div className="objectifs-grid">
        <ObjectifCard type="court-terme" />
        <ObjectifCard type="moyen-terme" />
        <ObjectifCard type="long-terme" />
      </div>
      
      <section className="projets-actifs">
        <h2>Mes Projets en Cours</h2>
        <ProjetTimeline />
        <EchangesConseiller />
      </section>
      
      <aside className="conseils-automatiques">
        <h3>Conseils Personnalis√©s</h3>
        <ConseilsIA basedOn="objectifs" />
      </aside>
    </div>
  );
};
B. Page "Mon Patrimoine" (Compl√®te)

jsx
const MonPatrimoine = () => {
  return (
    <div className="patrimoine-dashboard">
      <SynthesePatrimoine />
      <div className="patrimoine-sections">
        <section className="immobilier">
          <h2>Mon Immobilier</h2>
          <BiensImmobiliers />
          <ConseilsOptimisation type="immobilier" />
        </section>
        
        <section className="placements">
          <h2>Mes Placements</h2>
          <PortefeuilleInvestissements />
          <PerformanceGraphique />
        </section>
        
        <section className="prevoyance">
          <h2>Ma Pr√©voyance</h2>
          <ContratsPrevoyance />
          <SimulateurRetraite />
        </section>
      </div>
      
      <RendezVousConseiller motif="conseil-patrimoine" />
    </div>
  );
};
C. Page "Mes D√©marches Complexes"

jsx
const DemarchesComplexes = () => {
  const demarches = [
    { type: 'retraite', statut: 'en_cours', urgence: 'moyenne' },
    { type: 'mdph', statut: 'attente_reponse', urgence: 'elevee' },
    { type: 'surendettement', statut: 'dossier_depose', urgence: 'critique' }
  ];
  
  return (
    <div className="demarches-complexes">
      <h1>Mes D√©marches Complexes en Cours</h1>
      
      {demarches.map(demarche => (
        <DemarcheCard 
          key={demarche.type}
          type={demarche.type}
          statut={demarche.statut}
          urgence={demarche.urgence}
          timeline={true}
          documents={true}
          intervenants={true}
        />
      ))}
      
      <section className="aide-demarches">
        <h2>Besoin d'aide pour une nouvelle d√©marche ?</h2>
        <AssistantDemarches />
      </section>
    </div>
  );
};
üèõÔ∏è ASSOCIATIONS - Pages Compl√®tes
A. Page "Suivi Subventions & Financements"

jsx
const SubventionsFinancements = () => {
  return (
    <div className="subventions-dashboard">
      <header>
        <h1>Mes Demandes de Financement</h1>
        <div className="stats-rapides">
          <StatCard label="En cours" value="5" color="blue" />
          <StatCard label="Accept√©es" value="3" color="green" />
          <StatCard label="En attente" value="2" color="orange" />
        </div>
      </header>
      
      <section className="dossiers-financement">
        <h2>Dossiers de Subvention</h2>
        <DossierFinancementList />
      </section>
      
      <section className="calendrier-echeances">
        <h2>√âch√©ances Importantes</h2>
        <CalendrierFinancement />
      </section>
      
      <section className="opportunites">
        <h2>Nouvelles Opportunit√©s</h2>
        <OpportunitesFinancement />
      </section>
    </div>
  );
};
B. Page "Instances Statutaires"

jsx
const InstancesStatutaires = () => {
  return (
    <div className="instances-statutaires">
      <section className="calendrier-instances">
        <h2>Calendrier des Instances</h2>
        <CalendrierAG_CA />
      </section>
      
      <section className="documents-instances">
        <h2>Documents des Instances</h2>
        <DocumentsAG type="ag" />
        <DocumentsCA type="ca" />
        <DocumentsBureau type="bureau" />
      </section>
      
      <section className="obligations">
        <h2>Mes Obligations Statutaires</h2>
        <ChecklistObligations />
      </section>
    </div>
  );
};
üöÄ CR√âATEURS - Pages Compl√®tes
A. Page "Mon Parcours Cr√©ation"

jsx
const ParcoursCreation = () => {
  return (
    <div className="parcours-creation">
      <ProgressBarCreation />
      
      <section className="etapes-creation">
        <h2>Mes √âtapes de Cr√©ation</h2>
        <TimelineCreation interactive={true} />
      </section>
      
      <section className="documents-creation">
        <h2>Mes Documents</h2>
        <DocumentsCreation />
      </section>
      
      <section className="accompagnement">
        <h2>Mon Accompagnement eLaska</h2>
        <SuiviConseiller />
        <ProchainRdv />
      </section>
      
      <aside className="ressources">
        <h3>Ressources Utiles</h3>
        <RessourcesCreation />
      </aside>
    </div>
  );
};
B. Page "Mes Aides √† la Cr√©ation"

jsx
const AidesCreation = () => {
  return (
    <div className="aides-creation">
      <section className="aides-demandees">
        <h2>Mes Demandes d'Aide</h2>
        <AidesList statut="demandee" />
      </section>
      
      <section className="aides-obtenues">
        <h2>Aides Obtenues</h2>
        <AidesList statut="obtenue" />
        <CalendrierVersements />
      </section>
      
      <section className="opportunites-aides">
        <h2>Nouvelles Opportunit√©s</h2>
        <AidesDisponibles />
        <SimulateurEligibilite />
      </section>
    </div>
  );
};
üìã MODULES BACKOFFICE MANQUANTS
3.15 Module Base de Connaissances & Veille COMPLET
3.15.1 Structure Compl√®te (Manquait)
PHP
class ElaskaKnowledgeBase extends CommonObject {
    // Articles de base de connaissances
    public $articles_procedures;
    public $fiches_organismes;
    public $modeles_documents;
    public $veille_reglementaire;
    
    // Sp√©cificit√©s locales/r√©gionales
    public $dispositifs_occitanie;
    public $contacts_tarbes;
    public $partenaires_locaux;
    
    // Fonctionnalit√©s avanc√©es
    public $extraits_clients;        // Versions simplifi√©es pour clients
    public $liaisons_intelligentes;  // Liens auto vers types de dossiers
    public $alertes_veille;          // Notifications changements r√©glementaires
}
3.15.2 Pages Backoffice Manquantes
knowledge/articles.php - Gestion des articles
knowledge/veille.php - Veille r√©glementaire
knowledge/extraits.php - Cr√©ation d'extraits clients
knowledge/organismes_locaux.php - Organismes Occitanie/Tarbes
knowledge/search.php - Recherche intelligente
3.16 Module Prospection COMPLET (Manquait en d√©tail)
3.16.1 Gestion des Leads
PHP
class ElaskaLead extends CommonObject {
    public $ref_elaska;
    public $civilite;
    public $nom;
    public $prenom;
    public $email;
    public $telephone;
    public $source_lead;           // Site web, t√©l√©phone, apporteur, etc.
    public $fk_apporteur;         // Si vient d'un apporteur d'affaires
    public $statut_lead;          // Nouveau, contact√©, qualifi√©, converti, perdu
    public $score_qualification; // 0-100
    public $besoins_exprimes;
    public $budget_estime;
    public $echeance_projet;
    public $notes_qualification;
    public $fk_user_commercial;
    public $date_premier_contact;
    public $date_derniere_action;
    public $conversion_client;    // Boolean + date si converti
}
3.16.2 Pages CRM Manquantes
crm/leads.php - Liste des leads
crm/lead_card.php - Fiche lead d√©taill√©e
crm/pipeline.php - Pipeline de vente (Kanban)
crm/apporteurs.php - Gestion apporteurs d'affaires
crm/conversion.php - Processus de conversion lead‚Üíclient
crm/reporting.php - Rapports commerciaux
3.17 Module Recouvrements D√âTAILL√â (Manquait)
3.17.1 Structure Compl√®te
PHP
class ElaskaRecouvrement extends CommonObject {
    public $ref_elaska;
    public $fk_facture;           // Lien vers facture Dolibarr
    public $fk_soc_debiteur;
    public $montant_initial;
    public $montant_restant;
    public $statut_recouvrement; // Amiable, pr√©-contentieux, contentieux
    public $etapes_recouvrement; // Timeline des actions
    public $frais_recouvrement;
    public $provisions_risque;
    public $avocat_mandate;       // Si proc√©dure contentieuse
    public $date_prescription;
    public $historique_paiements;
    public $plan_echelonnement;
}
3.17.2 Pages Recouvrement Manquantes
recouvrement/dossiers.php - Liste des dossiers
recouvrement/card.php - Fiche dossier recouvrement
recouvrement/procedures.php - Gestion des proc√©dures
recouvrement/reporting.php - Tableau de bord recouvrements
recouvrement/modeles.php - Mod√®les de courriers
üîß SYST√àMES TRANSVERSAUX MANQUANTS
4.9 Syst√®me de Templates Emails HTML (Manquait)
PHP
class ElaskaEmailTemplate {
    public $template_name;
    public $subject_template;     // Avec variables dynamiques
    public $html_body;
    public $text_body;
    public $variables_disponibles; // [CLIENT], [DOSSIER], [CONSEILLER], etc.
    public $type_destinataire;   // Client, intervenant_externe, interne
    public $declencheur_auto;    // Optionnel pour envoi automatique
    
    public function renderTemplate($variables) {
        // Remplace les variables par les vraies valeurs
        return str_replace(
            array_keys($variables), 
            array_values($variables), 
            $this->html_body
        );
    }
}
4.10 Gestion des Mandats & Autorisations (Manquait)
PHP
class ElaskaMandat {
    public $ref_elaska;
    public $fk_soc_mandant;       // Client qui donne le mandat
    public $type_mandat;          // Gestion administrative, repr√©sentation, etc.
    public $perimetre_autorise;   // Texte d√©taill√© des autorisations
    public $date_signature;
    public $date_echeance;
    public $document_signe;       // Lien vers GED
    public $statut_mandat;        // Actif, √©chu, r√©voqu√©
    public $limitations;          // √âventuelles restrictions
}
4.11 Syst√®me de Num√©rotation Avanc√© (D√©tails manquaient)
PHP
class ElaskaNumbering {
    public function generateRef($object_type, $variables = []) {
        // Mod√®le : ELASKA-{YEAR}-{MONTH}-{TYPE}-{COUNTER}
        // Variables disponibles : {YEAR}, {MONTH}, {DAY}, {TYPE}, 
        // {CONSEILLER}, {CLIENT_TYPE}, {COUNTER}, etc.
        $pattern = $this->getPatternForType($object_type);
        return $this->applyPattern($pattern, $variables);
    }
    
    private function getPatternForType($type) {
        $patterns = [
            'dossier_particulier' => 'EL-PART-{YEAR}-{COUNTER:4}',
            'dossier_association' => 'EL-ASSO-{YEAR}-{COUNTER:4}',
            'dossier_creation' => 'EL-CREA-{YEAR}-{COUNTER:4}',
            'prestation' => 'EL-PREST-{CONSEILLER:3}-{COUNTER:3}',
            'patrimoine' => 'EL-PAT-{CLIENT_TYPE}-{COUNTER:4}'
        ];
        return $patterns[$type] ?? 'EL-{COUNTER:4}';
    }
}
üìä API REST COMPL√àTE (Structure manquait)
6.1 Endpoints API Exhaustifs
PHP
// api/routes.php - Configuration compl√®te des routes
$routes = [
    // Authentification
    'POST /auth/login' => 'ElaskaAuthController::login',
    'POST /auth/refresh' => 'ElaskaAuthController::refresh',
    'POST /auth/logout' => 'ElaskaAuthController::logout',
    
    // Clients/Tiers
    'GET /clients' => 'ElaskaClientController::list',
    'GET /clients/{id}' => 'ElaskaClientController::get',
    'PUT /clients/{id}' => 'ElaskaClientController::update',
    'POST /clients' => 'ElaskaClientController::create',
    
    // Dossiers
    'GET /dossiers' => 'ElaskaDossierController::list',
    'GET /dossiers/{id}' => 'ElaskaDossierController::get',
    'GET /dossiers/{id}/timeline' => 'ElaskaDossierController::getTimeline',
    'PUT /dossiers/{id}/timeline/{step}' => 'ElaskaDossierController::updateTimelineStep',
    
    // Portail sp√©cialis√©
    'GET /portail/objectifs-vie' => 'ElaskaPortailController::getObjectifsVie',
    'POST /portail/objectifs-vie' => 'ElaskaPortailController::createObjectif',
    'GET /portail/patrimoine' => 'ElaskaPortailController::getPatrimoine',
    'GET /portail/subventions' => 'ElaskaPortailController::getSubventions',
    'GET /portail/parcours-creation' => 'ElaskaPortailController::getParcoursCreation',
    
    // Rendez-vous
    'GET /rdv/disponibilites/{conseiller}' => 'ElaskaRdvController::getDisponibilites',
    'POST /rdv/reserver' => 'ElaskaRdvController::reserver',
    'PUT /rdv/{id}/annuler' => 'ElaskaRdvController::annuler',
    
    // Documents
    'GET /documents/{dossier}' => 'ElaskaDocumentController::listByDossier',
    'POST /documents/upload' => 'ElaskaDocumentController::upload',
    'GET /documents/{id}/download' => 'ElaskaDocumentController::download',
    
    // Communications
    'GET /messages' => 'ElaskaMessageController::list',
    'POST /messages' => 'ElaskaMessageController::send',
    'PUT /messages/{id}/read' => 'ElaskaMessageController::markAsRead',
    
    // CRM
    'GET /crm/leads' => 'ElaskaCrmController::getLeads',
    'POST /crm/leads' => 'ElaskaCrmController::createLead',
    'PUT /crm/leads/{id}/convert' => 'ElaskaCrmController::convertToClient',
    
    // Workflows
    'POST /workflows/trigger' => 'ElaskaWorkflowController::trigger',
    'GET /workflows/rules' => 'ElaskaWorkflowController::getRules'
];
üéØ FONCTIONNALIT√âS AVANC√âES MANQUANTES
7.1 Intelligence Artificielle Light
JavaScript
// Composant d'assistance IA pour conseillers
const AssistantConseiller = ({ dossierId }) => {
  const { suggestions } = useAIAssistant(dossierId);
  
  return (
    <div className="ai-assistant">
      <h3>üí° Suggestions IA</h3>
      {suggestions.map(suggestion => (
        <SuggestionCard 
          key={suggestion.id}
          type={suggestion.type}
          priority={suggestion.priority}
          action={suggestion.recommended_action}
          rationale={suggestion.rationale}
        />
      ))}
    </div>
  );
};
7.2 Simulateurs Portail Client
jsx
// Simulateurs int√©gr√©s au portail
const SimulateurPatrimoine = () => {
  return (
    <div className="simulateur-patrimoine">
      <SimulateurRetraite />
      <SimulateurFiscal />
      <SimulateurInvestissement />
      <SimulateurCapaciteEmprunt />
    </div>
  );
};
7.3 Gamification Client
jsx
// Syst√®me de progression pour engagement client
const ProgressionClient = ({ clientId }) => {
  const { niveau, points, badges } = useClientProgression(clientId);
  
  return (
    <div className="client-progression">
      <NiveauBar niveau={niveau} points={points} />
      <BadgesCollection badges={badges} />
      <DefisPersonnalises />
    </div>
  );
};

ANALYSE TECHNIQUE - ACCOMPAGNEMENT DES PARTICULIERS
Donn√©es, champs et fonctionnalit√©s √† impl√©menter
üìã 1. GESTION ADMINISTRATIVE PERSONNELLE & SUIVI BUDG√âTAIRE
1.1 Audit des Syst√®mes de Classement
üóÇÔ∏è Fiche "Audit Classement" (Nouveau module)

PHP
class ElaskaAuditClassement extends CommonObject {
    public $fk_client;
    public $date_audit;
    public $type_stockage_actuel;     // 'physique', 'numerique', 'mixte'
    public $organisation_physique;    // JSON: d√©tails classeurs, pochettes, etc.
    public $organisation_numerique;   // JSON: arborescence existante
    public $outils_utilises;         // Google Drive, Dropbox, dossiers PC
    public $points_forts;            // TEXT
    public $points_faibles;          // TEXT
    public $documents_egares;        // JSON: liste types docs introuvables
    public $sources_stress;          // TEXT: difficult√©s identifi√©es
    public $temps_recherche_estime;  // Minutes/semaine perdues
    public $recommandations;         // TEXT: solutions propos√©es
}
üìä Interface Backoffice "Audit de Classement"

Onglet "Situation Actuelle" : Photos des syst√®mes existants, inventaire
Onglet "Analyse" : Points forts/faibles, temps perdu
Onglet "Recommandations" : Solutions personnalis√©es propos√©es
1.2 Coffre-Fort Num√©rique Avanc√©
üîê Extension de la GED pour Particuliers

PHP
class ElaskaCoffreFortDocument extends CommonObject {
    public $fk_document_ged;         // Lien vers GED Dolibarr
    public $niveau_securite;         // 'standard', 'coffre_fort', 'ultra_sensible'
    public $type_document_legal;     // 'identite', 'bancaire', 'assurance', 'medical'
    public $duree_conservation_legale; // En ann√©es
    public $date_limite_conservation;
    public $acces_heritiers;         // Boolean
    public $chiffrement_renforce;    // Boolean (AES-256 sp√©cifique)
    public $signature_numerique;     // Horodatage s√©curis√©
    public $historique_acces;        // JSON: qui, quand, depuis o√π
}
üíæ Portail Client - Section "Mon Coffre-Fort"

jsx
const CoffreFortNumerique = () => {
  return (
    <div className="coffre-fort-secure">
      <header className="security-banner">
        <h1>üîê Mon Coffre-Fort Num√©rique</h1>
        <SecurityLevel level="maximum" />
      </header>
      
      <div className="documents-by-category">
        <DocumentCategory 
          title="Identit√© & √âtat Civil"
          types={['cni', 'passeport', 'actes_etat_civil']}
          security="ultra"
        />
        <DocumentCategory 
          title="Bancaire & Patrimonial"
          types={['rib', 'contrats_credit', 'assurance_vie']}
          security="maximum"
        />
        <DocumentCategory 
          title="Sant√© & M√©dical"
          types={['carte_vitale', 'ordonnances', 'resultats_medicaux']}
          security="medical"
        />
      </div>
      
      <ConservationLegaleTracker />
    </div>
  );
};
1.3 √âch√©ancier Intelligent
üìÖ Table √âch√©ances Personnalis√©es

SQL
CREATE TABLE llx_elaska_echeancier_particulier (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    ref_elaska VARCHAR(50),
    type_echeance ENUM(
        'impots', 'assurance', 'pret', 'facture_recurrente',
        'controle_technique', 'renouvellement_papiers', 
        'medical', 'administratif', 'autre'
    ),
    libelle VARCHAR(255),
    organisme_concerne VARCHAR(255),
    date_echeance DATE,
    periodicite ENUM('unique', 'mensuel', 'trimestriel', 'annuel'),
    montant_estime DECIMAL(8,2),
    statut ENUM('planifie', 'rappel_envoye', 'traite', 'reporte'),
    
    -- Param√®tres de rappel
    rappel_j_moins_30 BOOLEAN DEFAULT TRUE,
    rappel_j_moins_15 BOOLEAN DEFAULT TRUE,
    rappel_j_moins_7 BOOLEAN DEFAULT TRUE,
    rappel_j_moins_1 BOOLEAN DEFAULT TRUE,
    
    -- Canaux de rappel
    rappel_email BOOLEAN DEFAULT TRUE,
    rappel_sms BOOLEAN DEFAULT FALSE,
    rappel_portail BOOLEAN DEFAULT TRUE,
    
    -- Informations compl√©mentaires
    documents_necessaires JSON,
    compte_a_provisionner VARCHAR(100),
    contact_organisme JSON,
    notes_conseiller TEXT,
    
    INDEX idx_client_date (fk_soc, date_echeance),
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üîî Syst√®me de Rappels Automatis√©s

PHP
class ElaskaEcheancierManager {
    public function generateReminders() {
        $echeances = $this->getUpcomingEcheances([30, 15, 7, 1]); // Jours avant
        
        foreach ($echeances as $echeance) {
            if ($echeance->rappel_email) {
                $this->sendEmailReminder($echeance);
            }
            if ($echeance->rappel_sms) {
                $this->sendSMSReminder($echeance);
            }
            if ($echeance->rappel_portail) {
                $this->createPortalNotification($echeance);
            }
        }
    }
    
    private function sendEmailReminder($echeance) {
        $template = $this->getEmailTemplate('echeance_reminder');
        $variables = [
            '[CLIENT]' => $echeance->client->nom,
            '[ECHEANCE]' => $echeance->libelle,
            '[DATE]' => $echeance->date_echeance,
            '[MONTANT]' => $echeance->montant_estime,
            '[DOCUMENTS]' => implode(', ', $echeance->documents_necessaires)
        ];
        $this->emailService->send($template, $variables, $echeance->client->email);
    }
}
1.4 Gestion Budg√©taire Avanc√©e
üí∞ Module Budget Particulier

SQL
CREATE TABLE llx_elaska_budget_particulier (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    periode_budget DATE, -- Premier jour du mois
    statut ENUM('previsionnel', 'realise', 'archive'),
    
    -- REVENUS
    salaire_net DECIMAL(8,2),
    allocations_familiales DECIMAL(8,2),
    allocations_logement DECIMAL(8,2),
    rsa_prime_activite DECIMAL(8,2),
    pensions_retraite DECIMAL(8,2),
    autres_revenus DECIMAL(8,2),
    total_revenus DECIMAL(8,2),
    
    -- CHARGES FIXES
    loyer_charges DECIMAL(8,2),
    assurances DECIMAL(8,2),
    energie_eau DECIMAL(8,2),
    telephone_internet DECIMAL(8,2),
    credit_immobilier DECIMAL(8,2),
    credit_consommation DECIMAL(8,2),
    impots_mensuels DECIMAL(8,2),
    total_charges_fixes DECIMAL(8,2),
    
    -- CHARGES VARIABLES
    alimentation DECIMAL(8,2),
    transport DECIMAL(8,2),
    sante DECIMAL(8,2),
    habillement DECIMAL(8,2),
    loisirs DECIMAL(8,2),
    autres_variables DECIMAL(8,2),
    total_charges_variables DECIMAL(8,2),
    
    -- CALCULS
    reste_a_vivre DECIMAL(8,2),
    capacite_epargne DECIMAL(8,2),
    taux_endettement DECIMAL(5,2),
    
    -- ANALYSE
    postes_optimisation JSON, -- Suggestions d'√©conomies
    alertes_budgetaires JSON,
    objectifs_epargne JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üìä Portail Client - "Mon Budget"

jsx
const MonBudget = () => {
  const { budget, suggestions } = useBudgetData();
  
  return (
    <div className="budget-dashboard">
      <BudgetOverview 
        revenus={budget.total_revenus}
        charges={budget.total_charges_fixes + budget.total_charges_variables}
        resteAVivre={budget.reste_a_vivre}
        tauxEndettement={budget.taux_endettement}
      />
      
      <div className="budget-sections">
        <BudgetSection title="Mes Revenus" data={budget.revenus} />
        <BudgetSection title="Charges Fixes" data={budget.charges_fixes} />
        <BudgetSection title="Charges Variables" data={budget.charges_variables} />
      </div>
      
      <OptimisationSuggestions suggestions={suggestions} />
      <ObjectifsEpargne />
    </div>
  );
};
üìù 2. ACCOMPAGNEMENT D√âMARCHES SP√âCIFIQUES
2.1 Proc√©dure de Surendettement
‚öñÔ∏è Dossier Surendettement

SQL
CREATE TABLE llx_elaska_dossier_surendettement (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_dossier_general INT, -- Lien vers dossier principal
    numero_dossier_bdf VARCHAR(50), -- Num√©ro attribu√© par BDF
    
    -- STATUT ET SUIVI
    etape_procedure ENUM(
        'diagnostic', 'constitution_dossier', 'depot_bdf', 
        'instruction', 'decision_recevabilite', 'plan_propose',
        'homologation', 'execution_plan', 'cloture'
    ),
    date_depot_bdf DATE,
    date_accuse_reception DATE,
    date_decision_recevabilite DATE,
    decision_recevabilite ENUM('recevable', 'irrecevable', 'en_attente'),
    
    -- SITUATION FINANCI√àRE
    montant_total_dettes DECIMAL(10,2),
    nombre_creanciers INT,
    revenus_mensuels DECIMAL(8,2),
    charges_mensuels DECIMAL(8,2),
    reste_a_vivre DECIMAL(8,2),
    patrimoine_mobilier DECIMAL(10,2),
    patrimoine_immobilier DECIMAL(10,2),
    
    -- DOCUMENTS JOINTS
    pieces_identite_ok BOOLEAN DEFAULT FALSE,
    justificatifs_revenus_ok BOOLEAN DEFAULT FALSE,
    justificatifs_charges_ok BOOLEAN DEFAULT FALSE,
    tableau_dettes_ok BOOLEAN DEFAULT FALSE,
    justificatifs_patrimoine_ok BOOLEAN DEFAULT FALSE,
    lettre_saisine_ok BOOLEAN DEFAULT FALSE,
    
    -- SUIVI DES CR√âANCIERS
    creanciers_contactes JSON, -- Liste et statut des n√©gociations
    
    -- PLAN DE REDRESSEMENT
    type_plan ENUM('conventionnel', 'recommande', 'impose'),
    duree_plan_mois INT,
    montant_mensuel_plan DECIMAL(8,2),
    effacement_partiel DECIMAL(10,2),
    
    FOREIGN KEY (fk_dossier_general) REFERENCES llx_elaska_dossier(rowid)
);
üìã Interface Timeline Surendettement

jsx
const TimelineSurendettement = ({ dossierId }) => {
  const etapes = [
    { 
      id: 'diagnostic', 
      label: 'Diagnostic de situation',
      documents: ['budget_detaille', 'liste_dettes'],
      duree_estimee: '1-2 semaines'
    },
    { 
      id: 'constitution_dossier',
      label: 'Constitution du dossier BDF',
      documents: ['formulaire_bdf', 'pieces_justificatives', 'lettre_saisine'],
      duree_estimee: '2-3 semaines'
    },
    {
      id: 'depot_bdf',
      label: 'D√©p√¥t √† la Banque de France',
      documents: ['accuse_reception'],
      duree_estimee: '1 jour'
    }
    // ... autres √©tapes
  ];
  
  return <TimelineComponent etapes={etapes} type="surendettement" />;
};
2.2 Droits Sociaux
üèõÔ∏è Module Droits Sociaux

SQL
CREATE TABLE llx_elaska_droits_sociaux (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- SITUATION FAMILIALE
    composition_foyer JSON, -- Nombre adultes, enfants, √¢ges
    situation_maritale ENUM('celibataire', 'marie', 'pacs', 'divorce', 'veuf'),
    
    -- DROITS IDENTIFI√âS
    eligible_rsa BOOLEAN,
    eligible_prime_activite BOOLEAN,
    eligible_apl BOOLEAN,
    eligible_aah BOOLEAN,
    eligible_apa BOOLEAN,
    eligible_css BOOLEAN,
    eligible_bourses_scolaires BOOLEAN,
    eligible_cheque_energie BOOLEAN,
    
    -- PLAFONDS ET CALCULS
    plafond_ressources_caf DECIMAL(8,2),
    montant_estime_rsa DECIMAL(8,2),
    montant_estime_prime_activite DECIMAL(8,2),
    montant_estime_apl DECIMAL(8,2),
    
    -- DISPOSITIFS LOCAUX OCCITANIE
    eligible_fonds_solidarite_logement BOOLEAN,
    eligible_aide_transport_regional BOOLEAN,
    eligible_cheque_sport_culture BOOLEAN,
    eligible_aide_energie_departement BOOLEAN,
    
    -- SUIVI DES DEMANDES
    demandes_en_cours JSON, -- Type, date, statut, organisme
    demandes_acceptees JSON,
    demandes_refusees JSON,
    
    date_derniere_analyse DATE,
    conseiller_referent INT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üéØ Portail Client - "Mes Droits Sociaux"

jsx
const MesDroitsSociaux = () => {
  const { droits, demandes } = useDroitsSociaux();
  
  return (
    <div className="droits-sociaux">
      <header>
        <h1>Mes Droits Sociaux</h1>
        <EligibiliteScore score={droits.score_global} />
      </header>
      
      <section className="droits-identifies">
        <h2>Droits Identifi√©s</h2>
        <DroitCard 
          type="RSA" 
          eligible={droits.eligible_rsa}
          montant={droits.montant_estime_rsa}
          statut={demandes.rsa?.statut}
        />
        <DroitCard 
          type="Prime d'Activit√©" 
          eligible={droits.eligible_prime_activite}
          montant={droits.montant_estime_prime_activite}
          statut={demandes.prime_activite?.statut}
        />
        {/* Autres droits */}
      </section>
      
      <section className="dispositifs-locaux">
        <h2>Aides Locales Occitanie</h2>
        <DispositivLocal 
          nom="Fonds Solidarit√© Logement"
          eligible={droits.eligible_fsl}
          description="Aide pour d√©p√¥t de garantie et loyers impay√©s"
        />
      </section>
      
      <DemandesEnCours demandes={demandes.en_cours} />
    </div>
  );
};
2.3 Formation Num√©rique
üíª Module Formation Num√©rique

SQL
CREATE TABLE llx_elaska_formation_numerique (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- √âVALUATION INITIALE
    niveau_initial ENUM('debutant', 'initie', 'intermediaire', 'autonome'),
    equipements_possedes JSON, -- ordinateur, tablette, smartphone
    connexion_internet BOOLEAN,
    besoins_exprimes JSON,
    
    -- OBJECTIFS PERSONNALIS√âS
    objectif_email BOOLEAN,
    objectif_navigation_web BOOLEAN,
    objectif_france_connect BOOLEAN,
    objectif_caf_en_ligne BOOLEAN,
    objectif_impots_en_ligne BOOLEAN,
    objectif_ameli BOOLEAN,
    objectif_ants BOOLEAN,
    
    -- PROGRESSION
    seances_programmees JSON,
    seances_realisees JSON,
    competences_acquises JSON,
    
    -- SUPPORT CONTINU
    aide_a_distance_activee BOOLEAN,
    numero_support VARCHAR(20),
    email_support VARCHAR(100),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üè† 3. CONSEIL EN ABONNEMENTS & ASSURANCES
3.1 Audit Abonnements
üìä Module Audit Abonnements

SQL
CREATE TABLE llx_elaska_abonnement_audit (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    date_audit DATE,
    
    -- ABONNEMENTS √âNERGIE
    fournisseur_electricite VARCHAR(100),
    contrat_electricite VARCHAR(100),
    cout_annuel_electricite DECIMAL(8,2),
    consommation_kwh_annuelle INT,
    
    fournisseur_gaz VARCHAR(100),
    contrat_gaz VARCHAR(100),
    cout_annuel_gaz DECIMAL(8,2),
    consommation_kwh_gaz_annuelle INT,
    
    -- T√âL√âCOMMUNICATIONS
    operateur_mobile VARCHAR(100),
    forfait_mobile VARCHAR(100),
    cout_mensuel_mobile DECIMAL(6,2),
    data_mensuelle_mo INT,
    
    operateur_internet VARCHAR(100),
    offre_internet VARCHAR(100),
    cout_mensuel_internet DECIMAL(6,2),
    debit_descendant_mbps INT,
    
    -- M√âDIAS & STREAMING
    abonnements_tv JSON,
    abonnements_streaming JSON,
    abonnements_presse JSON,
    
    -- ANALYSE
    cout_total_mensuel DECIMAL(8,2),
    cout_total_annuel DECIMAL(8,2),
    postes_sur_consommation JSON,
    recommandations JSON,
    economies_potentielles DECIMAL(8,2),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üìà Portail - "Mes Abonnements"

jsx
const MesAbonnements = () => {
  const { abonnements, analyse, recommandations } = useAbonnementsData();
  
  return (
    <div className="abonnements-dashboard">
      <SyntheseFinanciere 
        coutTotal={analyse.cout_total_mensuel}
        economiesPotentielles={analyse.economies_potentielles}
      />
      
      <div className="categories-abonnements">
        <AbonnementCategory 
          title="√ânergie"
          abonnements={abonnements.energie}
          recommandations={recommandations.energie}
        />
        <AbonnementCategory 
          title="T√©l√©communications"
          abonnements={abonnements.telecom}
          recommandations={recommandations.telecom}
        />
        <AbonnementCategory 
          title="Streaming & M√©dias"
          abonnements={abonnements.streaming}
          recommandations={recommandations.streaming}
        />
      </div>
      
      <OptimisationPlanner />
    </div>
  );
};
3.2 Courtage Assurances (si ORIAS)
üõ°Ô∏è Module Analyse Risques Assurance

SQL
CREATE TABLE llx_elaska_analyse_risques_assurance (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    date_analyse DATE,
    
    -- PROFIL ASSUR√â
    age_assure_principal INT,
    profession VARCHAR(100),
    situation_familiale VARCHAR(50),
    revenus_annuels DECIMAL(10,2),
    
    -- PATRIMOINE √Ä ASSURER
    residence_principale JSON, -- valeur, type, surface
    residence_secondaire JSON,
    vehicules JSON, -- marque, mod√®le, valeur, usage
    patrimoine_mobilier DECIMAL(10,2),
    
    -- BESOINS IDENTIFI√âS
    besoin_habitation BOOLEAN,
    besoin_automobile BOOLEAN,
    besoin_sante BOOLEAN,
    besoin_prevoyance BOOLEAN,
    besoin_emprunteur BOOLEAN,
    besoin_protection_juridique BOOLEAN,
    
    -- RISQUES SP√âCIFIQUES
    zone_inondable BOOLEAN,
    zone_sismique BOOLEAN,
    activite_risquee BOOLEAN,
    antecedents_medicaux BOOLEAN,
    
    -- BUDGET ASSURANCE
    budget_annuel_souhaite DECIMAL(8,2),
    niveau_franchise_accepte ENUM('faible', 'moyen', 'eleve'),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üîß FONCTIONNALIT√âS TRANSVERSALES N√âCESSAIRES
1. Templates Emails HTML Sp√©cialis√©s
SQL
CREATE TABLE llx_elaska_email_template_particulier (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    nom_template VARCHAR(100),
    contexte ENUM(
        'rappel_echeance', 'bilan_budget', 'nouveau_droit_social',
        'optimisation_abonnement', 'formation_numerique',
        'suivi_surendettement', 'conseil_assurance'
    ),
    sujet_template VARCHAR(255),
    html_body TEXT,
    variables_disponibles JSON,
    auto_declenchement BOOLEAN DEFAULT FALSE
);
2. Workflows Automatis√©s Particuliers
PHP
// Exemples de r√®gles m√©tier automatisables
$workflows = [
    'nouveau_particulier' => [
        'trigger' => 'creation_tiers_particulier',
        'actions' => [
            'creer_dossier_audit_classement',
            'planifier_rdv_bilan_droits_sociaux',
            'envoyer_email_bienvenue_avec_guide'
        ]
    ],
    'echeance_proche' => [
        'trigger' => 'echeance_dans_15_jours',
        'actions' => [
            'notification_conseiller',
            'email_client_personnalise',
            'sms_si_urgent'
        ]
    ],
    'evolution_situation' => [
        'trigger' => 'changement_revenus',
        'actions' => [
            'recalculer_droits_sociaux',
            'proposer_nouveau_bilan_budget',
            'alerter_conseiller_si_fragilisation'
        ]
    ]
];
3. Indicateurs de Pilotage Particuliers
SQL
-- Vue de synth√®se pour le tableau de bord gestionnaire
CREATE VIEW v_elaska_kpi_particuliers AS
SELECT 
    COUNT(*) as nb_clients_particuliers,
    AVG(budget.reste_a_vivre) as reste_vivre_moyen,
    COUNT(CASE WHEN surendettement.rowid IS NOT NULL THEN 1 END) as nb_dossiers_surendettement,
    AVG(abonnements.economies_potentielles) as economies_moyennes_identifiees,
    COUNT(CASE WHEN formation.niveau_initial = 'debutant' THEN 1 END) as nb_clients_a_former
FROM llx_societe s
LEFT JOIN llx_elaska_budget_particulier budget ON s.rowid = budget.fk_soc
LEFT JOIN llx_elaska_dossier_surendettement surendettement ON s.rowid = surendettement.fk_soc
LEFT JOIN llx_elaska_abonnement_audit abonnements ON s.rowid = abonnements.fk_soc
LEFT JOIN llx_elaska_formation_numerique formation ON s.rowid = formation.fk_soc
WHERE s.type_client = 'particulier';

**ANALYSE TECHNIQUE - ACCOMPAGNEMENT DES ENTREPRISES
Modules, donn√©es et fonctionnalit√©s sp√©cialis√©es TPE/PME
üîç 1. CONSEIL EN ORGANISATION & OPTIMISATION PROCESSUS
1.1 Diagnostic Organisationnel
üìä Module Diagnostic Organisationnel

SQL
CREATE TABLE llx_elaska_diagnostic_organisationnel (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL, -- Entreprise cliente
    date_diagnostic DATE,
    
    -- PROFIL ENTREPRISE
    secteur_activite VARCHAR(100),
    effectif_salaries INT,
    ca_annuel_estime DECIMAL(12,2),
    age_entreprise_annees INT,
    
    -- ANALYSE WORKFLOWS
    workflows_analyses JSON, -- D√©tail de chaque processus analys√©
    points_friction JSON, -- Goulets d'√©tranglement identifi√©s
    taches_chronophages JSON, -- T√¢ches √† fort ratio temps/valeur
    
    -- √âVALUATION OUTILS
    outils_actuels JSON, -- ERP, CRM, logiciels utilis√©s
    adequation_outils JSON, -- Pertinence de chaque outil
    besoins_nouveaux_outils JSON,
    
    -- TEMPS ET CO√õTS
    temps_admin_hebdo_heures DECIMAL(5,2),
    cout_admin_annuel_estime DECIMAL(10,2),
    potentiel_optimisation_pourcent INT,
    gain_temps_estime_heures DECIMAL(5,2),
    gain_financier_estime DECIMAL(10,2),
    
    -- RECOMMANDATIONS
    recommandations_prioritaires JSON,
    plan_action_propose JSON,
    budget_transformation_estime DECIMAL(10,2),
    
    -- SUIVI
    statut_mise_en_oeuvre ENUM('diagnostic', 'plan_accepte', 'en_cours', 'termine'),
    conseiller_referent INT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üéØ Interface Backoffice - "Diagnostic Organisationnel"

PHP
// Page diagnostic/card.php
class DiagnosticPage {
    public function showDiagnosticForm($entreprise_id) {
        $tabs = [
            'situation_actuelle' => [
                'workflows' => 'Analyse des flux de travail',
                'outils' => '√âvaluation des outils',
                'temps_couts' => 'Temps et co√ªts administratifs'
            ],
            'analyse' => [
                'points_friction' => 'Points de friction identifi√©s',
                'optimisations' => 'Potentiels d\'optimisation'
            ],
            'recommandations' => [
                'plan_action' => 'Plan d\'action propos√©',
                'budget' => 'Budget transformation'
            ],
            'suivi' => [
                'mise_en_oeuvre' => 'Suivi de la mise en ≈ìuvre'
            ]
        ];
        
        return $this->renderTabbedInterface($tabs);
    }
}
1.2 Conseil Outils Num√©riques
üíª Module Conseil Outils TPE

SQL
CREATE TABLE llx_elaska_conseil_outils_numeriques (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_diagnostic INT, -- Lien vers diagnostic organisationnel
    
    -- BESOINS IDENTIFI√âS
    besoin_erp BOOLEAN DEFAULT FALSE,
    besoin_crm BOOLEAN DEFAULT FALSE,
    besoin_gestion_projet BOOLEAN DEFAULT FALSE,
    besoin_ged BOOLEAN DEFAULT FALSE,
    besoin_facturation BOOLEAN DEFAULT FALSE,
    besoin_paie_rh BOOLEAN DEFAULT FALSE,
    
    -- ANALYSE PAR OUTIL
    outils_compares JSON, -- Liste des solutions √©valu√©es
    criteres_evaluation JSON, -- Prix, fonctionnalit√©s, int√©gration
    
    -- RECOMMANDATIONS
    outil_recommande_erp VARCHAR(100),
    outil_recommande_crm VARCHAR(100),
    outil_recommande_gp VARCHAR(100),
    
    -- D√âPLOIEMENT
    plan_deploiement JSON,
    formation_necessaire JSON,
    budget_total_estime DECIMAL(10,2),
    duree_deploiement_mois INT,
    
    -- SUIVI
    statut_deploiement ENUM('etude', 'choix_fait', 'deploiement', 'formation', 'termine'),
    prestataire_retenu VARCHAR(100),
    
    FOREIGN KEY (fk_diagnostic) REFERENCES llx_elaska_diagnostic_organisationnel(rowid)
);
üè¢ 2. EXTERNALISATION ADMINISTRATIVE (OFFICE MANAGEMENT)
2.1 Gestion Administrative G√©n√©rale
üìù Module Office Management Externalis√©

SQL
CREATE TABLE llx_elaska_office_management (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    date_debut_service DATE,
    
    -- SERVICES ACTIV√âS
    gestion_courrier BOOLEAN DEFAULT FALSE,
    gestion_emails BOOLEAN DEFAULT FALSE,
    gestion_agendas BOOLEAN DEFAULT FALSE,
    gestion_deplacement BOOLEAN DEFAULT FALSE,
    gestion_fournitures BOOLEAN DEFAULT FALSE,
    
    -- PARAM√àTRES COURRIER
    adresse_courrier TEXT, -- Si diff√©rente du si√®ge
    frequence_releve ENUM('quotidien', '2_fois_semaine', 'hebdomadaire'),
    types_courrier_traites JSON,
    
    -- PARAM√àTRES EMAILS
    emails_delegues JSON, -- Adresses email g√©r√©es
    regles_traitement JSON, -- Qui traiter, qui rediriger
    
    -- PARAM√àTRES AGENDAS
    agendas_geres JSON, -- Dirigeants concern√©s
    plages_rdv_autorisees JSON,
    types_rdv_planifiables JSON,
    
    -- STATISTIQUES
    nb_courriers_mois INT,
    nb_emails_traites_mois INT,
    nb_rdv_planifies_mois INT,
    nb_deplacements_organises_mois INT,
    
    -- SATISFACTION
    satisfaction_client ENUM('1', '2', '3', '4', '5'),
    commentaires_client TEXT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);

-- Table pour tra√ßabilit√© des t√¢ches
CREATE TABLE llx_elaska_office_task_log (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_office_management INT,
    date_tache DATETIME,
    type_tache ENUM('courrier', 'email', 'rdv', 'deplacement', 'fournitures', 'autre'),
    description_tache TEXT,
    temps_passe_minutes INT,
    statut ENUM('en_cours', 'termine', 'reporte'),
    facturable BOOLEAN DEFAULT TRUE,
    
    FOREIGN KEY (fk_office_management) REFERENCES llx_elaska_office_management(rowid)
);
2.2 Gestion Commerciale
üíº Module Gestion Commerciale Externalis√©e

SQL
CREATE TABLE llx_elaska_gestion_commerciale (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- SERVICES COMMERCIAUX
    gestion_devis BOOLEAN DEFAULT FALSE,
    gestion_facturation BOOLEAN DEFAULT FALSE,
    suivi_encaissements BOOLEAN DEFAULT FALSE,
    relances_impayes BOOLEAN DEFAULT FALSE,
    gestion_commandes_fournisseurs BOOLEAN DEFAULT FALSE,
    maj_crm BOOLEAN DEFAULT FALSE,
    
    -- PARAM√àTRES DEVIS/FACTURATION
    modeles_devis JSON, -- Templates personnalis√©s
    mentions_legales TEXT,
    conditions_generales TEXT,
    delai_validite_devis_jours INT DEFAULT 30,
    
    -- PARAM√àTRES ENCAISSEMENTS
    delai_paiement_standard_jours INT DEFAULT 30,
    seuil_relance_euro DECIMAL(8,2) DEFAULT 50.00,
    procedure_relance JSON, -- J+3, J+15, J+30, LR
    
    -- INT√âGRATIONS
    logiciel_comptable VARCHAR(100),
    api_bancaire_active BOOLEAN DEFAULT FALSE,
    crm_utilise VARCHAR(100),
    
    -- INDICATEURS
    nb_devis_mois INT,
    taux_transformation_devis DECIMAL(5,2),
    nb_factures_mois INT,
    montant_facture_moyen DECIMAL(8,2),
    delai_paiement_moyen_jours DECIMAL(5,1),
    taux_impayes DECIMAL(5,2),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üìä Interface Portail Entreprise - "Mon Activit√© Commerciale"

jsx
const MonActiviteCommerciale = () => {
  const { stats, devis, factures } = useCommercialData();
  
  return (
    <div className="commercial-dashboard">
      <header>
        <h1>Mon Activit√© Commerciale</h1>
        <PerformanceIndicators stats={stats} />
      </header>
      
      <div className="commercial-sections">
        <section className="devis-en-cours">
          <h2>Devis en Cours</h2>
          <DevisList 
            devis={devis.en_cours}
            showActions={['relancer', 'transformer', 'archiver']}
          />
        </section>
        
        <section className="facturation">
          <h2>Facturation</h2>
          <FacturationOverview factures={factures} />
          <EncaissementsChart />
        </section>
        
        <section className="impayes">
          <h2>Cr√©ances & Relances</h2>
          <ImpayesTracker />
        </section>
      </div>
      
      <TresoreriePrevisionnelle />
    </div>
  );
};
2.3 Pr√©-comptabilit√©
üìö Module Pr√©-comptabilit√©

SQL
CREATE TABLE llx_elaska_pre_comptabilite (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    periode_mois DATE, -- Premier jour du mois
    
    -- ORGANISATION
    expert_comptable VARCHAR(100),
    contact_cabinet_comptable VARCHAR(100),
    frequence_transmission ENUM('mensuel', 'trimestriel'),
    
    -- PI√àCES COLLECT√âES
    nb_factures_achat INT,
    nb_factures_vente INT,
    nb_notes_frais INT,
    nb_releves_bancaires INT,
    
    -- CONTR√îLES EFFECTU√âS
    factures_achat_verifiees BOOLEAN DEFAULT FALSE,
    factures_vente_lettrees BOOLEAN DEFAULT FALSE,
    rapprochement_bancaire_ok BOOLEAN DEFAULT FALSE,
    notes_frais_controlees BOOLEAN DEFAULT FALSE,
    
    -- TRANSMISSION
    date_transmission_prevue DATE,
    date_transmission_reelle DATETIME,
    mode_transmission ENUM('email', 'portail_ec', 'depot_physique'),
    
    -- TR√âSORERIE
    solde_debut_periode DECIMAL(10,2),
    total_encaissements DECIMAL(10,2),
    total_decaissements DECIMAL(10,2),
    solde_fin_periode DECIMAL(10,2),
    
    -- ALERTES
    decouvert_detecte BOOLEAN DEFAULT FALSE,
    echeances_importantes JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üë• 3. GESTION EXTERNALIS√âE RH
3.1 Administration du Personnel
üë®‚Äçüíº Module RH Externalis√©

SQL
CREATE TABLE llx_elaska_rh_externalise (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- SERVICES RH ACTIV√âS
    gestion_embauches BOOLEAN DEFAULT FALSE,
    gestion_contrats BOOLEAN DEFAULT FALSE,
    gestion_absences BOOLEAN DEFAULT FALSE,
    gestion_visites_medicales BOOLEAN DEFAULT FALSE,
    gestion_fin_contrat BOOLEAN DEFAULT FALSE,
    
    -- PARAM√àTRES
    convention_collective VARCHAR(100),
    service_sante_travail VARCHAR(100),
    organismes_sociaux JSON, -- URSSAF, caisses retraite, etc.
    
    -- EFFECTIF
    nb_salaries_cdi INT,
    nb_salaries_cdd INT,
    nb_stagiaires INT,
    
    -- SUIVI P√âRIODES ESSAI
    periodes_essai_en_cours JSON,
    
    -- SUIVI ABSENCES
    conges_payes_soldes JSON, -- Par salari√©
    rtt_soldes JSON,
    arrets_maladie_en_cours JSON,
    
    -- VISITES M√âDICALES
    visites_a_programmer JSON,
    visites_planifiees JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);

CREATE TABLE llx_elaska_salarie_suivi (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_rh_externalise INT,
    
    -- IDENTIT√â
    nom VARCHAR(100),
    prenom VARCHAR(100),
    numero_ss VARCHAR(15) ENCRYPTED, -- Chiffr√©
    
    -- CONTRAT
    type_contrat ENUM('cdi', 'cdd', 'stage', 'apprentissage'),
    date_entree DATE,
    date_fin_contrat DATE,
    poste VARCHAR(100),
    
    -- SUIVI ADMINISTRATIF
    dpae_effectuee BOOLEAN DEFAULT FALSE,
    visite_medicale_embauche BOOLEAN DEFAULT FALSE,
    affiliations_effectuees BOOLEAN DEFAULT FALSE,
    
    -- P√âRIODE ESSAI
    duree_essai_mois INT,
    fin_periode_essai DATE,
    renouvellement_essai BOOLEAN DEFAULT FALSE,
    
    -- ABSENCES
    solde_cp_jours DECIMAL(4,1),
    solde_rtt_jours DECIMAL(4,1),
    
    FOREIGN KEY (fk_rh_externalise) REFERENCES llx_elaska_rh_externalise(rowid)
);
3.2 Recrutement
üéØ Module Recrutement Externalis√©

SQL
CREATE TABLE llx_elaska_recrutement (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    ref_elaska VARCHAR(50),
    
    -- BESOIN
    intitule_poste VARCHAR(100),
    description_poste TEXT,
    profil_recherche TEXT,
    type_contrat_vise ENUM('cdi', 'cdd', 'stage', 'apprentissage'),
    salaire_min DECIMAL(8,2),
    salaire_max DECIMAL(8,2),
    
    -- DIFFUSION
    canaux_diffusion JSON, -- Indeed, LinkedIn, PE, APEC, etc.
    date_debut_diffusion DATE,
    date_fin_diffusion DATE,
    
    -- CANDIDATURES
    nb_candidatures_recues INT,
    nb_candidatures_preselect INT,
    nb_entretiens_programmes INT,
    nb_candidats_finalistes INT,
    
    -- SUIVI
    statut_recrutement ENUM('ouvert', 'preselection', 'entretiens', 'finaliste', 'pourvu', 'abandonne'),
    candidat_retenu INT, -- Lien vers table candidats
    date_prise_poste DATE,
    
    -- SATISFACTION
    satisfaction_processus ENUM('1', '2', '3', '4', '5'),
    duree_totale_jours INT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);

CREATE TABLE llx_elaska_candidat (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_recrutement INT,
    
    nom VARCHAR(100),
    prenom VARCHAR(100),
    email VARCHAR(100),
    telephone VARCHAR(20),
    
    -- CANDIDATURE
    date_candidature DATE,
    source_candidature VARCHAR(50), -- Indeed, cooptation, etc.
    cv_filename VARCHAR(255),
    lettre_motivation_filename VARCHAR(255),
    
    -- √âVALUATION
    note_cv ENUM('1', '2', '3', '4', '5'),
    commentaire_cv TEXT,
    preselectionne BOOLEAN DEFAULT FALSE,
    
    -- ENTRETIEN
    date_entretien DATETIME,
    note_entretien ENUM('1', '2', '3', '4', '5'),
    commentaire_entretien TEXT,
    
    -- STATUT
    statut ENUM('recu', 'preselectionne', 'entretien_programme', 'entretien_fait', 'retenu', 'refuse'),
    
    FOREIGN KEY (fk_recrutement) REFERENCES llx_elaska_recrutement(rowid)
);
üìä 4. SUIVI DE GESTION & REPORTING
4.1 Budget Pr√©visionnel & Suivi
üí∞ Module Budget Entreprise

SQL
CREATE TABLE llx_elaska_budget_entreprise (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    exercice_annee INT,
    version_budget INT DEFAULT 1, -- V1, V2 si r√©visions
    
    -- CHIFFRE D'AFFAIRES PR√âVISIONNEL
    ca_previsionnel_total DECIMAL(12,2),
    ca_repartition_mensuelle JSON, -- R√©partition par mois
    ca_par_activite JSON, -- Si plusieurs activit√©s
    
    -- CHARGES VARIABLES
    achats_marchandises DECIMAL(10,2),
    sous_traitance DECIMAL(10,2),
    autres_charges_variables DECIMAL(10,2),
    
    -- CHARGES FIXES
    salaires_charges_sociales DECIMAL(10,2),
    loyers_charges_locatives DECIMAL(10,2),
    assurances DECIMAL(8,2),
    energie_eau DECIMAL(8,2),
    telecommunications DECIMAL(8,2),
    maintenance_informatique DECIMAL(8,2),
    expert_comptable DECIMAL(8,2),
    autres_services_exterieurs DECIMAL(10,2),
    
    -- AMORTISSEMENTS
    dotations_amortissements DECIMAL(8,2),
    
    -- CHARGES FINANCI√àRES
    interets_emprunts DECIMAL(8,2),
    
    -- R√âSULTAT PR√âVISIONNEL
    resultat_exploitation DECIMAL(10,2),
    resultat_net DECIMAL(10,2),
    
    -- SUIVI R√âALIS√â vs PR√âVISIONNEL
    ca_realise_cumule DECIMAL(12,2),
    charges_realisees_cumule DECIMAL(10,2),
    ecart_ca_pourcent DECIMAL(5,2),
    ecart_charges_pourcent DECIMAL(5,2),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
4.2 Tableaux de Bord KPI
üìà Module Tableau de Bord Entreprise

SQL
CREATE TABLE llx_elaska_kpi_entreprise (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    periode_mois DATE,
    
    -- KPI COMMERCIAUX
    ca_mensuel DECIMAL(10,2),
    nb_nouveaux_clients INT,
    panier_moyen DECIMAL(8,2),
    taux_transformation_prospects DECIMAL(5,2),
    
    -- KPI FINANCIERS
    tresorerie_fin_mois DECIMAL(10,2),
    dso_jours DECIMAL(5,1), -- D√©lai moyen de paiement clients
    rotation_stocks_jours DECIMAL(5,1),
    
    -- KPI RH
    effectif_fin_mois INT,
    taux_absenteisme DECIMAL(5,2),
    turnover_annualise DECIMAL(5,2),
    
    -- KPI OP√âRATIONNELS
    taux_service_commandes DECIMAL(5,2),
    delai_livraison_moyen_jours DECIMAL(4,1),
    taux_satisfaction_client DECIMAL(5,2),
    
    -- ALERTES
    alertes_tresorerie JSON,
    alertes_commercial JSON,
    alertes_rh JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üìä Portail Entreprise - Tableau de Bord Dirigeant

jsx
const TableauBordDirigeant = () => {
  const { kpis, alertes, tendances } = useKPIData();
  
  return (
    <div className="dashboard-dirigeant">
      <header>
        <h1>Tableau de Bord de Pilotage</h1>
        <PeriodeSelector />
      </header>
      
      <AlertesBanner alertes={alertes} />
      
      <div className="kpi-grid">
        <KPICard 
          title="CA Mensuel"
          value={kpis.ca_mensuel}
          evolution={tendances.ca_evolution}
          target={kpis.ca_objectif}
        />
        <KPICard 
          title="Tr√©sorerie"
          value={kpis.tresorerie}
          evolution={tendances.tresorerie_evolution}
          alert={alertes.tresorerie}
        />
        <KPICard 
          title="DSO"
          value={kpis.dso_jours}
          unit="jours"
          evolution={tendances.dso_evolution}
        />
        <KPICard 
          title="Effectif"
          value={kpis.effectif}
          evolution={tendances.effectif_evolution}
        />
      </div>
      
      <div className="charts-section">
        <CAChart data={tendances.ca_12_mois} />
        <TresorerieChart data={tendances.tresorerie_6_mois} />
      </div>
      
      <ReportingActions />
    </div>
  );
};
üéØ 5. GESTION DE PROJETS TRANSVERSAUX
5.1 Appels d'Offres
üìã Module Appels d'Offres

SQL
CREATE TABLE llx_elaska_appel_offres (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    ref_elaska VARCHAR(50),
    
    -- IDENTIFICATION
    intitule_ao TEXT,
    organisme_acheteur VARCHAR(100),
    numero_ao_acheteur VARCHAR(50),
    
    -- CALENDRIER
    date_publication DATE,
    date_limite_questions DATE,
    date_limite_depot DATETIME,
    date_ouverture_plis DATE,
    
    -- ANALYSE OPPORTUNIT√â
    montant_estime DECIMAL(12,2),
    probabilite_succes ENUM('faible', 'moyenne', 'forte'),
    adequation_competences ENUM('parfaite', 'bonne', 'partielle', 'insuffisante'),
    
    -- CONSTITUTION DOSSIER
    pieces_administratives_ok BOOLEAN DEFAULT FALSE,
    pieces_techniques_ok BOOLEAN DEFAULT FALSE,
    pieces_financieres_ok BOOLEAN DEFAULT FALSE,
    
    -- DOCUMENTS REQUIS
    kbis_fourni BOOLEAN DEFAULT FALSE,
    attestations_fiscales_ok BOOLEAN DEFAULT FALSE,
    attestations_sociales_ok BOOLEAN DEFAULT FALSE,
    assurance_rc_ok BOOLEAN DEFAULT FALSE,
    references_fournies BOOLEAN DEFAULT FALSE,
    
    -- D√âP√îT
    mode_depot ENUM('demat√©rialise', 'physique', 'mixte'),
    depot_effectue BOOLEAN DEFAULT FALSE,
    accuse_reception_recu BOOLEAN DEFAULT FALSE,
    
    -- R√âSULTAT
    statut ENUM('preparation', 'depose', 'analyse', 'admis', 'elimine', 'attributaire', 'abandonne'),
    montant_propose DECIMAL(12,2),
    classement_obtenu INT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
5.2 Dossiers de Financement
üíº Module Financement Entreprise

SQL
CREATE TABLE llx_elaska_dossier_financement (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    ref_elaska VARCHAR(50),
    
    -- TYPE DE FINANCEMENT
    type_financement ENUM(
        'subvention_region', 'subvention_etat', 'bpifrance',
        'pret_bancaire', 'credit_bail', 'affacturage',
        'fonds_investissement', 'crowdfunding'
    ),
    organisme_financeur VARCHAR(100),
    
    -- PROJET FINANC√â
    intitule_projet TEXT,
    description_projet TEXT,
    montant_total_projet DECIMAL(12,2),
    montant_demande DECIMAL(12,2),
    apport_entreprise DECIMAL(12,2),
    
    -- √âLIGIBILIT√â
    criteres_eligibilite JSON,
    eligibilite_validee BOOLEAN DEFAULT FALSE,
    
    -- CONSTITUTION DOSSIER
    business_plan_ok BOOLEAN DEFAULT FALSE,
    previsionnel_financier_ok BOOLEAN DEFAULT FALSE,
    etude_marche_ok BOOLEAN DEFAULT FALSE,
    pieces_administratives_ok BOOLEAN DEFAULT FALSE,
    
    -- SUIVI
    date_depot DATE,
    date_accuse_reception DATE,
    date_decision_prevue DATE,
    decision ENUM('en_attente', 'accorde', 'refuse', 'reporte'),
    montant_accorde DECIMAL(12,2),
    conditions_particulieres TEXT,
    
    -- VERSEMENTS
    modalites_versement JSON,
    versements_recus JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üõ°Ô∏è 6. ABONNEMENTS & ASSURANCES PROFESSIONNELS
6.1 Audit Abonnements Professionnels
üìä Module Abonnements Pro

SQL
CREATE TABLE llx_elaska_abonnements_pro (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    date_audit DATE,
    
    -- T√âL√âCOMMUNICATIONS
    operateur_telephonie_fixe VARCHAR(100),
    nb_lignes_fixes INT,
    cout_mensuel_fixe DECIMAL(8,2),
    
    operateur_flotte_mobile VARCHAR(100),
    nb_lignes_mobiles INT,
    forfait_moyen_mobile DECIMAL(6,2),
    data_moyenne_mo INT,
    
    operateur_internet VARCHAR(100),
    debit_internet_mbps INT,
    cout_mensuel_internet DECIMAL(8,2),
    
    -- √âNERGIE PROFESSIONNELLE
    fournisseur_electricite_pro VARCHAR(100),
    puissance_souscrite_kva INT,
    cout_annuel_electricite DECIMAL(10,2),
    
    fournisseur_gaz_pro VARCHAR(100),
    cout_annuel_gaz DECIMAL(10,2),
    
    -- LOGICIELS & LICENCES
    licences_microsoft DECIMAL(8,2),
    licences_adobe DECIMAL(8,2),
    logiciels_metier JSON, -- Sp√©cifiques au secteur
    
    -- SERVICES PROFESSIONNELS
    maintenance_informatique DECIMAL(8,2),
    sauvegarde_cloud DECIMAL(6,2),
    plateformes_ecommerce DECIMAL(8,2),
    
    -- ANALYSE
    cout_total_mensuel DECIMAL(10,2),
    sur_abonnements_identifies JSON,
    sous_utilisations_detectees JSON,
    economies_potentielles DECIMAL(8,2),
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
6.2 Assurances Professionnelles (si ORIAS)
üõ°Ô∏è Module Assurances Pro

SQL
CREATE TABLE llx_elaska_assurances_pro (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- RISQUES ANALYS√âS
    activite_principale VARCHAR(100),
    ca_annuel_assurable DECIMAL(12,2),
    effectif_a_couvrir INT,
    
    -- BIENS √Ä ASSURER
    locaux_valeur DECIMAL(10,2),
    materiel_informatique DECIMAL(8,2),
    stocks_valeur DECIMAL(10,2),
    vehicules_flotte JSON,
    
    -- BESOINS IDENTIFI√âS
    rc_professionnelle_necessaire BOOLEAN DEFAULT TRUE,
    multirisque_pro_necessaire BOOLEAN DEFAULT TRUE,
    protection_juridique_necessaire BOOLEAN DEFAULT FALSE,
    cyber_risques_necessaire BOOLEAN DEFAULT FALSE,
    homme_cle_necessaire BOOLEAN DEFAULT FALSE,
    
    -- CONTRATS ACTUELS
    contrats_existants JSON,
    prime_totale_annuelle DECIMAL(10,2),
    
    -- RECOMMANDATIONS
    contrats_recommandes JSON,
    economies_potentielles DECIMAL(8,2),
    ameliorations_couverture JSON,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid)
);
üîß AUTOMATISATIONS & WORKFLOWS ENTREPRISES
1. Workflows Automatis√©s TPE/PME
PHP
class ElaskaWorkflowEntreprise {
    public function defineBusinessWorkflows() {
        return [
            'nouvelle_entreprise_cliente' => [
                'trigger' => 'creation_tiers_entreprise',
                'actions' => [
                    'creer_dossier_diagnostic_organisationnel',
                    'planifier_audit_abonnements_pro',
                    'envoyer_questionnaire_besoins_initial',
                    'creer_taches_onboarding'
                ]
            ],
            
            'fin_periode_essai_salarie' => [
                'trigger' => 'fin_periode_essai_dans_7_jours',
                'actions' => [
                    'alerter_conseiller_rh',
                    'preparer_courrier_confirmation',
                    'programmer_point_evaluation'
                ]
            ],
            
            'echeance_contrat_pro' => [
                'trigger' => 'fin_contrat_dans_30_jours',
                'actions' => [
                    'rechercher_alternatives_marche',
                    'negocier_renouvellement',
                    'alerter_dirigeant'
                ]
            ],
            
            'seuil_tresorerie' => [
                'trigger' => 'tresorerie_sous_seuil_critique',
                'actions' => [
                    'alerte_urgente_dirigeant',
                    'analyser_encours_clients',
                    'proposer_solutions_financement'
                ]
            ]
        ];
    }
}
2. Templates Emails Sp√©cialis√©s TPE/PME
SQL
INSERT INTO llx_elaska_email_template_entreprise VALUES
('relance_facture_1', 'Rappel √©ch√©ance facture [NUMERO_FACTURE]', '...'),
('fin_periode_essai', 'Confirmation p√©riode d\'essai - [SALARIE]', '...'),
('rapport_mensuel_dirigeant', 'Votre rapport d\'activit√© [MOIS]', '...'),
('proposition_optimisation', 'Optimisations identifi√©es pour [ENTREPRISE]', '...');

Parfait ! Je vais d√©velopper et corriger cette section en cr√©ant une **analyse technique compl√®te et structur√©e pour l'accompagnement des associations**. Voici la version d√©velopp√©e et corrig√©e :

```markdown name=Module_Associations_Technique_Complet.md
# üèõÔ∏è ANALYSE TECHNIQUE COMPL√àTE - ACCOMPAGNEMENT DES ASSOCIATIONS
## Modules sp√©cialis√©s et fonctionnalit√©s d√©di√©es au secteur associatif

### **üìã SOMMAIRE TECHNIQUE**
1. [Cr√©ation, Structuration et √âvolution](#1-cr√©ation-structuration-et-√©volution)
2. [Gouvernance & Vie Associative](#2-gouvernance--vie-associative)
3. [Recherche de Financements](#3-recherche-de-financements)
4. [Gestion Administrative & Comptable](#4-gestion-administrative--comptable)
5. [Strat√©gie & Communication](#5-strat√©gie--communication)
6. [Partenariats & R√©seaux](#6-partenariats--r√©seaux)
7. [Workflows & Automatisations](#7-workflows--automatisations)
8. [Interfaces Portail Sp√©cialis√©es](#8-interfaces-portail-sp√©cialis√©es)

---

## **1. CR√âATION, STRUCTURATION ET √âVOLUTION**

### **1.1 Phase de Pr√©-cr√©ation**

**üí° Module Projet Associatif**

```sql
-- Table principale du projet associatif
CREATE TABLE llx_elaska_projet_associatif (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    ref_elaska VARCHAR(50) UNIQUE NOT NULL,
    
    -- IDENTIFICATION DU PROJET
    denomination_envisagee VARCHAR(255) NOT NULL,
    denomination_alternative VARCHAR(255), -- Plan B si refus
    secteur_activite ENUM(
        'culturel', 'sportif', 'social', 'educatif', 'environnemental',
        'humanitaire', 'religieux', 'professionnel', 'sante', 'autre'
    ) NOT NULL,
    sous_secteur VARCHAR(100), -- Sp√©cialisation dans le secteur
    territoire_action VARCHAR(100) NOT NULL, -- Tarbes, Occitanie, National, International
    
    -- D√âFINITION DU PROJET
    objet_social TEXT NOT NULL, -- Raison d'√™tre principale
    buts_concrets JSON NOT NULL, -- Objectifs pr√©cis mesurables
    public_cible TEXT NOT NULL, -- B√©n√©ficiaires vis√©s d√©taill√©s
    valeurs_fondamentales JSON, -- Principes directeurs
    activites_envisagees JSON NOT NULL, -- Types d'actions pr√©vues
    moyens_actions JSON, -- Comment ces actions seront men√©es
    
    -- √âTUDE DE FAISABILIT√â
    analyse_besoins_territoire TEXT, -- Diagnostic local
    concurrence_existante TEXT, -- Autres structures similaires
    complementarite TEXT, -- En quoi le projet est diff√©rent/compl√©mentaire
    partenaires_potentiels JSON, -- Structures partenaires identifi√©es
    
    -- FONDATEURS & √âQUIPE
    nb_membres_fondateurs INT NOT NULL,
    fondateurs_info JSON NOT NULL, -- Nom, r√¥le, comp√©tences, motivation
    competences_disponibles JSON, -- Inventaire des comp√©tences de l'√©quipe
    competences_manquantes JSON, -- Besoins identifi√©s
    formation_gouvernance_necessaire BOOLEAN DEFAULT TRUE,
    
    -- MATURIT√â DU PROJET
    etape_reflexion ENUM(
        'idee_initiale', 'reflexion_approfondie', 'etude_faisabilite',
        'projet_defini', 'statuts_en_cours', 'pret_creation'
    ) NOT NULL DEFAULT 'idee_initiale',
    points_a_clarifier TEXT,
    obstacles_identifies JSON,
    solutions_envisagees JSON,
    
    -- MOYENS ENVISAG√âS
    budget_previsionnel_annuel DECIMAL(10,2),
    budget_lancement DECIMAL(8,2), -- Co√ªts de d√©marrage
    besoins_locaux TEXT, -- Locaux, √©quipements
    besoins_humains TEXT, -- B√©n√©voles, salari√©s
    besoins_materiels TEXT, -- Mat√©riel, fournitures
    plan_financement_initial JSON, -- Sources de financement envisag√©es
    
    -- CONSEIL & ACCOMPAGNEMENT
    fk_user_accompagnant INT NOT NULL,
    date_debut_accompagnement DATE NOT NULL,
    type_accompagnement ENUM('conseil', 'formation', 'complet') DEFAULT 'conseil',
    duree_accompagnement_mois INT DEFAULT 6,
    
    -- SUIVI
    date_creation DATETIME DEFAULT CURRENT_TIMESTAMP,
    date_derniere_maj DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    actif BOOLEAN DEFAULT TRUE,
    
    -- R√âSULTAT
    association_creee BOOLEAN DEFAULT FALSE,
    date_creation_effective DATE,
    numero_rna_obtenu VARCHAR(20),
    
    INDEX idx_etape (etape_reflexion),
    INDEX idx_secteur (secteur_activite),
    INDEX idx_territoire (territoire_action),
    INDEX idx_accompagnant (fk_user_accompagnant),
    FOREIGN KEY (fk_user_accompagnant) REFERENCES llx_user(rowid)
);

-- Table des sessions de travail sur le projet
CREATE TABLE llx_elaska_session_projet_asso (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_projet_associatif INT NOT NULL,
    
    -- SESSION
    date_session DATETIME NOT NULL,
    duree_minutes INT NOT NULL,
    type_session ENUM('atelier', 'formation', 'coaching', 'validation') NOT NULL,
    participants JSON, -- Qui √©tait pr√©sent
    
    -- CONTENU
    objectifs_session TEXT,
    points_abordes JSON,
    decisions_prises JSON,
    actions_definies JSON,
    
    -- DOCUMENTATION
    supports_utilises JSON, -- Documents, templates
    documents_produits JSON, -- Ce qui est sorti de la session
    
    -- SUIVI
    prochaines_actions JSON,
    date_prochaine_session DATE,
    
    FOREIGN KEY (fk_projet_associatif) REFERENCES llx_elaska_projet_associatif(rowid)
);
```

**üéØ Interface Backoffice - "Accompagnement Pr√©-cr√©ation"**

```php
<?php
// Classe pour la gestion de la pr√©-cr√©ation associative
class ElaskaPreCreationAssociation
{
    private $db;
    private $projet;
    
    public function __construct($db)
    {
        $this->db = $db;
    }
    
    /**
     * Affiche le formulaire de d√©finition du projet en mode progressif
     */
    public function showProjectDefinitionForm($projet_id)
    {
        $sections = [
            'vision' => [
                'title' => 'Vision & Mission',
                'fields' => [
                    'objet_social' => [
                        'label' => 'D√©finition de l\'objet social',
                        'type' => 'textarea',
                        'required' => true,
                        'help' => 'D√©crivez en quelques phrases la raison d\'√™tre de votre association'
                    ],
                    'buts_concrets' => [
                        'label' => 'Objectifs concrets √† atteindre',
                        'type' => 'json_array',
                        'required' => true,
                        'help' => 'Listez 3-5 objectifs mesurables'
                    ],
                    'public_cible' => [
                        'label' => 'Public b√©n√©ficiaire',
                        'type' => 'textarea',
                        'required' => true,
                        'help' => 'Qui va b√©n√©ficier de vos actions ?'
                    ],
                    'valeurs_fondamentales' => [
                        'label' => 'Valeurs fondamentales',
                        'type' => 'json_array',
                        'help' => 'Quels sont vos principes directeurs ?'
                    ]
                ]
            ],
            'operationnel' => [
                'title' => 'Aspects Op√©rationnels',
                'fields' => [
                    'activites_envisagees' => [
                        'label' => 'Activit√©s envisag√©es',
                        'type' => 'json_array',
                        'required' => true,
                        'help' => 'D√©taillez les types d\'actions que vous comptez mener'
                    ],
                    'territoire_action' => [
                        'label' => 'Territoire d\'action',
                        'type' => 'select',
                        'options' => ['Tarbes', 'Hautes-Pyr√©n√©es', 'Occitanie', 'National', 'International'],
                        'required' => true
                    ],
                    'budget_previsionnel_annuel' => [
                        'label' => 'Budget pr√©visionnel annuel (‚Ç¨)',
                        'type' => 'number',
                        'help' => 'Estimation des besoins financiers annuels'
                    ],
                    'besoins_locaux' => [
                        'label' => 'Besoins en locaux/√©quipements',
                        'type' => 'textarea'
                    ]
                ]
            ],
            'equipe' => [
                'title' => '√âquipe Fondatrice',
                'fields' => [
                    'nb_membres_fondateurs' => [
                        'label' => 'Nombre de membres fondateurs',
                        'type' => 'number',
                        'required' => true,
                        'min' => 2
                    ],
                    'fondateurs_info' => [
                        'label' => 'Informations sur les fondateurs',
                        'type' => 'json_complex',
                        'template' => 'fondateurs_form',
                        'required' => true
                    ],
                    'competences_disponibles' => [
                        'label' => 'Comp√©tences disponibles dans l\'√©quipe',
                        'type' => 'json_array',
                        'help' => 'Inventaire des savoir-faire pr√©sents'
                    ]
                ]
            ],
            'faisabilite' => [
                'title' => '√âtude de Faisabilit√©',
                'fields' => [
                    'analyse_besoins_territoire' => [
                        'label' => 'Analyse des besoins du territoire',
                        'type' => 'textarea',
                        'help' => 'Pourquoi ce projet est-il n√©cessaire ici ?'
                    ],
                    'concurrence_existante' => [
                        'label' => 'Structures existantes similaires',
                        'type' => 'textarea',
                        'help' => 'Quelles autres associations interviennent dans ce domaine ?'
                    ],
                    'complementarite' => [
                        'label' => 'Compl√©mentarit√©/diff√©renciation',
                        'type' => 'textarea',
                        'help' => 'En quoi votre projet apporte-t-il une plus-value ?'
                    ]
                ]
            ]
        ];
        
        return $this->renderProgressiveForm($sections, $projet_id);
    }
    
    /**
     * G√©n√®re les recommandations personnalis√©es selon le profil du projet
     */
    public function generateRecommandations($projet_id)
    {
        $projet = $this->loadProjet($projet_id);
        $recommandations = [];
        
        // Recommandations selon le secteur
        switch ($projet->secteur_activite) {
            case 'culturel':
                $recommandations[] = [
                    'type' => 'financement',
                    'title' => 'Financements culturels Occitanie',
                    'description' => 'Explorez les dispositifs r√©gionaux pour la culture',
                    'actions' => ['Contacter la DRAC Occitanie', 'Regarder les aides R√©gion Occitanie culture']
                ];
                break;
                
            case 'sportif':
                $recommandations[] = [
                    'type' => 'reglementation',
                    'title' => 'Affiliation f√©d√©ration sportive',
                    'description' => 'Pensez √† l\'affiliation √† la f√©d√©ration concern√©e',
                    'actions' => ['Identifier la f√©d√©ration', 'Conna√Ætre les obligations']
                ];
                break;
                
            case 'social':
                $recommandations[] = [
                    'type' => 'agrement',
                    'title' => 'Agr√©ment possible',
                    'description' => 'Certains agr√©ments peuvent √™tre n√©cessaires',
                    'actions' => ['V√©rifier les agr√©ments requis', 'Pr√©parer les dossiers']
                ];
                break;
        }
        
        // Recommandations selon le budget
        if ($projet->budget_previsionnel_annuel > 50000) {
            $recommandations[] = [
                'type' => 'comptabilite',
                'title' => 'Expert-comptable recommand√©',
                'description' => 'Avec ce budget, un expert-comptable sera utile',
                'actions' => ['Consulter nos partenaires experts-comptables']
            ];
        }
        
        // Recommandations selon le territoire
        if ($projet->territoire_action === 'Tarbes' || $projet->territoire_action === 'Hautes-Pyr√©n√©es') {
            $recommandations[] = [
                'type' => 'reseau',
                'title' => 'Maison des Associations de Tarbes',
                'description' => 'Prenez contact avec la Maison des Associations',
                'actions' => ['Rencontrer les responsables', 'D√©couvrir les services propos√©s']
            ];
        }
        
        return $recommandations;
    }
}
```

### **1.2 Documents Fondateurs & Formalit√©s**

**üìÑ Module Documents Fondateurs**

```sql
-- Table d√©taill√©e pour le suivi des documents fondateurs
CREATE TABLE llx_elaska_documents_fondateurs (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_projet_associatif INT NOT NULL,
    
    -- STATUTS
    statuts_rediges BOOLEAN DEFAULT FALSE,
    statuts_version INT DEFAULT 1,
    statuts_document_id INT, -- Lien vers GED Dolibarr
    statuts_modele_utilise VARCHAR(100), -- R√©f√©rence du mod√®le
    conformite_loi_1901 BOOLEAN DEFAULT FALSE,
    statuts_relus_juriste BOOLEAN DEFAULT FALSE,
    date_validation_statuts DATE,
    
    -- SP√âCIFICIT√âS STATUTS
    duree_vie_association ENUM('illimitee', 'limitee') DEFAULT 'illimitee',
    duree_annees INT, -- Si limit√©e
    dissolution_clause TEXT,
    modification_statuts_modalite ENUM('ag_simple', 'ag_qualifiee') DEFAULT 'ag_qualifiee',
    
    -- R√àGLEMENT INT√âRIEUR
    reglement_interieur_necessaire BOOLEAN DEFAULT FALSE,
    reglement_redige BOOLEAN DEFAULT FALSE,
    reglement_document_id INT,
    reglement_sections JSON, -- Sections du r√®glement
    
    -- AG CONSTITUTIVE
    date_ag_constitutive DATE,
    heure_ag_constitutive TIME,
    lieu_ag_constitutive VARCHAR(255),
    adresse_ag_constitutive TEXT,
    convocations_envoyees BOOLEAN DEFAULT FALSE,
    quorum_respect BOOLEAN DEFAULT FALSE,
    pv_ag_constitutive_redige BOOLEAN DEFAULT FALSE,
    pv_document_id INT,
    
    -- √âLECTIONS BUREAU
    president_elu VARCHAR(100),
    president_adresse TEXT,
    tresorier_elu VARCHAR(100),
    secretaire_elu VARCHAR(100),
    autres_membres_bureau JSON,
    
    -- FORMALIT√âS D√âCLARATION
    dossier_declaration_constitue BOOLEAN DEFAULT FALSE,
    pieces_jointes_completes BOOLEAN DEFAULT FALSE,
    declaration_deposee BOOLEAN DEFAULT FALSE,
    date_depot_prefecture DATE,
    prefecture_depot VARCHAR(100) DEFAULT 'Pr√©fecture des Hautes-Pyr√©n√©es',
    mode_depot ENUM('en_ligne', 'courrier', 'guichet') DEFAULT 'en_ligne',
    
    -- NUM√âROS OFFICIELS
    numero_rna VARCHAR(20),
    date_obtention_rna DATE,
    publication_joafe BOOLEAN DEFAULT FALSE,
    date_publication_joafe DATE,
    extrait_joafe_document_id INT,
    
    -- IMMATRICULATION COMPL√âMENTAIRE (si n√©cessaire)
    besoin_siren_siret BOOLEAN DEFAULT FALSE,
    numero_siren VARCHAR(20),
    numero_siret VARCHAR(20),
    motif_immatriculation ENUM('salaries', 'subventions_publiques', 'activite_lucrative', 'autre'),
    date_immatriculation_insee DATE,
    
    -- COMPTES BANCAIRES
    compte_bancaire_ouvert BOOLEAN DEFAULT FALSE,
    banque_choisie VARCHAR(100),
    motifs_choix_banque TEXT,
    compte_numero_masque VARCHAR(20), -- IBAN masqu√© pour affichage
    date_ouverture_compte DATE,
    
    -- ASSURANCES
    assurance_rc_souscrite BOOLEAN DEFAULT FALSE,
    assureur VARCHAR(100),
    numero_police VARCHAR(50),
    date_effet_assurance DATE,
    
    -- REGISTRES OBLIGATOIRES
    registres_mis_en_place BOOLEAN DEFAULT FALSE,
    registre_deliberations BOOLEAN DEFAULT FALSE,
    registre_membres BOOLEAN DEFAULT FALSE,
    
    -- OBLIGATIONS POST-CR√âATION
    declaration_sous_prefecture BOOLEAN DEFAULT FALSE, -- Si n√©cessaire
    affiliation_federation BOOLEAN DEFAULT FALSE, -- Si applicable
    agrement_demande BOOLEAN DEFAULT FALSE, -- Si n√©cessaire
    
    -- SUIVI GLOBAL
    taux_completion DECIMAL(5,2) DEFAULT 0, -- Pourcentage d'avancement
    prochaine_etape TEXT,
    obstacles_rencontres TEXT,
    
    FOREIGN KEY (fk_projet_associatif) REFERENCES llx_elaska_projet_associatif(rowid),
    INDEX idx_rna (numero_rna),
    INDEX idx_completion (taux_completion)
);

-- Table pour le suivi des pi√®ces justificatives
CREATE TABLE llx_elaska_pieces_justificatives_creation (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_documents_fondateurs INT NOT NULL,
    
    -- IDENTIFICATION PI√àCE
    nom_piece VARCHAR(255) NOT NULL,
    type_piece ENUM(
        'cerfa_creation', 'statuts_signes', 'pv_ag_constitutive',
        'liste_dirigeants', 'justificatif_siege', 'piece_identite_dirigeant',
        'autre'
    ) NOT NULL,
    obligatoire BOOLEAN DEFAULT TRUE,
    
    -- STATUT
    piece_fournie BOOLEAN DEFAULT FALSE,
    document_id INT, -- Lien vers GED
    date_fourniture DATE,
    validite_piece ENUM('conforme', 'a_corriger', 'non_conforme'),
    commentaires_validite TEXT,
    
    -- SUIVI
    demandee_le DATE,
    relances_envoyees INT DEFAULT 0,
    derniere_relance DATE,
    
    FOREIGN KEY (fk_documents_fondateurs) REFERENCES llx_elaska_documents_fondateurs(rowid)
);
```

**üñ•Ô∏è Interface Backoffice - Suivi Cr√©ation**

```php
<?php
class ElaskaCreationTracker
{
    public function getDashboardCreation($association_id)
    {
        return [
            'etapes' => [
                'projet' => [
                    'label' => 'D√©finition du projet',
                    'status' => $this->getProjectStatus($association_id),
                    'progress' => $this->calculateProjectProgress($association_id),
                    'actions' => $this->getProjectActions($association_id)
                ],
                'statuts' => [
                    'label' => 'R√©daction des statuts',
                    'status' => $this->getStatutsStatus($association_id),
                    'documents' => $this->getStatutsDocuments($association_id),
                    'template_available' => true
                ],
                'ag_constitutive' => [
                    'label' => 'AG Constitutive',
                    'status' => $this->getAGStatus($association_id),
                    'date_prevue' => $this->getDateAGPrevue($association_id),
                    'checklist' => $this->getAGChecklist($association_id)
                ],
                'declaration' => [
                    'label' => 'D√©claration Pr√©fecture',
                    'status' => $this->getDeclarationStatus($association_id),
                    'prefecture' => 'Pr√©fecture des Hautes-Pyr√©n√©es (Tarbes)',
                    'pieces_requises' => $this->getPiecesRequises($association_id)
                ],
                'finalisation' => [
                    'label' => 'Finalisation & Lancement',
                    'status' => $this->getFinalisationStatus($association_id),
                    'actions' => [
                        'Ouverture compte bancaire',
                        'Souscription assurance RC',
                        'Mise en place registres'
                    ]
                ]
            ],
            'alertes' => $this->getAlertes($association_id),
            'prochaines_echeances' => $this->getProchaines
Echeances($association_id)
        ];
    }
    
    public function generateStatutsTemplate($projet_id)
    {
        $projet = $this->loadProjet($projet_id);
        
        $template = [
            'article_1' => [
                'title' => 'D√©nomination et si√®ge',
                'content' => "Il est fond√© entre les adh√©rents aux pr√©sents statuts une association r√©gie par la loi du 1er juillet 1901 et le d√©cret du 16 ao√ªt 1901, ayant pour titre : \"{$projet->denomination_envisagee}\".\n\nLe si√®ge social est fix√© √† : [ADRESSE SI√àGE].\n\nIl pourra √™tre transf√©r√© par simple d√©cision du Conseil d'Administration."
            ],
            'article_2' => [
                'title' => 'Objet',
                'content' => $projet->objet_social
            ],
            'article_3' => [
                'title' => 'Dur√©e',
                'content' => "La dur√©e de l'association est illimit√©e."
            ],
            // ... Autres articles selon le secteur et les sp√©cificit√©s
        ];
        
        // Adaptation selon le secteur d'activit√©
        $template = $this->adaptTemplateToSector($template, $projet->secteur_activite);
        
        // Adaptation selon le territoire
        $template = $this->adaptTemplateToTerritory($template, $projet->territoire_action);
        
        return $template;
    }
    
    private function adaptTemplateToSector($template, $secteur)
    {
        switch ($secteur) {
            case 'culturel':
                $template['article_special'] = [
                    'title' => 'Activit√©s culturelles',
                    'content' => "L'association peut organiser des manifestations culturelles, percevoir des droits d'entr√©e et demander des subventions publiques."
                ];
                break;
                
            case 'sportif':
                $template['article_special'] = [
                    'title' => 'Affiliation f√©d√©rale',
                    'content' => "L'association pourra s'affilier √† la f√©d√©ration sportive comp√©tente et se conformer √† ses r√®glements."
                ];
                break;
                
            case 'social':
                $template['article_special'] = [
                    'title' => 'Action sociale',
                    'content' => "L'association peut solliciter tous agr√©ments n√©cessaires √† la r√©alisation de son objet social."
                ];
                break;
        }
        
        return $template;
    }
}
```

---

## **2. GOUVERNANCE & VIE ASSOCIATIVE**

### **2.1 Gestion des Instances**

**üë• Module Instances Associatives Avanc√©**

```sql
-- Table de configuration des instances
CREATE TABLE llx_elaska_instances_associatives (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL, -- Association cliente
    
    -- CONFIGURATION ASSEMBL√âE G√âN√âRALE
    ag_frequence ENUM('annuelle', 'semestrielle', 'selon_statuts') DEFAULT 'annuelle',
    ag_mois_habituel ENUM('janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 
                         'juillet', 'ao√ªt', 'septembre', 'octobre', 'novembre', 'd√©cembre'),
    ag_lieu_habituel TEXT,
    ag_convocation_delai_jours INT DEFAULT 15,
    ag_quorum_requis DECIMAL(5,2), -- Pourcentage membres pr√©sents/repr√©sent√©s
    
    -- CONFIGURATION CONSEIL D'ADMINISTRATION
    ca_existe BOOLEAN DEFAULT FALSE,
    ca_nombre_membres INT,
    ca_frequence ENUM('mensuelle', 'bimestrielle', 'trimestrielle', 'selon_besoins'),
    ca_convocation_delai_jours INT DEFAULT 8,
    ca_quorum_requis DECIMAL(5,2),
    
    -- CONFIGURATION BUREAU
    bureau_existe BOOLEAN DEFAULT TRUE,
    bureau_nombre_membres INT,
    bureau_frequence ENUM('hebdomadaire', 'mensuelle', 'bimestrielle', 'selon_besoins'),
    
    -- COMPOSITION ACTUELLE DU BUREAU
    president_nom VARCHAR(100),
    president_email VARCHAR(100),
    president_telephone VARCHAR(20),
    president_mandat_debut DATE,
    president_mandat_fin DATE,
    
    vice_president_nom VARCHAR(100),
    vice_president_email VARCHAR(100),
    
    tresorier_nom VARCHAR(100),
    tresorier_email VARCHAR(100),
    tresorier_mandat_debut DATE,
    tresorier_mandat_fin DATE,
    
    tresorier_adjoint_nom VARCHAR(100),
    
    secretaire_nom VARCHAR(100),
    secretaire_email VARCHAR(100),
    secretaire_mandat_debut DATE,
    secretaire_mandat_fin DATE,
    
    secretaire_adjoint_nom VARCHAR(100),
    
    autres_membres_bureau JSON, -- Postes sp√©cifiques selon l'association
    
    -- CALENDRIER ET PLANIFICATION
    date_derniere_ag DATE,
    date_prochaine_ag DATE,
    ag_extraordinaire_prevue BOOLEAN DEFAULT FALSE,
    
    date_derniere_ca DATE,
    date_prochaine_ca DATE,
    
    date_derniere_bureau DATE,
    date_prochaine_bureau DATE,
    
    -- OUTILS COLLABORATIFS
    outil_agenda_partage VARCHAR(100), -- Google Calendar, Outlook, etc.
    agenda_public_url VARCHAR(500),
    outil_stockage_docs VARCHAR(100), -- Google Drive, OneDrive, etc.
    outil_communication VARCHAR(100), -- Slack, WhatsApp, etc.
    outil_visioconference VARCHAR(100), -- Zoom, Teams, etc.
    
    -- CONFORMIT√â
    derniere_election_bureau DATE,
    prochaine_election_due DATE,
    statuts_a_jour BOOLEAN DEFAULT TRUE,
    reglement_interieur_a_jour BOOLEAN DEFAULT TRUE,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    INDEX idx_prochaine_ag (date_prochaine_ag),
    INDEX idx_elections (prochaine_election_due)
);

-- Table d√©taill√©e des r√©unions
CREATE TABLE llx_elaska_reunion_instance (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_instances INT NOT NULL,
    
    -- TYPE ET IDENTIFICATION
    type_reunion ENUM('ag_ordinaire', 'ag_extraordinaire', 'ca', 'bureau', 'commission') NOT NULL,
    titre_reunion VARCHAR(255),
    numero_reunion INT, -- Num√©rotation annuelle par type
    
    -- PLANIFICATION
    date_reunion DATETIME NOT NULL,
    duree_prevue_minutes INT DEFAULT 120,
    duree_reelle_minutes INT,
    lieu_reunion VARCHAR(255),
    adresse_complete TEXT,
    mode_reunion ENUM('presentiel', 'visio', 'mixte') DEFAULT 'presentiel',
    lien_visio VARCHAR(500),
    
    -- CONVOCATION
    convocation_envoyee BOOLEAN DEFAULT FALSE,
    date_envoi_convocation DATE,
    delai_convocation_jours INT,
    mode_convocation ENUM('email', 'courrier', 'mixte') DEFAULT 'email',
    rappel_envoye BOOLEAN DEFAULT FALSE,
    date_rappel DATE,
    
    -- ORDRE DU JOUR
    ordre_du_jour TEXT NOT NULL,
    points_discussion JSON, -- Points d√©taill√©s avec temps estim√©
    documents_supports JSON, -- Liens vers GED
    documents_preparation_envoyes BOOLEAN DEFAULT FALSE,
    
    -- PARTICIPATION
    nb_membres_convoques INT,
    presents JSON, -- Liste des participants avec statut
    excuses JSON, -- Membres excus√©s avec raison
    procurations JSON, -- Procurations donn√©es
    invites_externes JSON, -- Invit√©s non-membres
    
    -- QUORUM ET VALIDIT√â
    quorum_requis INT,
    quorum_atteint BOOLEAN,
    reunion_valide BOOLEAN,
    motif_invalidite TEXT,
    
    -- D√âROULEMENT
    heure_ouverture TIME,
    heure_cloture TIME,
    president_seance VARCHAR(100),
    secretaire_seance VARCHAR(100),
    
    -- VOTES ET D√âCISIONS
    resolutions_votees JSON, -- R√©solutions avec r√©sultats de vote
    elections_tenues JSON, -- √âlections avec r√©sultats
    motions_adoptees JSON,
    decisions_prises JSON,
    
    -- ACTIONS D√âCID√âES
    actions_decidees JSON, -- Actions avec responsables et √©ch√©ances
    commissions_creees JSON,
    commissions_supprimees JSON,
    
    -- PROC√àS-VERBAL
    pv_redige BOOLEAN DEFAULT FALSE,
    pv_document_id INT, -- Lien vers GED
    pv_approuve BOOLEAN DEFAULT FALSE,
    date_approbation_pv DATE,
    
    -- SUIVI
    diffusion_pv_effectuee BOOLEAN DEFAULT FALSE,
    actions_suivies BOOLEAN DEFAULT FALSE,
    prochaine_reunion_programmee BOOLEAN DEFAULT FALSE,
    
    FOREIGN KEY (fk_instances) REFERENCES llx_elaska_instances_associatives(rowid),
    INDEX idx_type_date (type_reunion, date_reunion),
    INDEX idx_quorum (quorum_atteint)
);

-- Table pour les votes d√©taill√©s
CREATE TABLE llx_elaska_vote_detail (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_reunion INT NOT NULL,
    
    -- R√âSOLUTION
    numero_resolution VARCHAR(20),
    libelle_resolution TEXT NOT NULL,
    texte_complet TEXT,
    
    -- VOTE
    nb_votants INT NOT NULL,
    votes_pour INT NOT NULL,
    votes_contre INT NOT NULL,
    abstentions INT NOT NULL,
    votes_nuls INT DEFAULT 0,
    
    -- R√âSULTAT
    resultat ENUM('adopte', 'rejete', 'reporte') NOT NULL,
    majorite_requise ENUM('simple', 'absolue', 'qualifiee') DEFAULT 'simple',
    majorite_atteinte BOOLEAN,
    
    -- D√âTAIL PAR VOTANT (si n√©cessaire)
    detail_votes JSON, -- Qui a vot√© quoi (si vote nominal)
    
    FOREIGN KEY (fk_reunion) REFERENCES llx_elaska_reunion_instance(rowid)
);
```

### **2.2 Gestion des Membres Approfondie**

```sql
-- Table membres avec gestion compl√®te
CREATE TABLE llx_elaska_membres_association (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL, -- Association
    
    -- IDENTIT√â MEMBRE
    civilite ENUM('M', 'Mme', 'Autre') NOT NULL,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    nom_usage VARCHAR(100), -- Nom marital
    date_naissance DATE,
    lieu_naissance VARCHAR(100),
    nationalite VARCHAR(50) DEFAULT 'Fran√ßaise',
    
    -- CONTACT
    email VARCHAR(100),
    email_secondaire VARCHAR(100),
    telephone VARCHAR(20),
    telephone_portable VARCHAR(20),
    adresse TEXT,
    code_postal VARCHAR(10),
    ville VARCHAR(100),
    pays VARCHAR(50) DEFAULT 'France',
    
    -- ADH√âSION
    numero_membre VARCHAR(20) UNIQUE, -- Num√©ro d'adh√©rent
    type_membre ENUM('actif', 'bienfaiteur', 'honneur', 'fondateur', 'famille') NOT NULL,
    statut_membre ENUM('actif', 'suspendu', 'exclu', 'demissionnaire', 'radie') DEFAULT 'actif',
    
    date_premiere_adhesion DATE NOT NULL,
    date_derniere_adhesion DATE,
    date_fin_adhesion DATE,
    duree_engagement_mois INT, -- Engagement minimum si applicable
    
    -- COTISATIONS
    cotisation_a_jour BOOLEAN DEFAULT FALSE,
    montant_cotisation_annuelle DECIMAL(6,2),
    tarif_applique ENUM('normal', 'reduit', 'etudiant', 'chomeur', 'famille', 'gratuit'),
    mode_paiement_prefere ENUM('virement', 'cheque', 'especes', 'prelevement'),
    prelevement_autorise BOOLEAN DEFAULT FALSE,
    
    -- HISTORIQUE COTISATIONS
    historique_cotisations JSON, -- Ann√©es pay√©es avec montants et dates
    relances_cotisation_envoyees INT DEFAULT 0,
    derniere_relance_cotisation DATE,
    
    -- B√âN√âVOLAT ET ENGAGEMENT
    benevolat_actif BOOLEAN DEFAULT FALSE,
    competences JSON, -- Comp√©tences propos√©es par le membre
    disponibilites JSON, -- Cr√©neaux horaires disponibles
    formations_suivies JSON, -- Formations associatives suivies
    certifications JSON, -- Certifications obtenues (secourisme, etc.)
    
    -- ENGAGEMENT DANS L'ASSOCIATION
    responsabilites_actuelles JSON, -- Postes/fonctions occup√©s actuellement
    responsabilites_passees JSON, -- Historique des responsabilit√©s
    participations_instances JSON, -- AG, CA, Bureau particip√©s
    commissions_membre JSON, -- Commissions auxquelles il participe
    projets_implique JSON, -- Projets dans lesquels il est impliqu√©
    
    -- CENTRES D'INT√âR√äT ET MOTIVATION
    motivations_adhesion TEXT,
    attentes_association TEXT,
    centres_interet JSON,
    autres_associations JSON, -- Autres engagements associatifs
    
    -- COMMUNICATION ET PR√âF√âRENCES
    accepte_newsletter BOOLEAN DEFAULT TRUE,
    accepte_relances BOOLEAN DEFAULT TRUE,
    accepte_sms BOOLEAN DEFAULT FALSE,
    accepte_appels BOOLEAN DEFAULT TRUE,
    preferences_contact ENUM('email', 'telephone', 'courrier', 'sms') DEFAULT 'email',
    langue_communication ENUM('fran√ßais', 'anglais', 'espagnol', 'autre') DEFAULT 'fran√ßais',
    
    -- VIE PRIV√âE ET FAMILLE
    situation_familiale ENUM('celibataire', 'marie', 'pacse', 'divorce', 'veuf'),
    nb_enfants INT DEFAULT 0,
    profession VARCHAR(100),
    employeur VARCHAR(100),
    
    -- URGENCE
    contact_urgence_nom VARCHAR(100),
    contact_urgence_telephone VARCHAR(20),
    contact_urgence_lien VARCHAR(50), -- Parent, conjoint, etc.
    
    -- DONN√âES M√âDICALES (si pertinent pour l'activit√©)
    allergie_connues TEXT,
    medicaments TEXT,
    certificat_medical_valide BOOLEAN DEFAULT FALSE,
    date_certificat_medical DATE,
    
    -- RGPD ET CONSENTEMENTS
    consentement_donnees DATE NOT NULL,
    consentement_communication DATE,
    consentement_photos BOOLEAN DEFAULT FALSE,
    droit_opposition BOOLEAN DEFAULT FALSE,
    derniere_maj_rgpd DATE,
    
    -- SUIVI ADMINISTRATIF
    fiche_completee BOOLEAN DEFAULT FALSE,
    derniere_mise_a_jour DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    notes_internes TEXT, -- Notes r√©serv√©es aux administrateurs
    
    -- ARCHIVAGE
    archive BOOLEAN DEFAULT FALSE,
    date_archivage DATE,
    motif_archivage TEXT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    INDEX idx_association (fk_soc),
    INDEX idx_numero_membre (numero_membre),
    INDEX idx_cotisation (cotisation_a_jour),
    INDEX idx_statut (statut_membre),
    INDEX idx_benevole (benevolat_actif)
);

-- Table pour les activit√©s b√©n√©voles
CREATE TABLE llx_elaska_activite_benevole (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_membre INT NOT NULL,
    
    -- ACTIVIT√â
    titre_activite VARCHAR(255) NOT NULL,
    description_activite TEXT,
    type_activite ENUM('ponctuelle', 'reguliere', 'projet', 'evenement'),
    
    -- P√âRIODE
    date_debut DATE NOT NULL,
    date_fin DATE,
    nb_heures_prevues DECIMAL(5,2),
    nb_heures_realisees DECIMAL(5,2),
    
    -- ORGANISATION
    responsable_activite VARCHAR(100),
    lieu_activite VARCHAR(255),
    materiel_necessaire TEXT,
    formation_requise BOOLEAN DEFAULT FALSE,
    
    -- √âVALUATION
    satisfaction_benevole ENUM('1', '2', '3', '4', '5'),
    commentaire_benevole TEXT,
    evaluation_responsable TEXT,
    
    -- RECONNAISSANCE
    certificat_benevole_emis BOOLEAN DEFAULT FALSE,
    date_emission_certificat DATE,
    
    FOREIGN KEY (fk_membre) REFERENCES llx_elaska_membres_association(rowid),
    INDEX idx_type_activite (type_activite),
    INDEX idx_periode (date_debut, date_fin)
);
```

**üñ•Ô∏è Interface Portail Association - "Mes Membres"**

```jsx
import React, { useState, useEffect } from 'react';
import { Card, Table, Button, Modal, Form, Tabs, Badge, Progress } from 'antd';
import { UserAddOutlined, MailOutlined, FileExcelOutlined, CalendarOutlined } from '@ant-design/icons';

const { TabPane } = Tabs;

const GestionMembres = () => {
    const [membres, setMembres] = useState([]);
    const [statistiques, setStatistiques] = useState({});
    const [loading, setLoading] = useState(true);
    const [modalVisible, setModalVisible] = useState(false);
    const [selectedMember, setSelectedMember] = useState(null);
    const [filtres, setFiltres] = useState({
        statut: 'tous',
        cotisation: 'tous',
        benevole: 'tous'
    });

    useEffect(() => {
        loadMembresData();
    }, [filtres]);

    const loadMembresData = async () => {
        setLoading(true);
        try {
            const response = await fetch('/api/v1/associations/membres', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ filtres })
            });
            const data = await response.json();
            setMembres(data.membres);
            setStatistiques(data.statistiques);
        } catch (error) {
            console.error('Erreur chargement membres:', error);
        } finally {
            setLoading(false);
        }
    };

    const StatsMembres = ({ stats }) => (
        <div className="stats-membres-grid">
            <Card className="stat-card">
                <div className="stat-number">{stats.total_membres}</div>
                <div className="stat-label">Membres Total</div>
            </Card>
            <Card className="stat-card">
                <div className="stat-number">{stats.membres_actifs}</div>
                <div className="stat-label">Membres Actifs</div>
            </Card>
            <Card className="stat-card">
                <div className="stat-number">{stats.cotisations_a_jour}%</div>
                <div className="stat-label">Cotisations √† Jour</div>
                <Progress 
                    percent={stats.cotisations_a_jour} 
                    size="small" 
                    status={stats.cotisations_a_jour > 80 ? 'success' : 'exception'}
                />
            </Card>
            <Card className="stat-card">
                <div className="stat-number">{stats.benevoles_actifs}</div>
                <div className="stat-label">B√©n√©voles Actifs</div>
            </Card>
        </div>
    );

    const FiltresMembres = () => (
        <div className="filtres-container">
            <Form layout="inline">
                <Form.Item label="Statut">
                    <Select 
                        value={filtres.statut}
                        onChange={(value) => setFiltres({...filtres, statut: value})}
                        style={{ width: 120 }}
                    >
                        <Option value="tous">Tous</Option>
                        <Option value="actif">Actifs</Option>
                        <Option value="suspendu">Suspendus</Option>
                        <Option value="exclu">Exclus</Option>
                    </Select>
                </Form.Item>
                <Form.Item label="Cotisation">
                    <Select 
                        value={filtres.cotisation}
                        onChange={(value) => setFiltres({...filtres, cotisation: value})}
                        style={{ width: 120 }}
                    >
                        <Option value="tous">Tous</Option>
                        <Option value="a_jour">√Ä jour</Option>
                        <Option value="en_retard">En retard</Option>
                    </Select>
                </Form.Item>
                <Form.Item label="B√©n√©volat">
                    <Select 
                        value={filtres.benevole}
                        onChange={(value) => setFiltres({...filtres, benevole: value})}
                        style={{ width: 120 }}
                    >
                        <Option value="tous">Tous</Option>
                        <Option value="actif">B√©n√©voles</Option>
                        <Option value="inactif">Non b√©n√©voles</Option>
                    </Select>
                </Form.Item>
            </Form>
        </div>
    );

    const MembresList = () => {
        const columns = [
            {
                title: 'Membre',
                key: 'identite',
                render: (_, record) => (
                    <div>
                        <strong>{record.prenom} {record.nom}</strong>
                        <br />
                        <small>{record.email}</small>
                    </div>
                )
            },
            {
                title: 'N¬∞ Adh√©rent',
                dataIndex: 'numero_membre',
                key: 'numero_membre'
            },
            {
                title: 'Type',
                dataIndex: 'type_membre',
                key: 'type_membre',
                render: (type) => (
                    <Badge 
                        color={
                            type === 'fondateur' ? 'gold' :
                            type === 'bienfaiteur' ? 'purple' :
                            type === 'honneur' ? 'red' : 'blue'
                        }
                        text={type.charAt(0).toUpperCase() + type.slice(1)}
                    />
                )
            },
            {
                title: 'Statut',
                dataIndex: 'statut_membre',
                key: 'statut_membre',
                render: (statut) => (
                    <Badge 
                        status={statut === 'actif' ? 'success' : 'error'}
                        text={statut.charAt(0).toUpperCase() + statut.slice(1)}
                    />
                )
            },
            {
                title: 'Cotisation',
                key: 'cotisation',
                render: (_, record) => (
                    <div>
                        <Badge 
                            status={record.cotisation_a_jour ? 'success' : 'error'}
                            text={record.cotisation_a_jour ? '√Ä jour' : 'En retard'}
                        />
                        <br />
                        <small>{record.montant_cotisation_annuelle}‚Ç¨</small>
                    </div>
                )
            },
            {
                title: 'B√©n√©volat',
                dataIndex: 'benevolat_actif',
                key: 'benevolat_actif',
                render: (actif) => (
                    <Badge 
                        status={actif ? 'processing' : 'default'}
                        text={actif ? 'Actif' : 'Inactif'}
                    />
                )
            },
            {
                title: 'Actions',
                key: 'actions',
                render: (_, record) => (
                    <div className="actions-buttons">
                        <Button 
                            size="small" 
                            onClick={() => voirDetailMembre(record)}
                        >
                            Voir
                        </Button>
                        <Button 
                            size="small" 
                            type="primary"
                            onClick={() => modifierMembre(record)}
                        >
                            Modifier
                        </Button>
                        {!record.cotisation_a_jour && (
                            <Button 
                                size="small" 
                                icon={<MailOutlined />}
                                onClick={() => relancerCotisation(record)}
                            >
                                Relancer
                            </Button>
                        )}
                    </div>
                )
            }
        ];

        return (
            <Table 
                columns={columns}
                dataSource={membres}
                loading={loading}
                rowKey="rowid"
                pagination={{
                    pageSize: 20,
                    showSizeChanger: true,
                    showQuickJumper: true,
                    showTotal: (total, range) => 
                        `${range[0]}-${range[1]} sur ${total} membres`
                }}
            />
        );
    };

    const ActionsRapides = () => (
        <div className="actions-rapides">
            <Button 
                type="primary" 
                icon={<UserAddOutlined />}
                onClick={() => setModalVisible(true)}
            >
                Nouveau Membre
            </Button>
            <Button 
                icon={<MailOutlined />}
                onClick={relancerToutesCotisations}
            >
                Relancer Cotisations
            </Button>
            <Button 
                icon={<FileExcelOutlined />}
                onClick={exporterMembres}
            >
                Exporter Liste
            </Button>
            <Button 
                icon={<CalendarOutlined />}
                onClick={() => setModalVisible(true)}
            >
                Planifier AG
            </Button>
        </div>
    );

    const BenevolatManager = () => (
        <Card title="Gestion du B√©n√©volat" className="benevole-card">
            <Tabs defaultActiveKey="1">
                <TabPane tab="Activit√©s en Cours" key="1">
                    <ActivitesBenevolesEnCours />
                </TabPane>
                <TabPane tab="Comp√©tences Disponibles" key="2">
                    <CompetencesDisponibles />
                </TabPane>
                <TabPane tab="Formations" key="3">
                    <FormationsBenevoles />
                </TabPane>
                <TabPane tab="Reconnaissance" key="4">
                    <ReconnaissanceBenevoles />
                </TabPane>
            </Tabs>
        </Card>
    );

    // Actions
    const voirDetailMembre = (membre) => {
        setSelectedMember(membre);
        // Ouvrir modal d√©tail
    };

    const modifierMembre = (membre) => {
        setSelectedMember(membre);
        setModalVisible(true);
    };

    const relancerCotisation = async (membre) => {
        // Logique de relance individuelle
        await fetch(`/api/v1/associations/membres/${membre.rowid}/relancer`, {
            method: 'POST'
        });
        loadMembresData();
    };

    const relancerToutesCotisations = async () => {
        // Logique de relance group√©e
        await fetch('/api/v1/associations/membres/relancer-cotisations', {
            method: 'POST'
        });
        loadMembresData();
    };

    const exporterMembres = () => {
        // Logique d'export Excel
        window.open('/api/v1/associations/membres/export');
    };

    return (
        <div className="gestion-membres-container">
            <div className="page-header">
                <h1>Gestion des Membres</h1>
                <StatsMembres stats={statistiques} />
            </div>

            <ActionsRapides />
            
            <Card title="Liste des Membres" className="membres-card">
                <FiltresMembres />
                <MembresList />
            </Card>

            <BenevolatManager />

            {/* Modals pour nouveau membre, modifications, etc. */}
            <Modal
                title={selectedMember ? "Modifier Membre" : "Nouveau Membre"}
                visible={modalVisible}
                onCancel={() => setModalVisible(false)}
                width={800}
                footer={null}
            >
                <FormulaireMembre 
                    membre={selectedMember}
                    onSave={() => {
                        setModalVisible(false);
                        loadMembresData();
                    }}
                />
            </Modal>
        </div>
    );
};

export default GestionMembres;
```

---

## **3. RECHERCHE DE FINANCEMENTS**

### **3.1 Veille Financements Sp√©cialis√©e Occitanie/Tarbes**

```sql
-- Table veille financements avec donn√©es locales enrichies
CREATE TABLE llx_elaska_veille_financements (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    
    -- IDENTIFICATION COMPL√àTE
    nom_dispositif VARCHAR(255) NOT NULL,
    nom_court VARCHAR(100), -- Acronyme ou nom usuel
    organisme_financeur VARCHAR(100) NOT NULL,
    type_financeur ENUM(
        'etat', 'region_occitanie', 'departement_65', 'commune_tarbes',
        'europe', 'fondation_privee', 'entreprise_locale', 'autre'
    ) NOT NULL,
    
    -- SP√âCIFICIT√âS LOCALES D√âTAILL√âES
    specificite_hautes_pyrenees TEXT,
    specificite_tarbes TEXT,
    contact_local_nom VARCHAR(100),
    contact_local_email VARCHAR(100),
    contact_local_telephone VARCHAR(20),
    adresse_depot TEXT,
    
    -- √âLIGIBILIT√â PR√âCISE
    secteurs_eligibles JSON NOT NULL, -- Avec sous-secteurs d√©taill√©s
    types_projets JSON NOT NULL, -- Fonctionnement, investissement, action ponctuelle
    territoires_eligibles JSON NOT NULL,
    
    -- CRIT√àRES D'√âLIGIBILIT√â ASSOCIATION
    taille_asso_min_membres INT,
    taille_asso_max_membres INT,
    ca_min_eligibilite DECIMAL(10,2),
    ca_max_eligibilite DECIMAL(10,2),
    anciennete_min_mois INT, -- Anciennet√© minimum de l'association
    
    -- CRIT√àRES SP√âCIFIQUES
    agrement_requis BOOLEAN DEFAULT FALSE,
    agrement_type VARCHAR(100), -- Type d'agr√©ment si requis
    zone_qpv_prioritaire BOOLEAN DEFAULT FALSE, -- Quartier Prioritaire Ville
    zone_rurale_prioritaire BOOLEAN DEFAULT FALSE,
    
    -- CALENDRIER D√âTAILL√â
    type_appel ENUM('permanent', 'session', 'annuel', 'exceptionnel') NOT NULL,
    nb_sessions_par_an INT,
    date_ouverture DATE,
    date_limite_depot DATE,
    date_decision DATE,
    date_versement DATE,
    delai_instruction_jours INT,
    
    -- SESSIONS PROGRAMM√âES
    prochaines_sessions JSON, -- Dates des prochaines sessions
    dates_cloture JSON, -- Historique des dates de cl√¥ture
    
    -- MONTANTS ET FINANCEMENT
    montant_min DECIMAL(8,2),
    montant_max DECIMAL(8,2),
    montant_moyen_accorde DECIMAL(8,2), -- Statistique
    taux_financement_max DECIMAL(5,2), -- Pourcentage du projet
    cofinancement_obligatoire BOOLEAN DEFAULT FALSE,
    part_autofinancement_min DECIMAL(5,2),
    
    -- STATISTIQUES DE R√âUSSITE
    nb_dossiers_deposes_annee INT,
    nb_dossiers_accordes_annee INT,
    taux_reussite DECIMAL(5,2), -- Pourcentage de r√©ussite
    montant_total_distribue DECIMAL(12,2),
    
    -- PROC√âDURE DE CANDIDATURE
    procedure_depot ENUM('en_ligne', 'courrier', 'guichet', 'email') NOT NULL,
    url_candidature VARCHAR(500),
    pieces_justificatives_requises JSON,
    formulaire_specifique_requis BOOLEAN DEFAULT TRUE,
    entretien_requis BOOLEAN DEFAULT FALSE,
    
    -- CRIT√àRES D'√âVALUATION
    criteres_evaluation JSON, -- Crit√®res et pond√©ration
    composition_jury TEXT,
    publicite_decisions BOOLEAN DEFAULT TRUE,
    
    -- SUIVI POST-ATTRIBUTION
    rapport_activite_requis BOOLEAN DEFAULT TRUE,
    frequence_rapports ENUM('trimestriel', 'semestriel', 'annuel'),
    bilan_financier_requis BOOLEAN DEFAULT TRUE,
    visite_terrain_possible BOOLEAN DEFAULT FALSE,
    
    -- RENOUVELLEMENT
    renouvellement_possible BOOLEAN DEFAULT TRUE,
    nb_annees_renouvellement_max INT,
    delai_entre_demandes_mois INT,
    
    -- GESTION ADMINISTRATIVE
    statut_dispositif ENUM('actif', 'suspendu', 'clos', 'archive') DEFAULT 'actif',
    derniere_maj DATE NOT NULL,
    source_information VARCHAR(100), -- D'o√π vient l'info
    fiabilite_info ENUM('confirmee', 'a_verifier', 'rumeur') DEFAULT 'a_verifier',
    
    -- VEILLE ET ALERTES
    alerte_ouverture BOOLEAN DEFAULT TRUE,
    alerte_cloture BOOLEAN DEFAULT TRUE,
    associations_ciblees JSON, -- Associations clientes potentiellement int√©ress√©es
    
    INDEX idx_type_financeur (type_financeur),
    INDEX idx_secteur (secteurs_eligibles(255)),
    INDEX idx_territoire (territoires_eligibles(255)),
    INDEX idx_dates (date_ouverture, date_limite_depot),
    INDEX idx_montants (montant_min, montant_max),
    INDEX idx_statut (statut_dispositif)
);

-- Table pour les organismes financeurs locaux
CREATE TABLE llx_elaska_organismes_financeurs_locaux (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    
    -- IDENTIFICATION
    nom_organisme VARCHAR(255) NOT NULL,
    sigle VARCHAR(50),
    type_organisme ENUM(
        'collectivite', 'etablissement_public', 'fondation',
        'entreprise', 'association', 'autre'
    ) NOT NULL,
    
    -- CONTACT
    adresse TEXT,
    code_postal VARCHAR(10),
    ville VARCHAR(100),
    telephone VARCHAR(20),
    email VARCHAR(100),
    site_web VARCHAR(255),
    
    -- SP√âCIALISATION
    secteurs_intervention JSON,
    zone_intervention ENUM('tarbes', 'hautes_pyrenees', 'occitanie', 'national'),
    politique_soutien TEXT, -- Orientation g√©n√©rale
    
    -- CONTACT PRIVIL√âGI√â
    contact_nom VARCHAR(100),
    contact_fonction VARCHAR(100),
    contact_email VARCHAR(100),
    contact_telephone VARCHAR(20),
    
    -- DISPOSITIFS
    dispositifs_actifs JSON, -- Liste des dispositifs propos√©s
    budget_annuel_estime DECIMAL(10,2),
    
    -- HISTORIQUE PARTENARIAT
    partenaire_elaska BOOLEAN DEFAULT FALSE,
    premiere_collaboration DATE,
    derniere_collaboration DATE,
    nb_dossiers_accompagnes INT DEFAULT 0,
    taux_reussite_elaska DECIMAL(5,2),
    
    INDEX idx_type (type_organisme),
    INDEX idx_zone (zone_intervention)
);

-- Donn√©es initiales Occitanie/Tarbes
INSERT INTO llx_elaska_organismes_financeurs_locaux VALUES
(1, 'R√©gion Occitanie', 'R√©gion', 'collectivite', '22 boulevard du Mar√©chal Juin', '31400', 'Toulouse', '05 61 33 50 50', 'contact@laregion.fr', 'https://www.laregion.fr', 
 '["culturel", "sportif", "social", "environnemental"]', 'occitanie', 'Soutien aux associations d\'int√©r√™t r√©gional', 
 'Service Vie Associative', 'Responsable', 'vie.associative@laregion.fr', '05 61 33 52 00', 
 '["aide_fonctionnement", "aide_projet", "aide_equipement"]', 5000000, TRUE, '2023-01-01', '2024-12-01', 45, 78.5),

(2, 'D√©partement des Hautes-Pyr√©n√©es', 'CD65', 'collectivite', 'Place Charles de Gaulle', '65000', 'Tarbes', '05 62 56 78 65', 'contact@hautespyrenees.fr', 'https://www.hautespyrenees.fr',
 '["social", "sportif", "culturel"]', 'hautes_pyrenees', 'Proximit√© et solidarit√© territoriale',
 'Direction Action Sociale', 'Chef de service', 'associatif@hautespyrenees.fr', '05 62 56 78 90',
 '["subvention_fonctionnement", "aide_transport", "aide_manifestation"]', 800000, TRUE, '2023-01-01', '2024-11-15', 23, 82.1),

(3, 'Ville de Tarbes', 'Tarbes', 'collectivite', 'Place Jean Jaur√®s', '65000', 'Tarbes', '05 62 44 38 38', 'mairie@ville-tarbes.fr', 'https://www.tarbes.fr',
 '["culturel", "sportif", "social", "jeunesse"]', 'tarbes', 'Dynamisme associatif local',
 'Service Associations', 'Responsable', 'associations@ville-tarbes.fr', '05 62 44 39 20',
 '["subvention_annuelle", "aide_ponctuelle", "mise_disposition_locaux"]', 150000, TRUE, '2023-01-01', '2024-12-10', 12, 91.7);
```

### **3.2 Dossiers de Financement Complets**

```sql
-- Table principale des dossiers de subvention
CREATE TABLE llx_elaska_dossier_subvention (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL, -- Association demandeuse
    ref_elaska VARCHAR(50) UNIQUE NOT NULL,
    
    -- FINANCEMENT VIS√â
    fk_dispositif_financement INT,
    organisme_financeur VARCHAR(100) NOT NULL,
    nom_dispositif VARCHAR(255) NOT NULL,
   ```sql
-- Session candidature VARCHAR(100), -- Ex: "Session 1 2024"
    url_dispositif VARCHAR(500),
    
    -- PROJET FINANC√â - DESCRIPTION D√âTAILL√âE
    intitule_projet TEXT NOT NULL,
    description_courte TEXT, -- R√©sum√© en quelques lignes
    description_projet TEXT NOT NULL, -- Description compl√®te
    contexte_projet TEXT, -- Pourquoi ce projet maintenant
    objectifs_generaux JSON NOT NULL, -- Objectifs principaux
    objectifs_operationnels JSON, -- Objectifs mesurables
    
    -- PUBLIC ET TERRITOIRE
    public_beneficiaire TEXT NOT NULL,
    nb_beneficiaires_directs INT,
    nb_beneficiaires_indirects INT,
    caracteristiques_public JSON, -- √Çge, situation sociale, etc.
    territoire_realisation VARCHAR(100) NOT NULL,
    lieux_realisation JSON, -- Adresses pr√©cises
    
    -- PARTENAIRES ET R√âSEAU
    partenaires_projet JSON, -- Partenaires associ√©s
    partenaires_financiers JSON, -- Co-financeurs
    soutiens_institutionnels JSON, -- Soutiens obtenus
    
    -- CALENDRIER PROJET D√âTAILL√â
    date_debut_projet DATE NOT NULL,
    date_fin_projet DATE NOT NULL,
    duree_mois INT NOT NULL,
    phases_projet JSON, -- D√©coupage en phases
    jalons_importants JSON, -- √âch√©ances cl√©s
    
    -- BUDGET PROJET COMPLET
    cout_total_projet DECIMAL(10,2) NOT NULL,
    montant_demande DECIMAL(10,2) NOT NULL,
    part_autofinancement DECIMAL(10,2),
    pourcentage_demande DECIMAL(5,2), -- % du co√ªt total
    
    -- R√âPARTITION BUDGET D√âTAILL√âE
    budget_personnel DECIMAL(8,2),
    budget_charges_sociales DECIMAL(8,2),
    budget_fonctionnement DECIMAL(8,2),
    budget_investissement DECIMAL(8,2),
    budget_communication DECIMAL(8,2),
    budget_formation DECIMAL(8,2),
    budget_deplacement DECIMAL(8,2),
    budget_prestation_externe DECIMAL(8,2),
    budget_autre DECIMAL(8,2),
    
    -- AUTRES FINANCEMENTS
    autres_financements JSON, -- D√©tail autres sources
    financements_obtenus DECIMAL(8,2), -- D√©j√† acquis
    financements_sollicites DECIMAL(8,2), -- En cours
    financements_a_solliciter DECIMAL(8,2), -- √Ä d√©marcher
    
    -- IMPACT ET √âVALUATION
    indicateurs_quantitatifs JSON, -- Mesures chiffr√©es
    indicateurs_qualitatifs JSON, -- Mesures qualitatives
    methode_evaluation TEXT,
    outils_evaluation JSON,
    
    -- INNOVATION ET PLUS-VALUE
    caractere_innovant TEXT,
    plus_value_association TEXT,
    transferabilite_projet TEXT,
    
    -- √âTAT D'AVANCEMENT DOSSIER
    etape_redaction ENUM(
        'reflexion', 'redaction', 'relecture', 'finalise', 'depose'
    ) DEFAULT 'reflexion',
    pourcentage_avancement DECIMAL(5,2) DEFAULT 0,
    
    -- PARTIES DU DOSSIER
    description_association_ok BOOLEAN DEFAULT FALSE,
    description_projet_ok BOOLEAN DEFAULT FALSE,
    budget_detaille_ok BOOLEAN DEFAULT FALSE,
    plan_financement_ok BOOLEAN DEFAULT FALSE,
    calendrier_ok BOOLEAN DEFAULT FALSE,
    evaluation_ok BOOLEAN DEFAULT FALSE,
    
    -- PI√àCES ADMINISTRATIVES
    statuts_association_fournis BOOLEAN DEFAULT FALSE,
    dernier_rapport_activite BOOLEAN DEFAULT FALSE,
    derniers_comptes_approuves BOOLEAN DEFAULT FALSE,
    budget_previsionnel_association BOOLEAN DEFAULT FALSE,
    rib_association BOOLEAN DEFAULT FALSE,
    
    -- D√âP√îT ET SUIVI ADMINISTRATIF
    date_depot DATE,
    mode_depot ENUM('en_ligne', 'courrier', 'main_propre', 'email'),
    accuse_reception BOOLEAN DEFAULT FALSE,
    numero_dossier_organisme VARCHAR(100),
    
    -- INSTRUCTION ET D√âCISION
    date_commission DATE,
    decision ENUM(
        'en_attente', 'en_instruction', 'accorde', 'accorde_partiel', 
        'refuse', 'reporte', 'complement_demande'
    ) DEFAULT 'en_attente',
    montant_accorde DECIMAL(10,2),
    pourcentage_accorde DECIMAL(5,2),
    conditions_attribution TEXT,
    motif_refus TEXT,
    
    -- VERSEMENTS ET SUIVI FINANCIER
    modalites_versement JSON, -- Modalit√©s de paiement
    acompte_verse DECIMAL(8,2),
    date_premier_versement DATE,
    versements_intermediaires JSON, -- Historique versements
    solde_verse DECIMAL(8,2),
    date_solde DATE,
    total_verse DECIMAL(8,2),
    
    -- OBLIGATIONS POST-ATTRIBUTION
    rapport_intermediaire_requis BOOLEAN DEFAULT FALSE,
    date_rapport_intermediaire DATE,
    rapport_intermediaire_rendu BOOLEAN DEFAULT FALSE,
    
    bilan_activite_requis BOOLEAN DEFAULT TRUE,
    date_limite_bilan DATE,
    bilan_activite_rendu BOOLEAN DEFAULT FALSE,
    
    bilan_financier_requis BOOLEAN DEFAULT TRUE,
    bilan_financier_rendu BOOLEAN DEFAULT FALSE,
    
    -- COMMUNICATION ET VALORISATION
    communication_obligatoire TEXT,
    logo_financeur_utilise BOOLEAN DEFAULT FALSE,
    mentions_obligatoires TEXT,
    
    -- RENOUVELLEMENT
    renouvellement_possible BOOLEAN DEFAULT FALSE,
    renouvellement_demande BOOLEAN DEFAULT FALSE,
    
    -- SATISFACTION ET √âVALUATION
    satisfaction_procedure ENUM('1', '2', '3', '4', '5'),
    satisfaction_accompagnement ENUM('1', '2', '3', '4', '5'),
    commentaires_procedure TEXT,
    ameliorations_suggerees TEXT,
    
    -- SUIVI CONSEILLER
    fk_user_accompagnant INT,
    temps_passe_preparation DECIMAL(5,2), -- Heures
    difficultes_rencontrees TEXT,
    points_amelioration TEXT,
    
    -- ARCHIVAGE
    dossier_clos BOOLEAN DEFAULT FALSE,
    date_cloture DATE,
    archive BOOLEAN DEFAULT FALSE,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    FOREIGN KEY (fk_dispositif_financement) REFERENCES llx_elaska_veille_financements(rowid),
    FOREIGN KEY (fk_user_accompagnant) REFERENCES llx_user(rowid),
    INDEX idx_organisme (organisme_financeur),
    INDEX idx_decision (decision),
    INDEX idx_dates (date_depot, date_commission),
    INDEX idx_montants (montant_demande, montant_accorde),
    INDEX idx_etape (etape_redaction)
);

-- Table pour le suivi des interactions avec les financeurs
CREATE TABLE llx_elaska_interaction_financeur (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_dossier_subvention INT NOT NULL,
    
    -- INTERACTION
    date_interaction DATETIME NOT NULL,
    type_interaction ENUM(
        'appel_telephonique', 'email', 'rdv', 'courrier', 
        'visite_terrain', 'commission', 'autre'
    ) NOT NULL,
    sens_interaction ENUM('sortant', 'entrant') NOT NULL,
    
    -- PARTICIPANTS
    interlocuteur_financeur VARCHAR(100),
    fonction_interlocuteur VARCHAR(100),
    participants_association JSON,
    
    -- CONTENU
    objet_interaction TEXT NOT NULL,
    resume_echanges TEXT,
    documents_transmis JSON,
    documents_recus JSON,
    
    -- SUIVI
    points_action JSON, -- Actions √† mener suite √† l'interaction
    prochaine_interaction_prevue DATE,
    satisfaction_interaction ENUM('1', '2', '3', '4', '5'),
    
    FOREIGN KEY (fk_dossier_subvention) REFERENCES llx_elaska_dossier_subvention(rowid),
    INDEX idx_date (date_interaction),
    INDEX idx_type (type_interaction)
);

-- Table pour les documents du dossier
CREATE TABLE llx_elaska_document_subvention (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_dossier_subvention INT NOT NULL,
    
    -- DOCUMENT
    nom_document VARCHAR(255) NOT NULL,
    type_document ENUM(
        'formulaire_candidature', 'budget_detaille', 'plan_financement',
        'description_projet', 'cv_dirigeants', 'lettres_soutien',
        'pieces_administratives', 'annexes', 'autre'
    ) NOT NULL,
    
    -- STATUT
    document_obligatoire BOOLEAN DEFAULT TRUE,
    document_fourni BOOLEAN DEFAULT FALSE,
    document_id INT, -- Lien vers GED Dolibarr
    version_document INT DEFAULT 1,
    
    -- GESTION
    date_creation DATE,
    date_derniere_maj DATE,
    validite_document ENUM('valide', 'a_corriger', 'obsolete'),
    commentaires TEXT,
    
    FOREIGN KEY (fk_dossier_subvention) REFERENCES llx_elaska_dossier_subvention(rowid),
    INDEX idx_type (type_document),
    INDEX idx_statut (document_fourni)
);
```

**üíº Interface Portail Association - "Mes Demandes de Financement"**

```jsx
import React, { useState, useEffect } from 'react';
import { Card, Steps, Timeline, Progress, Button, Table, Tag, Modal, Form, Tabs } from 'antd';
import { 
    FileTextOutlined, 
    EuroCircleOutlined, 
    CalendarOutlined,
    CheckCircleOutlined,
    ClockCircleOutlined,
    ExclamationCircleOutlined 
} from '@ant-design/icons';

const { Step } = Steps;
const { TabPane } = Tabs;

const MesFinancements = () => {
    const [dossiers, setDossiers] = useState([]);
    const [opportunites, setOpportunites] = useState([]);
    const [stats, setStats] = useState({});
    const [loading, setLoading] = useState(true);
    const [selectedDossier, setSelectedDossier] = useState(null);
    const [modalVisible, setModalVisible] = useState(false);

    useEffect(() => {
        loadFinancementsData();
    }, []);

    const loadFinancementsData = async () => {
        try {
            const response = await fetch('/api/v1/associations/financements');
            const data = await response.json();
            setDossiers(data.dossiers);
            setOpportunites(data.opportunites);
            setStats(data.statistiques);
        } catch (error) {
            console.error('Erreur chargement financements:', error);
        } finally {
            setLoading(false);
        }
    };

    const StatsFinancements = ({ stats }) => (
        <div className="stats-financements">
            <Card className="stat-card total-demande">
                <div className="stat-content">
                    <EuroCircleOutlined className="stat-icon" />
                    <div>
                        <div className="stat-number">{stats.total_demande?.toLocaleString()}‚Ç¨</div>
                        <div className="stat-label">Total Demand√©</div>
                    </div>
                </div>
            </Card>
            
            <Card className="stat-card total-obtenu">
                <div className="stat-content">
                    <CheckCircleOutlined className="stat-icon success" />
                    <div>
                        <div className="stat-number">{stats.total_obtenu?.toLocaleString()}‚Ç¨</div>
                        <div className="stat-label">Total Obtenu</div>
                    </div>
                </div>
                <Progress 
                    percent={Math.round((stats.total_obtenu / stats.total_demande) * 100)} 
                    size="small"
                    status="success"
                />
            </Card>
            
            <Card className="stat-card taux-reussite">
                <div className="stat-content">
                    <div className="stat-number">{stats.taux_reussite}%</div>
                    <div className="stat-label">Taux de R√©ussite</div>
                </div>
                <div className="stat-details">
                    {stats.nb_accordes} accord√©s sur {stats.nb_deposes} d√©pos√©s
                </div>
            </Card>
            
            <Card className="stat-card en-cours">
                <div className="stat-content">
                    <ClockCircleOutlined className="stat-icon warning" />
                    <div>
                        <div className="stat-number">{stats.dossiers_en_cours}</div>
                        <div className="stat-label">Dossiers en Cours</div>
                    </div>
                </div>
            </Card>
        </div>
    );

    const DossierCard = ({ dossier, onClick }) => {
        const getStatusColor = (decision) => {
            const colors = {
                'en_attente': 'blue',
                'en_instruction': 'orange',
                'accorde': 'green',
                'accorde_partiel': 'cyan',
                'refuse': 'red',
                'reporte': 'purple'
            };
            return colors[decision] || 'default';
        };

        const getStatusText = (decision) => {
            const texts = {
                'en_attente': 'En Attente',
                'en_instruction': 'En Instruction',
                'accorde': 'Accord√©',
                'accorde_partiel': 'Partiellement Accord√©',
                'refuse': 'Refus√©',
                'reporte': 'Report√©'
            };
            return texts[decision] || decision;
        };

        return (
            <Card 
                className="dossier-card"
                hoverable
                onClick={() => onClick(dossier)}
                actions={[
                    <Button type="link">Voir D√©tail</Button>,
                    <Button type="link">Documents</Button>,
                    <Button type="link">Historique</Button>
                ]}
            >
                <div className="dossier-header">
                    <h3>{dossier.intitule_projet}</h3>
                    <Tag color={getStatusColor(dossier.decision)}>
                        {getStatusText(dossier.decision)}
                    </Tag>
                </div>
                
                <div className="dossier-info">
                    <div className="info-item">
                        <span className="label">Financeur:</span>
                        <span className="value">{dossier.organisme_financeur}</span>
                    </div>
                    <div className="info-item">
                        <span className="label">Montant demand√©:</span>
                        <span className="value">{dossier.montant_demande?.toLocaleString()}‚Ç¨</span>
                    </div>
                    {dossier.montant_accorde > 0 && (
                        <div className="info-item">
                            <span className="label">Montant accord√©:</span>
                            <span className="value success">{dossier.montant_accorde?.toLocaleString()}‚Ç¨</span>
                        </div>
                    )}
                    <div className="info-item">
                        <span className="label">P√©riode:</span>
                        <span className="value">
                            {new Date(dossier.date_debut_projet).toLocaleDateString()} - 
                            {new Date(dossier.date_fin_projet).toLocaleDateString()}
                        </span>
                    </div>
                </div>
                
                {dossier.etape_redaction !== 'depose' && (
                    <div className="progress-section">
                        <div className="progress-label">Avancement du dossier</div>
                        <Progress 
                            percent={dossier.pourcentage_avancement} 
                            size="small"
                            status={dossier.pourcentage_avancement === 100 ? 'success' : 'active'}
                        />
                    </div>
                )}
            </Card>
        );
    };

    const DossiersEnCours = () => (
        <div className="dossiers-en-cours">
            <div className="section-header">
                <h2>Dossiers en Cours ({dossiers.filter(d => ['en_attente', 'en_instruction'].includes(d.decision)).length})</h2>
                <Button type="primary" onClick={() => setModalVisible(true)}>
                    Nouveau Dossier
                </Button>
            </div>
            
            <div className="dossiers-grid">
                {dossiers
                    .filter(d => ['en_attente', 'en_instruction', 'complement_demande'].includes(d.decision))
                    .map(dossier => (
                        <DossierCard 
                            key={dossier.rowid}
                            dossier={dossier}
                            onClick={setSelectedDossier}
                        />
                    ))
                }
            </div>
        </div>
    );

    const OpportunitesCard = ({ opportunites }) => {
        const [filtres, setFiltres] = useState({
            secteur: 'tous',
            territoire: 'tous',
            montant: 'tous'
        });

        const opportunitesFiltrees = opportunites.filter(opp => {
            if (filtres.secteur !== 'tous' && !opp.secteurs_eligibles.includes(filtres.secteur)) return false;
            if (filtres.territoire !== 'tous' && !opp.territoires_eligibles.includes(filtres.territoire)) return false;
            return true;
        });

        return (
            <Card title="Nouvelles Opportunit√©s" className="opportunites-card">
                <div className="filtres-opportunites">
                    <Form layout="inline">
                        <Form.Item label="Secteur">
                            <Select 
                                value={filtres.secteur}
                                onChange={(value) => setFiltres({...filtres, secteur: value})}
                                style={{ width: 120 }}
                            >
                                <Option value="tous">Tous</Option>
                                <Option value="culturel">Culturel</Option>
                                <Option value="sportif">Sportif</Option>
                                <Option value="social">Social</Option>
                                <Option value="environnemental">Environnemental</Option>
                            </Select>
                        </Form.Item>
                        <Form.Item label="Territoire">
                            <Select 
                                value={filtres.territoire}
                                onChange={(value) => setFiltres({...filtres, territoire: value})}
                                style={{ width: 120 }}
                            >
                                <Option value="tous">Tous</Option>
                                <Option value="tarbes">Tarbes</Option>
                                <Option value="hautes_pyrenees">Hautes-Pyr√©n√©es</Option>
                                <Option value="occitanie">Occitanie</Option>
                                <Option value="national">National</Option>
                            </Select>
                        </Form.Item>
                    </Form>
                </div>

                <div className="opportunites-list">
                    {opportunitesFiltrees.map(opp => (
                        <Card key={opp.rowid} className="opportunite-item" size="small">
                            <div className="opportunite-header">
                                <h4>{opp.nom_dispositif}</h4>
                                <Tag color="blue">{opp.organisme_financeur}</Tag>
                            </div>
                            
                            <div className="opportunite-details">
                                <div className="detail-row">
                                    <span className="label">Montant:</span>
                                    <span>{opp.montant_min?.toLocaleString()}‚Ç¨ - {opp.montant_max?.toLocaleString()}‚Ç¨</span>
                                </div>
                                
                                {opp.date_limite_depot && (
                                    <div className="detail-row">
                                        <span className="label">Date limite:</span>
                                        <span className="date-limite">
                                            {new Date(opp.date_limite_depot).toLocaleDateString()}
                                        </span>
                                    </div>
                                )}
                                
                                <div className="detail-row">
                                    <span className="label">Territoire:</span>
                                    <span>{opp.territoires_eligibles.join(', ')}</span>
                                </div>
                            </div>
                            
                            <div className="opportunite-actions">
                                <Button size="small" type="primary">
                                    Candidater
                                </Button>
                                <Button size="small">
                                    Plus d'infos
                                </Button>
                            </div>
                        </Card>
                    ))}
                </div>
            </Card>
        );
    };

    const FinancementsObtenus = ({ dossiers }) => {
        const dossiersObtenus = dossiers.filter(d => ['accorde', 'accorde_partiel'].includes(d.decision));
        
        const columns = [
            {
                title: 'Projet',
                dataIndex: 'intitule_projet',
                key: 'projet'
            },
            {
                title: 'Financeur',
                dataIndex: 'organisme_financeur',
                key: 'financeur'
            },
            {
                title: 'Montant Accord√©',
                key: 'montant',
                render: (_, record) => (
                    <span className="montant-accorde">
                        {record.montant_accorde?.toLocaleString()}‚Ç¨
                    </span>
                )
            },
            {
                title: 'Versements',
                key: 'versements',
                render: (_, record) => (
                    <div className="versements-info">
                        <Progress 
                            percent={Math.round((record.total_verse / record.montant_accorde) * 100)}
                            size="small"
                            format={(percent) => `${percent}%`}
                        />
                        <div className="versement-detail">
                            {record.total_verse?.toLocaleString()}‚Ç¨ / {record.montant_accorde?.toLocaleString()}‚Ç¨
                        </div>
                    </div>
                )
            },
            {
                title: 'Obligations',
                key: 'obligations',
                render: (_, record) => (
                    <div className="obligations">
                        {record.bilan_activite_requis && (
                            <Tag color={record.bilan_activite_rendu ? 'green' : 'orange'}>
                                Bilan activit√©
                            </Tag>
                        )}
                        {record.bilan_financier_requis && (
                            <Tag color={record.bilan_financier_rendu ? 'green' : 'orange'}>
                                Bilan financier
                            </Tag>
                        )}
                    </div>
                )
            }
        ];

        return (
            <Card title="Financements Obtenus" className="financements-obtenus">
                <Table 
                    columns={columns}
                    dataSource={dossiersObtenus}
                    pagination={false}
                    size="small"
                />
            </Card>
        );
    };

    const CalendrierEcheances = () => {
        const [echeances, setEcheances] = useState([]);

        useEffect(() => {
            // Calculer les √©ch√©ances importantes
            const echeancesCalculees = [];
            
            dossiers.forEach(dossier => {
                // √âch√©ances de d√©p√¥t
                if (dossier.decision === 'en_attente' && dossier.date_limite_depot) {
                    echeancesCalculees.push({
                        date: dossier.date_limite_depot,
                        type: 'depot',
                        title: `D√©p√¥t: ${dossier.intitule_projet}`,
                        description: `D√©p√¥t dossier ${dossier.organisme_financeur}`,
                        urgence: 'haute'
                    });
                }
                
                // √âch√©ances de bilan
                if (dossier.decision === 'accorde' && dossier.date_limite_bilan && !dossier.bilan_activite_rendu) {
                    echeancesCalculees.push({
                        date: dossier.date_limite_bilan,
                        type: 'bilan',
                        title: `Bilan: ${dossier.intitule_projet}`,
                        description: `Remise bilan d'activit√©`,
                        urgence: 'moyenne'
                    });
                }
            });
            
            // Trier par date
            echeancesCalculees.sort((a, b) => new Date(a.date) - new Date(b.date));
            setEcheances(echeancesCalculees);
        }, [dossiers]);

        return (
            <Card title="Prochaines √âch√©ances" className="calendrier-echeances">
                <Timeline>
                    {echeances.slice(0, 5).map((echeance, index) => (
                        <Timeline.Item
                            key={index}
                            color={echeance.urgence === 'haute' ? 'red' : echeance.urgence === 'moyenne' ? 'orange' : 'blue'}
                            dot={echeance.type === 'depot' ? <FileTextOutlined /> : <CalendarOutlined />}
                        >
                            <div className="echeance-item">
                                <div className="echeance-date">
                                    {new Date(echeance.date).toLocaleDateString()}
                                </div>
                                <div className="echeance-title">{echeance.title}</div>
                                <div className="echeance-description">{echeance.description}</div>
                            </div>
                        </Timeline.Item>
                    ))}
                </Timeline>
                
                {echeances.length > 5 && (
                    <Button type="link">Voir toutes les √©ch√©ances ({echeances.length})</Button>
                )}
            </Card>
        );
    };

    return (
        <div className="financements-dashboard">
            <div className="dashboard-header">
                <h1>Mes Financements</h1>
                <StatsFinancements stats={stats} />
            </div>
            
            <Tabs defaultActiveKey="en-cours" className="financements-tabs">
                <TabPane tab="Dossiers en Cours" key="en-cours">
                    <DossiersEnCours />
                </TabPane>
                
                <TabPane tab="Opportunit√©s" key="opportunites">
                    <OpportunitesCard opportunites={opportunites} />
                </TabPane>
                
                <TabPane tab="Financements Obtenus" key="obtenus">
                    <FinancementsObtenus dossiers={dossiers} />
                </TabPane>
                
                <TabPane tab="√âch√©ances" key="echeances">
                    <CalendrierEcheances />
                </TabPane>
            </Tabs>

            {/* Modal d√©tail dossier */}
            <Modal
                title="D√©tail du Dossier"
                visible={selectedDossier !== null}
                onCancel={() => setSelectedDossier(null)}
                width={1000}
                footer={null}
            >
                {selectedDossier && (
                    <DetailDossierSubvention dossier={selectedDossier} />
                )}
            </Modal>
        </div>
    );
};

export default MesFinancements;
```

---

## **4. GESTION ADMINISTRATIVE & COMPTABLE**

### **4.1 Pr√©-comptabilit√© Associative Avanc√©e**

```sql
-- Table comptabilit√© association avec d√©tails obligatoire
CREATE TABLE llx_elaska_comptabilite_association (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    exercice_annee INT NOT NULL,
    
    -- CONFIGURATION COMPTABLE
    comptabilite_engagement BOOLEAN DEFAULT FALSE, -- Sinon tr√©sorerie
    seuils_depasses JSON, -- Quels seuils ont √©t√© d√©pass√©s
    expert_comptable VARCHAR(100),
    logiciel_comptable VARCHAR(100),
    tenue_comptabilite ENUM('interne', 'expert_comptable', 'mixte') DEFAULT 'interne',
    
    -- SEUILS R√âGLEMENTAIRES (mise √† jour annuelle)
    seuil_subventions_publiques DECIMAL(8,2) DEFAULT 23000, -- Seuil 2024
    seuil_bilan_simplifie DECIMAL(10,2) DEFAULT 175000,
    seuil_commissaire_comptes DECIMAL(10,2) DEFAULT 153000,
    
    -- RECETTES D√âTAILL√âES PAR NATURE
    cotisations_membres DECIMAL(8,2) DEFAULT 0,
    
    -- Subventions publiques d√©taill√©es
    subventions_etat DECIMAL(8,2) DEFAULT 0,
    subventions_region DECIMAL(8,2) DEFAULT 0,
    subventions_departement DECIMAL(8,2) DEFAULT 0,
    subventions_commune DECIMAL(8,2) DEFAULT 0,
    subventions_europe DECIMAL(8,2) DEFAULT 0,
    total_subventions_publiques DECIMAL(10,2) GENERATED ALWAYS AS (
        subventions_etat + subventions_region + subventions_departement + 
        subventions_commune + subventions_europe
    ) STORED,
    
    -- Ressources priv√©es
    dons_particuliers DECIMAL(8,2) DEFAULT 0,
    mecenat_entreprises DECIMAL(8,2) DEFAULT 0,
    legs_donations DECIMAL(8,2) DEFAULT 0,
    
    -- Ressources d'activit√©
    revenus_manifestations DECIMAL(8,2) DEFAULT 0,
    ventes_marchandises DECIMAL(8,2) DEFAULT 0,
    prestations_services DECIMAL(8,2) DEFAULT 0,
    
    -- Ressources financi√®res
    produits_financiers DECIMAL(6,2) DEFAULT 0,
    produits_placement DECIMAL(6,2) DEFAULT 0,
    
    autres_recettes DECIMAL(8,2) DEFAULT 0,
    total_recettes DECIMAL(10,2) GENERATED ALWAYS AS (
        cotisations_membres + total_subventions_publiques + dons_particuliers + 
        mecenat_entreprises + legs_donations + revenus_manifestations + 
        ventes_marchandises + prestations_services + produits_financiers + 
        produits_placement + autres_recettes
    ) STORED,
    
    -- D√âPENSES D√âTAILL√âES PAR NATURE
    -- Charges de personnel
    salaires_bruts DECIMAL(8,2) DEFAULT 0,
    charges_sociales_patronales DECIMAL(8,2) DEFAULT 0,
    autres_charges_personnel DECIMAL(6,2) DEFAULT 0,
    total_charges_personnel DECIMAL(8,2) GENERATED ALWAYS AS (
        salaires_bruts + charges_sociales_patronales + autres_charges_personnel
    ) STORED,
    
    -- Achats et charges externes
    achats_fournitures DECIMAL(6,2) DEFAULT 0,
    locations DECIMAL(6,2) DEFAULT 0,
    entretien_reparations DECIMAL(6,2) DEFAULT 0,
    assurances DECIMAL(4,2) DEFAULT 0,
    communication_publicite DECIMAL(4,2) DEFAULT 0,
    deplacement_missions DECIMAL(6,2) DEFAULT 0,
    services_exterieurs DECIMAL(6,2) DEFAULT 0,
    honoraires DECIMAL(6,2) DEFAULT 0,
    
    -- Charges diverses
    impots_taxes DECIMAL(4,2) DEFAULT 0,
    charges_financieres DECIMAL(4,2) DEFAULT 0,
    charges_exceptionnelles DECIMAL(6,2) DEFAULT 0,
    dotations_amortissements DECIMAL(6,2) DEFAULT 0,
    autres_charges DECIMAL(8,2) DEFAULT 0,
    
    total_charges DECIMAL(10,2) GENERATED ALWAYS AS (
        total_charges_personnel + achats_fournitures + locations + 
        entretien_reparations + assurances + communication_publicite + 
        deplacement_missions + services_exterieurs + honoraires + 
        impots_taxes + charges_financieres + charges_exceptionnelles + 
        dotations_amortissements + autres_charges
    ) STORED,
    
    -- R√âSULTAT ET FONDS ASSOCIATIFS
    resultat_exercice DECIMAL(8,2) GENERATED ALWAYS AS (
        total_recettes - total_charges
    ) STORED,
    fonds_associatifs_debut DECIMAL(10,2),
    reserves_cumulees DECIMAL(10,2),
    fonds_associatifs_fin DECIMAL(10,2) GENERATED ALWAYS AS (
        fonds_associatifs_debut + resultat_exercice
    ) STORED,
    
    -- BILAN SIMPLIFI√â (si applicable)
    actif_immobilise DECIMAL(10,2),
    actif_circulant DECIMAL(10,2),
    tresorerie_actif DECIMAL(8,2),
    total_actif DECIMAL(10,2),
    
    fonds_associatifs_bilan DECIMAL(10,2),
    provisions_risques DECIMAL(8,2),
    dettes DECIMAL(8,2),
    total_passif DECIMAL(10,2),
    
    -- RATIOS FINANCIERS
    ratio_independance DECIMAL(5,2), -- Fonds propres / Total passif
    ratio_liquidite DECIMAL(5,2), -- Actif circulant / Dettes CT
    ratio_charges_personnel DECIMAL(5,2), -- Charges personnel / Total charges
    
    -- OBLIGATIONS ET CONTR√îLES
    depot_comptes_prefecture BOOLEAN DEFAULT FALSE,
    date_depot_comptes DATE,
    rapport_activite_redige BOOLEAN DEFAULT FALSE,
    ag_approbation_tenue BOOLEAN DEFAULT FALSE,
    date_ag_approbation DATE,
    
    -- Commissaire aux comptes
    commissaire_comptes_obligatoire BOOLEAN DEFAULT FALSE,
    commissaire_comptes_designe BOOLEAN DEFAULT FALSE,
    nom_commissaire_comptes VARCHAR(100),
    rapport_commissaire_rendu BOOLEAN DEFAULT FALSE,
    
    -- Contr√¥les externes
    controle_urssaf_date DATE,
    controle_urssaf_conforme BOOLEAN DEFAULT TRUE,
    controle_inspection_travail_date DATE,
    controle_dgfip_date DATE,
    
    -- CERTIFICATION ET LABELLISATION
    certification_ideas BOOLEAN DEFAULT FALSE, -- Certification IDEAS
    label_don_confiance BOOLEAN DEFAULT FALSE,
    autre_certification VARCHAR(100),
    
    -- SUIVI ET ALERTES
    alerte_seuils_actives BOOLEAN DEFAULT TRUE,
    prochaine_echeance_comptable DATE,
    commentaires_exercice TEXT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    UNIQUE KEY unique_exercice (fk_soc, exercice_annee),
    INDEX idx_exercice (exercice_annee),
    INDEX idx_seuils (total_subventions_publiques)
);

-- Table pour le suivi des pi√®ces comptables
CREATE TABLE llx_elaska_piece_comptable (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_comptabilite INT NOT NULL,
    
    -- PI√àCE
    numero_piece VARCHAR(50) NOT NULL,
    date_piece DATE NOT NULL,
    type_piece ENUM(
        'facture_achat', 'facture_vente', 'recu_don', 'virement', 
        'cheque', 'especes', 'carte_bancaire', 'autre'
    ) NOT NULL,
    
    -- TIERS
    tiers_nom VARCHAR(255),
    tiers_type ENUM('fournisseur', 'client', 'donateur', 'financeur', 'autre'),
    
    -- MONTANTS
    montant_ht DECIMAL(8,2),
    montant_tva DECIMAL(6,2),
    montant_ttc DECIMAL(8,2) NOT NULL,
    
    -- CLASSIFICATION
    compte_comptable VARCHAR(20),
    libelle_compte VARCHAR(255),
    nature_recette_depense VARCHAR(100),
    
    -- DOCUMENTS
    document_id INT, -- Lien vers GED
    justificatif_fourni BOOLEAN DEFAULT TRUE,
    
    -- VALIDATION
    piece_validee BOOLEAN DEFAULT FALSE,
    validee_par INT, -- Utilisateur ayant valid√©
    date_validation DATE,
    
    FOREIGN KEY (fk_comptabilite) REFERENCES llx_elaska_comptabilite_association(rowid),
    INDEX idx_date (date_piece),
    INDEX idx_type (type_piece),
    INDEX idx_validation (piece_validee)
);
```

### **4.2 Obligations L√©gales Compl√®tes**

```sql
-- Table obligations l√©gales avec suivi automatis√©
CREATE TABLE llx_elaska_obligations_legales (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    exercice_annee INT NOT NULL,
    
    -- D√âCLARATIONS OBLIGATOIRES
    declaration_prefecture_modificative JSON, -- Historique des d√©clarations
    derniere_declaration_dirigeants DATE,
    prochaine_declaration_due DATE,
    
    -- D√©clarations sp√©cifiques
    declaration_activite_lucratives BOOLEAN DEFAULT FALSE,
    declaration_dons_manuels BOOLEAN DEFAULT FALSE,
    declaration_emplois_francs BOOLEAN DEFAULT FALSE,
    
    -- RAPPORTS ANNUELS
    rapport_activite_fait BOOLEAN DEFAULT FALSE,
    rapport_activite_date DATE,
    rapport_financier_fait BOOLEAN DEFAULT FALSE,
    rapport_financier_date DATE,
    comptes_approuves_ag BOOLEAN DEFAULT FALSE,
    date_ag_approbation DATE,
    
    -- D√âP√îT EN PR√âFECTURE
    depot_comptes_obligatoire BOOLEAN DEFAULT FALSE,
    depot_comptes_fait BOOLEAN DEFAULT FALSE,
    date_depot_comptes DATE,
    depot_demat√©rialise BOOLEAN DEFAULT TRUE,
    
    -- PUBLICATION JOAFE
    publication_joafe_obligatoire BOOLEAN DEFAULT FALSE,
    publication_joafe_faite BOOLEAN DEFAULT FALSE,
    date_publication_joafe DATE,
    
    -- RGPD ET PROTECTION DONN√âES
    rgpd_conforme BOOLEAN DEFAULT FALSE,
    registre_traitements_tenu BOOLEAN DEFAULT FALSE,
    registre_traitements_date_maj DATE,
    politique_confidentialite_publiee BOOLEAN DEFAULT FALSE,
    dpo_designe BOOLEAN DEFAULT FALSE,
    nom_dpo VARCHAR(100),
    
    -- ASSURANCES OBLIGATOIRES ET RECOMMAND√âES
    assurance_responsabilite_civile BOOLEAN DEFAULT TRUE,
    assurance_rc_numero_police VARCHAR(50),
    assurance_rc_echeance DATE,
    assurance_rc_montant_garantie DECIMAL(10,2),
    
    assurance_locaux BOOLEAN DEFAULT FALSE,
    assurance_locaux_echeance DATE,
    
    assurance_dirigeants BOOLEAN DEFAULT FALSE,
    assurance_dirigeants_echeance DATE,
    
    assurance_activite_specifique BOOLEAN DEFAULT FALSE,
    assurance_activite_type VARCHAR(100), -- Ex: responsabilit√© professionnelle
    
    -- SP√âCIFICIT√âS SECTORIELLES
    autorisation_prefecture BOOLEAN DEFAULT FALSE,
    autorisation_numero VARCHAR(50),
    autorisation_echeance DATE,
    
    licence_sportive BOOLEAN DEFAULT FALSE,
    federation_affiliation VARCHAR(100),
    licence_numero VARCHAR(50),
    
    agrement_education_populaire BOOLEAN DEFAULT FALSE,
    agrement_numero VARCHAR(50),
    agrement_echeance DATE,
    
    agrement_jeunesse_sport BOOLEAN DEFAULT FALSE,
    agrement_service_civique BOOLEAN DEFAULT FALSE,
    
    -- OBLIGATIONS EMPLOYEUR (si salari√©s)
    nb_salaries_declares INT DEFAULT 0,
    declaration_urssaf_a_jour BOOLEAN DEFAULT TRUE,
    medecine_travail_a_jour BOOLEAN DEFAULT TRUE,
    document_unique_risques_fait BOOLEAN DEFAULT FALSE,
    document_unique_date_maj DATE,
    
    registre_personnel_tenu BOOLEAN DEFAULT FALSE,
    elections_dp_a_jour BOOLEAN DEFAULT TRUE, -- D√©l√©gu√©s du personnel
    
    formation_securite_faite BOOLEAN DEFAULT FALSE,
    visite_medicale_embauche_faite BOOLEAN DEFAULT TRUE,
    
    -- OBLIGATIONS FISCALES SP√âCIFIQUES
    declaration_fiscale_1330_faite BOOLEAN DEFAULT FALSE, -- Associations
    exoneration_impots_commerciaux BOOLEAN DEFAULT TRUE,
    
    -- CONTR√îLES ET V√âRIFICATIONS
    controle_urssaf_date DATE,
    controle_urssaf_conforme BOOLEAN DEFAULT TRUE,
    controle_inspection_travail_date DATE,
    controle_it_conforme BOOLEAN DEFAULT TRUE,
    
    -- ALERTES ET √âCH√âANCES
    prochaines_echeances JSON, -- Calcul automatique des prochaines √©ch√©ances
    alertes_non_conformite JSON, -- Liste des non-conformit√©s
    score_conformite DECIMAL(5,2), -- Score global de conformit√©
    
    -- ACCOMPAGNEMENT
    formation_dirigeants_suivie BOOLEAN DEFAULT FALSE,
    formation_dirigeants_date DATE,
    conseil_juridique_utilise BOOLEAN DEFAULT FALSE,
    
    -- SUIVI HISTORIQUE
    derniere_verification DATE,
    prochaine_verification DATE,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    UNIQUE KEY unique_exercice_obligations (fk_soc, exercice_annee),
    INDEX idx_conformite (score_conformite),
    INDEX idx_echeances (prochaine_verification)
);

-- Table pour le calendrier des obligations
CREATE TABLE llx_elaska_calendrier_obligations (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    fk_soc INT NOT NULL,
    
    -- OBLIGATION
    type_obligation ENUM(
        'ag_annuelle', 'depot_comptes', 'declaration_dirigeants',
        'renouvellement_assurance', 'renouvellement_agrement',
        'declaration_urssaf', 'visite_medicale', 'formation_obligatoire',
        'controle_periodique', 'autre'
    ) NOT NULL,
    libelle_obligation VARCHAR(255) NOT NULL,
    description_obligation TEXT,
    
    -- P√âRIODICIT√â
    periodicite ENUM('annuelle', 'semestrielle', 'trimestrielle', 'mensuelle', 'ponctuelle') NOT NULL,
    mois_echeance INT, -- Mois de l'√©ch√©ance pour les obligations annuelles
    jour_echeance INT, -- Jour du mois pour les obligations mensuelles
    
    -- DATES
    derniere_execution DATE,
    prochaine_echeance DATE NOT NULL,
    delai_alerte_jours INT DEFAULT 30, -- D√©lai d'alerte avant √©ch√©ance
    
    -- STATUT
    statut_execution ENUM('en_attente', 'en_cours', 'execute', 'retard') DEFAULT 'en_attente',
    execution_validee BOOLEAN DEFAULT FALSE,
    
    -- RESPONSABILIT√â
    responsable_execution VARCHAR(100), -- Qui doit s'en occuper
    rappel_active BOOLEAN DEFAULT TRUE,
    
    -- DOCUMENTS
    documents_requis JSON, -- Liste des documents n√©cessaires
    documents_fournis JSON, -- Documents effectivement fournis
    
    -- CO√õT
    cout_estime DECIMAL(6,2),
    cout_reel DECIMAL(6,2),
    
    -- NOTES
    notes_execution TEXT,
    difficultes_rencontrees TEXT,
    
    FOREIGN KEY (fk_soc) REFERENCES llx_societe(rowid),
    INDEX idx_echeance (prochaine_echeance),
    INDEX idx_type (type_obligation),
    INDEX idx_statut (statut_execution)
);
```

**üñ•Ô∏è Interface Backoffice - Suivi Obligations**

```php
<?php
class ElaskaObligationsManager
{
    private $db;
    
    public function __construct($db)
    {
        $this->db = $db;
    }
    
    /**
     * Calcule le score de conformit√© d'une association
     */
    public function calculateConformityScore($association_id, $exercice = null)
    {
        if (!$exercice) {
            $exercice = date('Y');
        }
        
        $obligations = $this->getObligationsForAssociation($association_id, $exercice);
        $total_obligations = count($obligations);
        $obligations_conformes = 0;
        
        foreach ($obligations as $obligation) {
            if ($this->isObligationConforme($obligation)) {
                $obligations_conformes++;
            }
        }
        
        $score = $total_obligations > 0 ? ($obligations_conformes / $total_obligations) * 100 : 100;
        
        // Mise √† jour en base
        $this->updateConformityScore($association_id, $exercice, $score);
        
        return round($score, 2);
    }
    
    /**
     * G√©n√®re les alertes pour les √©ch√©ances proches
     */
    public function generateUpcomingAlerts($association_id, $days_ahead = 30)
    {
        $sql = "SELECT * FROM " . MAIN_DB_PREFIX . "elaska_calendrier_obligations 
                WHERE fk_soc = " . (int)$association_id . "
                AND prochaine_echeance BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL " . (int)$days_ahead . " DAY)
                AND statut_execution IN ('en_attente', 'en_cours')
                ORDER BY prochaine_echeance ASC";
        
        $result = $this->db->query($sql);
        $alerts = [];
        
        while ($obj = $this->db->fetch_object($result)) {
            $days_until = (strtotime($obj->prochaine_echeance) - time()) / (60 * 60 * 24);
            
            $urgency = 'low';
            if ($days_until <= 7) $urgency = 'high';
            elseif ($days_until <= 15) $urgency = 'medium';
            
            $alerts[] = [
                'id' => $obj->rowid,
                'type' => $obj->type_obligation,
                'libelle' => $obj->libelle_obligation,
                'echeance' => $obj->prochaine_echeance,
                'days_until' => round($days_until),
                'urgency' => $urgency,
                'responsable' => $obj->responsable_execution
            ];
        }
        
        return $alerts;
    }
    
    /**
     * Planifie automatiquement les obligations selon le profil de l'association
     */
    public function setupObligationsCalendar($association_id)
    {
        $association = new Societe($this->db);
        $association->fetch($association_id);
        
        // Obligations communes √† toutes les associations
        $common_obligations = [
            [
                'type' => 'ag_annuelle',
                'libelle' => 'Assembl√©e G√©n√©rale Annuelle',
                'periodicite' => 'annuelle',
                'mois_echeance' => 6, // Juin par d√©faut
                'delai_alerte' => 60
            ],
            [
                'type' => 'depot_comptes',
                'libelle' => 'D√©p√¥t des comptes en pr√©fecture',
                'periodicite' => 'annuelle',
                'mois_echeance' => 12,
                'delai_alerte' => 30
            ],
            [
                'type' => 'declaration_dirigeants',
                'libelle' => 'D√©claration de changement de dirigeants',
                'periodicite' => 'ponctuelle',
                'delai_alerte' => 0
            ],
            [
                'type' => 'renouvellement_assurance',
                'libelle' => 'Renouvellement assurance RC',
                'periodicite' => 'annuelle',
                'delai_alerte' => 30
            ]
        ];
        
        // Obligations sp√©cifiques selon le secteur
        $secteur = $this->getAssociationSector($association_id);
        $specific_obligations = $this->getSectorSpecificObligations($secteur);
        
        // Obligations employeur si salari√©s
        if ($this->hasSalaries($association_id)) {
            $employer_obligations = $this->getEmployerObligations();
            $common_obligations = array_merge($common_obligations, $employer_obligations);
        }
        
        // Insertion en base
        foreach (array_merge($common_obligations, $specific_obligations) as $obligation) {
            $this->createObligationCalendar($association_id, $obligation);
        }
    }
    
    /**
     * G√©n√®re un rapport de conformit√© d√©taill√©
     */
    public function generateConformityReport($association_id, $exercice = null)
    {
        $report = [
            'score_global' => $this->calculateConformityScore($association_id, $exercice),
            'obligations_conformes' => [],
            'obligations_non_conformes' => [],
            'alertes_urgentes' => [],
            'recommandations' => []
        ];
        
        $obligations = $this->getDetailedObligations($association_id, $exercice);
        
        foreach ($obligations as $obligation) {
            if ($this->isObligationConforme($obligation)) {
                $report['obligations_conformes'][] = $obligation;
            } else {
                $report['obligations_non_conformes'][] = $obligation;
                
                // G√©n√©ration de recommandations
                $recommendation = $this->generateRecommendation($obligation);
                if ($recommendation) {
                    $report['recommandations'][] = $recommendation;
                }
            }
        }
        
        $report['alertes_urgentes'] = $this->generateUpcomingAlerts($association_id, 15);
        
        return $report;
    }
    
    /**
     * Automatise les rappels selon les pr√©f√©rences de l'association
     */
    public function processAutomaticReminders()
    {
        $sql = "SELECT co.*, s.nom as association_name, s.email 
                FROM " . MAIN_DB_PREFIX . "elaska_calendrier_obligations co
                JOIN " . MAIN_DB_PREFIX . "societe s ON co.fk_soc = s.rowid
                WHERE co.prochaine_echeance BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL co.delai_alerte_jours DAY)
                AND co.rappel_active = 1
                AND co.statut_execution = 'en_attente'";
        
        $result = $this->db->query($sql);
        
        while ($obj = $this->db->fetch_object($result)) {
            $this->sendObligationReminder($obj);
        }
    }
    
    private function sendObligationReminder($obligation)
    {
        // Logique d'envoi de rappel (email, notification, etc.)
        $email_template = $this->getEmailTemplate('obligation_reminder');
        $email_content = $this->populateEmailTemplate($email_template, $obligation);
        
        // Envoi de l'email
        $this->sendEmail($obligation->email, $email_content);
        
        // Log du rappel envoy√©
        $this->logReminderSent($obligation->rowid);
    }
}
```
3.6bis Module Accompagnement Sp√©cifique des Cr√©ateurs d'Entreprises (Version Compl√®te)
3.6bis.1 Architecture Fonctionnelle pour Cr√©ateurs
Structure des donn√©es enrichie :

PHP
class ElaskaCreateur extends ElaskaClient {
    // Phase pr√©-cr√©ation
    public $phase_projet;           // idea/validation/business_plan/financement/creation/lancement
    public $idee_initiale;          // Description du concept
    public $proposition_valeur;     // Proposition de valeur unique
    public $etude_marche_statut;    // non_faite/en_cours/terminee/validee
    public $business_plan_statut;   // brouillon/redaction/finalise/valide_expert
    
    // Choix structurels
    public $forme_juridique_visee;  // EI/micro/EURL/SASU/SARL/SAS
    public $regime_fiscal_prevu;    // IR/IS/micro_social/reel
    public $secteur_activite_naf;   // Code NAF d√©taill√©
    
    // Aides et financements
    public $aides_eligibles;        // JSON: ACRE/ARCE/pr√™ts_honneur/subventions
    public $dossiers_aides;         // Array des dossiers d'aides d√©pos√©s
    
    // Formalit√©s cr√©ation
    public $dossier_immatriculation_statut; // preparation/depot/en_cours/finalisee
    public $numero_siret;           // Apr√®s immatriculation
    public $date_debut_activite;
    
    // Organisation administrative
    public $outil_facturation_choisi;
    public $expert_comptable_choisi; // Lien vers Tiers partenaire
    public $assureur_choisi;        // Lien vers Tiers partenaire
}
3.6bis.2 Timeline Sp√©cialis√©e Cr√©ation (Bas√©e sur votre description)
Phase 1 : Pr√©-Cr√©ation - Structuration du Projet

jsx
const PhasePreCreation = ({ createurId }) => {
  const etapes = [
    {
      id: 'clarification_idee',
      libelle: 'De l\'id√©e au projet',
      description: 'Clarification, validation id√©e, √©tude march√© pr√©liminaire',
      documents_requis: ['fiche_concept', 'etude_marche_preliminaire'],
      duree_estimee: '2-4 semaines',
      outils_aide: ['template_business_model_canvas', 'guide_etude_marche']
    },
    {
      id: 'business_plan',
      libelle: 'Business Plan',
      description: 'Structuration, co-r√©daction, collecte infos pr√©visionnels',
      documents_requis: ['business_plan_complet', 'previsionnels_financiers'],
      duree_estimee: '4-6 semaines',
      note_importante: 'Validation finale par expert-comptable obligatoire'
    },
    {
      id: 'choix_statut',
      libelle: 'Choix Statut Juridique',
      description: 'Information options (EI/micro/EURL/SASU/SARL/SAS)',
      documents_requis: ['comparatif_statuts', 'simulation_charges'],
      duree_estimee: '1-2 semaines',
      avertissement: 'Information uniquement - consultation juriste recommand√©e'
    },
    {
      id: 'recherche_aides',
      libelle: 'Aides √† la Cr√©ation',
      description: 'ACRE, ARCE, pr√™ts honneur, subventions Occitanie',
      documents_requis: ['dossiers_aides', 'justificatifs_eligibilite'],
      duree_estimee: '2-3 semaines',
      partenaires_locaux: ['Initiative_Pyrenees', 'CCI_Tarbes', 'Region_Occitanie']
    }
  ];
  
  return <TimelinePhase etapes={etapes} phase="pre_creation" />;
};
Phase 2 : Cr√©ation et Formalit√©s

jsx
const PhaseCreation = ({ createurId }) => {
  const etapes = [
    {
      id: 'dossier_immatriculation',
      libelle: 'Constitution Dossier Immatriculation',
      description: 'Formulaires P0/M0, pi√®ces justificatives',
      documents_requis: ['formulaire_P0_M0', 'pieces_justificatives'],
      duree_estimee: '1-2 semaines',
      plateforme: 'Guichet Unique INPI'
    },
    {
      id: 'redaction_statuts',
      libelle: 'R√©daction Statuts',
      description: 'Statuts simplifi√©s ou validation juriste si complexe',
      documents_requis: ['statuts_societe'],
      duree_estimee: '1 semaine',
      condition: 'Soci√©t√© uniquement',
      avertissement: 'Juriste obligatoire pour cas complexes'
    },
    {
      id: 'formalites_guichet_unique',
      libelle: 'D√©marches Guichet Unique',
      description: 'Accompagnement plateforme INPI, organismes comp√©tents',
      documents_requis: ['dossier_complet_numerise'],
      duree_estimee: '1 semaine',
      delai_traitement: '2-15 jours selon statut'
    },
    {
      id: 'formalites_bancaires_assurance',
      libelle: 'Compte Pro & Assurances',
      description: 'Ouverture compte pro, assurances obligatoires',
      documents_requis: ['convention_compte_pro', 'contrats_assurance'],
      duree_estimee: '1-2 semaines',
      partenaires: ['banques_partenaires', 'courtiers_assurance']
    }
  ];
  
  return <TimelinePhase etapes={etapes} phase="creation_formalites" />;
};
Phase 3 : Lancement et Premiers Pas

jsx
const PhaseLancement = ({ createurId }) => {
  const etapes = [
    {
      id: 'organisation_administrative',
      libelle: 'Organisation Administrative',
      description: 'Classement, outil facturation, √©ch√©ancier fiscal/social',
      documents_requis: ['procedure_classement', 'parametrage_facturation'],
      duree_estimee: '1 semaine',
      outils_recommandes: ['logiciel_facturation', 'planning_obligations']
    },
    {
      id: 'premieres_obligations',
      libelle: 'Premi√®res Obligations',
      description: 'D√©clarations CA (micro), TVA, cotisations sociales',
      documents_requis: ['calendrier_declarations', 'procedures_declarer'],
      duree_estimee: 'R√©current',
      formation: 'Formation pratique aux d√©clarations'
    },
    {
      id: 'mise_en_relation_experts',
      libelle: 'R√©seau Partenaires',
      description: 'Experts-comptables, avocats, assureurs Tarbes/Occitanie',
      documents_requis: ['annuaire_partenaires', 'recommandations'],
      duree_estimee: '1 semaine',
      objectif: 'Constitution √©quipe conseil'
    }
  ];
  
  return <TimelinePhase etapes={etapes} phase="lancement" />;
};
3.6bis.3 Module Aides Sp√©cifiques Occitanie/Tarbes
Base de donn√©es aides locales :

SQL
-- Table aides sp√©cifiques r√©gion
CREATE TABLE llx_elaska_aide_locale (
    rowid INT PRIMARY KEY AUTO_INCREMENT,
    code_aide VARCHAR(50) UNIQUE,
    nom_aide VARCHAR(255),
    organisme_financeur VARCHAR(255),
    type_aide ENUM('subvention','pret_honneur','exoneration','accompagnement'),
    zone_geographique ENUM('nationale','occitanie','hautes_pyrenees','tarbes','communaute_agglo'),
    secteurs_eligibles JSON, -- Codes NAF √©ligibles
    conditions_eligibilite TEXT,
    montant_min DECIMAL(10,2),
    montant_max DECIMAL(10,2),
    url_information VARCHAR(500),
    contact_referent VARCHAR(255),
    periode_depot_debut DATE,
    periode_depot_fin DATE,
    actif BOOLEAN DEFAULT TRUE
);

-- Donn√©es initiales Occitanie/Tarbes
INSERT INTO llx_elaska_aide_locale VALUES
(1, 'ACRE', 'Aide √† la Cr√©ation/Reprise Entreprise', 'URSSAF', 'exoneration', 'nationale', '[]', 'Demandeur emploi, b√©n√©ficiaire minima sociaux...', 0, 0, 'https://www.urssaf.fr/acre', '', NULL, NULL, 1),
(2, 'INITIATIVE_PYRENEES', 'Pr√™t d\'honneur Initiative Pyr√©n√©es', 'Initiative Pyr√©n√©es', 'pret_honneur', 'hautes_pyrenees', '[]', 'Cr√©ation/reprise entreprise Hautes-Pyr√©n√©es', 1000, 50000, 'https://initiative-pyrenees.fr', 'contact@initiative-pyrenees.fr', NULL, NULL, 1),
(3, 'AIDE_CREATION_OCCITANIE', 'Aide Cr√©ation Entreprise R√©gion Occitanie', 'R√©gion Occitanie', 'subvention', 'occitanie', '[]', 'Premier emploi cr√©√©, innovation', 2000, 8000, 'https://www.laregion.fr/aide-creation', '', NULL, NULL, 1),
(4, 'CCI_TARBES_ACCOMPAGNEMENT', 'Accompagnement CCI Tarbes', 'CCI Tarbes et Hautes-Pyr√©n√©es', 'accompagnement', 'hautes_pyrenees', '[]', 'Entreprises Hautes-Pyr√©n√©es', 0, 0, 'https://www.tarbes.cci.fr', 'creation@tarbes.cci.fr', NULL, NULL, 1);
3.6bis.4 Portail Cr√©ateur Enrichi
Dashboard sp√©cialis√© :

jsx
const DashboardCreateur = () => {
  const { parcours, aides, echeances } = useCreateurData();
  
  return (
    <div className="dashboard-createur">
      <WidgetProgression 
        phaseActuelle={parcours.phase_actuelle}
        progression={parcours.pourcentage_avancement}
        prochaine_etape={parcours.prochaine_etape}
      />
      
      <WidgetAides 
        aides_eligibles={aides.eligibles}
        dossiers_en_cours={aides.en_cours}
        aides_obtenues={aides.obtenues}
      />
      
      <WidgetEcheances 
        obligations_fiscales={echeances.fiscales}
        obligations_sociales={echeances.sociales}
        rdv_conseillers={echeances.rdv}
      />
      
      <WidgetDocuments 
        documents_a_fournir={parcours.documents_manquants}
        templates_disponibles={parcours.templates}
      />
    </div>
  );
};
3.6bis.5 Int√©gration avec Partenaires Locaux
Annuaire dynamique Tarbes/Occitanie :

PHP
// Gestion partenaires sp√©cialis√©s cr√©ation
class ElaskaPartenaireCreation extends CommonObject {
    public $nom_partenaire;
    public $type_partenaire; // expert_comptable/avocat/assureur/accompagnement
    public $specialites;     // JSON: secteurs, types de cr√©ation
    public $zone_intervention; // tarbes/hautes_pyrenees/occitanie
    public $tarifs_moyens;   // Informations tarifaires si disponibles
    public $evaluations_clients; // Notes et commentaires clients
    public $contact_direct;  // Email/t√©l√©phone contact privil√©gi√©
}
Exemples partenaires Tarbes :

Initiative Pyr√©n√©es (pr√™ts d'honneur)
CCI Tarbes et Hautes-Pyr√©n√©es (accompagnement)
CMA des Hautes-Pyr√©n√©es (artisans)
Crescendo Tarbes (p√©pini√®re d'entreprises)
Experts-comptables sp√©cialis√©s cr√©ation
Avocats droit des affaires r√©gion Occitanie
3.6bis.6 Workflows Automatis√©s Cr√©ation
R√®gles m√©tier sp√©cialis√©es :

PHP
$creation_workflows = [
    // Passage phase business plan -> validation expert obligatoire
    [
        'trigger' => 'business_plan_finalise',
        'actions' => [
            'create_task' => 'Planifier RDV validation expert-comptable',
            'send_notification' => 'Business plan pr√™t - validation expert requise',
            'block_next_phase' => true // Bloque jusqu'√† validation
        ]
    ],
    
    // Eligibilit√© aide d√©tect√©e -> proposition automatique
    [
        'trigger' => 'profil_createur_updated',
        'conditions' => ['demandeur_emploi' => true, 'zone' => 'hautes_pyrenees'],
        'actions' => [
            'suggest_aide' => ['ACRE', 'INITIATIVE_PYRENEES'],
            'create_task' => 'Pr√©parer dossiers aides √©ligibles'
        ]
    ],
    
    // Immatriculation finalis√©e -> setup administratif
    [
        'trigger' => 'siret_obtenu',
        'actions' => [
            'activate_phase' => 'lancement',
            'create_tasks' => [
                'Ouvrir compte bancaire professionnel',
                'Souscrire assurances obligatoires',
                'Param√©trer outil facturation'
            ],
            'schedule_formation' => 'Gestion administrative premiers pas'
        ]
    ]
];
